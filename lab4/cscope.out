cscope 15 $HOME/codes/compiler_labs/lab4               0000160191
	@absyn.c

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"absyn.h
"

9 
	~<°dlib.h
>

10 
	~<°dio.h
>

11 
A_v¨
 
	$A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
)

12 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

13 
p
->
köd
=
A_sim∂eV¨
;

14 
p
->
pos
=pos;

15 
p
->
u
.
sim∂e
=
sym
;

16  
p
;

17 
	}
}

19 
A_v¨
 
	$A_FõldV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
S_symbﬁ
 
sym
)

20 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

21 
p
->
köd
=
A_fõldV¨
;

22 
p
->
pos
=pos;

23 
p
->
u
.
fõld
.
v¨
=var;

24 
p
->
u
.
fõld
.
sym
=sym;

25  
p
;

26 
	}
}

28 
A_v¨
 
	$A_Subs¸ùtV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

29 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

30 
p
->
köd
=
A_subs¸ùtV¨
;

31 
p
->
pos
=pos;

32 
p
->
u
.
subs¸ùt
.
v¨
=var;

33 
p
->
u
.
subs¸ùt
.
exp
=exp;

34  
p
;

35 
	}
}

38 
A_exp
 
	$A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
)

39 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

40 
p
->
köd
=
A_v¨Exp
;

41 
p
->
pos
=pos;

42 
p
->
u
.
v¨
=var;

43  
p
;

44 
	}
}

46 
A_exp
 
	$A_NûExp
(
A_pos
 
pos
)

47 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

48 
p
->
köd
=
A_nûExp
;

49 
p
->
pos
=pos;

50  
p
;

51 
	}
}

53 
A_exp
 
	$A_I¡Exp
(
A_pos
 
pos
, 
i
)

54 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

55 
p
->
köd
=
A_ötExp
;

56 
p
->
pos
=pos;

57 
p
->
u
.
öâ
=
i
;

58  
p
;

59 
	}
}

61 
A_exp
 
	$A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
)

63 
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

64 
p
->
köd
=
A_°rögExp
;

65 
p
->
pos
=pos;

66 
p
->
u
.
°rögg
=
s
;

67  
p
;

68 
	}
}

70 
A_exp
 
	$A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
)

71 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

72 
p
->
köd
=
A_ˇŒExp
;

73 
p
->
pos
=pos;

74 
p
->
u
.
ˇŒ
.
func
=func;

75 
p
->
u
.
ˇŒ
.
¨gs
=args;

76  
p
;

77 
	}
}

79 
A_exp
 
	$A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, 
A_exp
 
À·
, A_ex∞
right
)

80 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

81 
p
->
köd
=
A_›Exp
;

82 
p
->
pos
=pos;

83 
p
->
u
.
›
.
›î
=oper;

84 
p
->
u
.
›
.
À·
=left;

85 
p
->
u
.
›
.
right
=right;

86  
p
;

87 
	}
}

89 
A_exp
 
	$A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
)

90 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

91 
p
->
köd
=
A_ªc‹dExp
;

92 
p
->
pos
=pos;

93 
p
->
u
.
ªc‹d
.
typ
=typ;

94 
p
->
u
.
ªc‹d
.
fõlds
=fields;

95  
p
;

96 
	}
}

98 
A_exp
 
	$A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
)

99 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

100 
p
->
köd
=
A_£qExp
;

101 
p
->
pos
=pos;

102 
p
->
u
.
£q
=seq;

103  
p
;

104 
	}
}

106 
A_exp
 
	$A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

107 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

108 
p
->
köd
=
A_assignExp
;

109 
p
->
pos
=pos;

110 
p
->
u
.
assign
.
v¨
=var;

111 
p
->
u
.
assign
.
exp
=exp;

112  
p
;

113 
	}
}

115 
A_exp
 
	$A_IfExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
)

116 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

117 
p
->
köd
=
A_ifExp
;

118 
p
->
pos
=pos;

119 
p
->
u
.
iff
.
ã°
=test;

120 
p
->
u
.
iff
.
thí
=then;

121 
p
->
u
.
iff
.
ñ£e
=elsee;

122  
p
;

123 
	}
}

125 
A_exp
 
	$A_WhûeExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
body
)

126 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

127 
p
->
köd
=
A_whûeExp
;

128 
p
->
pos
=pos;

129 
p
->
u
.
whûì
.
ã°
=test;

130 
p
->
u
.
whûì
.
body
=body;

131  
p
;

132 
	}
}

134 
A_exp
 
	$A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, 
A_exp
 
lo
, A_ex∞
hi
, A_ex∞
body
)

135 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

136 
p
->
köd
=
A_f‹Exp
;

137 
p
->
pos
=pos;

138 
p
->
u
.
f‹r
.
v¨
=var;

139 
p
->
u
.
f‹r
.
lo
=lo;

140 
p
->
u
.
f‹r
.
hi
=hi;

141 
p
->
u
.
f‹r
.
body
=body;

142 
p
->
u
.
f‹r
.
esˇ≥
=
TRUE
;

143  
p
;

144 
	}
}

146 
A_exp
 
	$A_BªakExp
(
A_pos
 
pos
)

147 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

148 
p
->
köd
=
A_bªakExp
;

149 
p
->
pos
=pos;

150  
p
;

151 
	}
}

153 
A_exp
 
	$A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, 
A_exp
 
body
)

154 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

155 
p
->
köd
=
A_ÀtExp
;

156 
p
->
pos
=pos;

157 
p
->
u
.
Àt
.
decs
=decs;

158 
p
->
u
.
Àt
.
body
=body;

159  
p
;

160 
	}
}

162 
A_exp
 
	$A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_exp
 
size
, A_ex∞
öô
)

163 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

164 
p
->
köd
=
A_¨øyExp
;

165 
p
->
pos
=pos;

166 
p
->
u
.
¨øy
.
typ
=typ;

167 
p
->
u
.
¨øy
.
size
=size;

168 
p
->
u
.
¨øy
.
öô
=init;

169  
p
;

170 
	}
}

172 
A_dec
 
	$A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
)

173 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

174 
p
->
köd
=
A_fun˘i⁄Dec
;

175 
p
->
pos
=pos;

176 
p
->
u
.
fun˘i⁄
=function;

177  
p
;

178 
	}
}

180 
A_dec
 
	$A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
)

181 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

182 
p
->
köd
=
A_v¨Dec
;

183 
p
->
pos
=pos;

184 
p
->
u
.
v¨
.var=var;

185 
p
->
u
.
v¨
.
typ
=typ;

186 
p
->
u
.
v¨
.
öô
=init;

187 
p
->
u
.
v¨
.
esˇ≥
=
TRUE
;

188  
p
;

189 
	}
}

191 
A_dec
 
	$A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
)

192 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

193 
p
->
köd
=
A_ty≥Dec
;

194 
p
->
pos
=pos;

195 
p
->
u
.
ty≥
=type;

196  
p
;

197 
	}
}

199 
A_ty
 
	$A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
)

200 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

201 
p
->
köd
=
A_«meTy
;

202 
p
->
pos
=pos;

203 
p
->
u
.
«me
=name;

204  
p
;

205 
	}
}

207 
A_ty
 
	$A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
)

208 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

209 
p
->
köd
=
A_ªc‹dTy
;

210 
p
->
pos
=pos;

211 
p
->
u
.
ªc‹d
=record;

212  
p
;

213 
	}
}

215 
A_ty
 
	$A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
)

216 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

217 
p
->
köd
=
A_¨øyTy
;

218 
p
->
pos
=pos;

219 
p
->
u
.
¨øy
=array;

220  
p
;

221 
	}
}

223 
A_fõld
 
	$A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
)

224 {
A_fõld
 
p
 = 
	`checked_mÆloc
((*p));

225 
p
->
pos
=pos;

226 
p
->
«me
=name;

227 
p
->
typ
=typ;

228 
p
->
esˇ≥
=
TRUE
;

229  
p
;

230 
	}
}

232 
A_fõldLi°
 
	$A_FõldLi°
(
A_fõld
 
hód
, 
A_fõldLi°
 
èû
)

233 {
A_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

234 
p
->
hód
=head;

235 
p
->
èû
=tail;

236  
p
;

237 
	}
}

239 
A_expLi°
 
	$A_ExpLi°
(
A_exp
 
hód
, 
A_expLi°
 
èû
)

240 {
A_expLi°
 
p
 = 
	`checked_mÆloc
((*p));

241 
p
->
hód
=head;

242 
p
->
èû
=tail;

243  
p
;

244 
	}
}

246 
A_fundec
 
	$A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

247 
A_exp
 
body
)

248 {
A_fundec
 
p
 = 
	`checked_mÆloc
((*p));

249 
p
->
pos
=pos;

250 
p
->
«me
=name;

251 
p
->
∑øms
=params;

252 
p
->
ªsu…
=result;

253 
p
->
body
=body;

254  
p
;

255 
	}
}

257 
A_fundecLi°
 
	$A_FundecLi°
(
A_fundec
 
hód
, 
A_fundecLi°
 
èû
)

258 {
A_fundecLi°
 
p
 = 
	`checked_mÆloc
((*p));

259 
p
->
hód
=head;

260 
p
->
èû
=tail;

261  
p
;

262 
	}
}

264 
A_decLi°
 
	$A_DecLi°
(
A_dec
 
hód
, 
A_decLi°
 
èû
)

265 {
A_decLi°
 
p
 = 
	`checked_mÆloc
((*p));

266 
p
->
hód
=head;

267 
p
->
èû
=tail;

268  
p
;

269 
	}
}

271 
A_«mëy
 
	$A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
)

272 {
A_«mëy
 
p
 = 
	`checked_mÆloc
((*p));

273 
p
->
«me
=name;

274 
p
->
ty
=ty;

275  
p
;

276 
	}
}

278 
A_«mëyLi°
 
	$A_NamëyLi°
(
A_«mëy
 
hód
, 
A_«mëyLi°
 
èû
)

279 {
A_«mëyLi°
 
p
 = 
	`checked_mÆloc
((*p));

280 
p
->
hód
=head;

281 
p
->
èû
=tail;

282  
p
;

283 
	}
}

285 
A_efõld
 
	$A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
)

286 {
A_efõld
 
p
 = 
	`checked_mÆloc
((*p));

287 
p
->
«me
=name;

288 
p
->
exp
=exp;

289  
p
;

290 
	}
}

292 
A_efõldLi°
 
	$A_EfõldLi°
(
A_efõld
 
hód
, 
A_efõldLi°
 
èû
)

293 {
A_efõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

294 
p
->
hód
=head;

295 
p
->
èû
=tail;

296  
p
;

297 
	}
}

	@absyn.h

1 #i‚de‡
ABSYN_H


2 
	#ABSYN_H


	)

12 
	tA_pos
;

14 
A_v¨_
 *
	tA_v¨
;

15 
A_exp_
 *
	tA_exp
;

16 
A_dec_
 *
	tA_dec
;

17 
A_ty_
 *
	tA_ty
;

19 
A_decLi°_
 *
	tA_decLi°
;

20 
A_expLi°_
 *
	tA_expLi°
;

21 
A_fõld_
 *
	tA_fõld
;

22 
A_fõldLi°_
 *
	tA_fõldLi°
;

23 
A_fundec_
 *
	tA_fundec
;

24 
A_fundecLi°_
 *
	tA_fundecLi°
;

25 
A_«mëy_
 *
	tA_«mëy
;

26 
A_«mëyLi°_
 *
	tA_«mëyLi°
;

27 
A_efõld_
 *
	tA_efõld
;

28 
A_efõldLi°_
 *
	tA_efõldLi°
;

30 íum {
	mA_∂usOp
, 
	mA_möusOp
, 
	mA_timesOp
, 
	mA_divideOp
,

31 
	mA_eqOp
, 
	mA_√qOp
, 
	mA_…Op
, 
	mA_ÀOp
, 
	mA_gtOp
, 
	mA_geOp
} 
	tA_›î
;

33 
	sA_v¨_


35 íum {
	mA_sim∂eV¨
, 
	mA_fõldV¨
, 
	mA_subs¸ùtV¨
} 
	mköd
;

36 
A_pos
 
	mpos
;

40 
S_symbﬁ
 
	msim∂e
;

42 °ru˘ {
A_v¨
 
	mv¨
; 
S_symbﬁ
 
	msym
;} 
	mfõld
;

44 °ru˘ {
A_v¨
 
	mv¨
; 
A_exp
 
	mexp
;} 
	msubs¸ùt
;

45 } 
	mu
;

48 
	sA_exp_


50 íum {
	mA_v¨Exp
, 
	mA_nûExp
, 
	mA_ötExp
, 
	mA_°rögExp
, 
	mA_ˇŒExp
,

51 
	mA_›Exp
, 
	mA_ªc‹dExp
, 
	mA_£qExp
, 
	mA_assignExp
, 
	mA_ifExp
,

52 
	mA_whûeExp
, 
	mA_f‹Exp
, 
	mA_bªakExp
, 
	mA_ÀtExp
, 
	mA_¨øyExp
} 
	mköd
;

54 
A_pos
 
	mpos
;

58 
A_v¨
 
	mv¨
;

60 
	möâ
;

61 
°rög
 
	m°rögg
;

62 °ru˘ {
S_symbﬁ
 
	mfunc
; 
A_expLi°
 
	m¨gs
;} 
	mˇŒ
;

63 °ru˘ {
A_›î
 
	m›î
; 
A_exp
 
	mÀ·
; A_ex∞
	mright
;} 
	m›
;

64 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_efõldLi°
 
	mfõlds
;} 
	mªc‹d
;

65 
A_expLi°
 
	m£q
;

66 °ru˘ {
A_v¨
 
	mv¨
; 
A_exp
 
	mexp
;} 
	massign
;

67 °ru˘ {
A_exp
 
	mã°
, 
	mthí
, 
	mñ£e
;} 
	miff
;

68 °ru˘ {
A_exp
 
	mã°
, 
	mbody
;} 
	mwhûì
;

69 °ru˘ {
S_symbﬁ
 
	mv¨
; 
A_exp
 
	mlo
,
	mhi
,
	mbody
; 
boﬁ
 
	mesˇ≥
;} 
	mf‹r
;

71 °ru˘ {
A_decLi°
 
	mdecs
; 
A_exp
 
	mbody
;} 
	mÀt
;

72 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_exp
 
	msize
, 
	möô
;} 
	m¨øy
;

73 } 
	mu
;

76 
	sA_dec_


78 íum {
	mA_fun˘i⁄Dec
, 
	mA_v¨Dec
, 
	mA_ty≥Dec
} 
	mköd
;

79 
A_pos
 
	mpos
;

83 
A_fundecLi°
 
	mfun˘i⁄
;

85 °ru˘ {
S_symbﬁ
 
	mv¨
; S_symbﬁ 
	mtyp
; 
A_exp
 
	möô
; 
boﬁ
 
	mesˇ≥
;} var;

86 
A_«mëyLi°
 
	mty≥
;

87 } 
	mu
;

90 
	sA_ty_


92 íum {
	mA_«meTy
, 
	mA_ªc‹dTy
, 
	mA_¨øyTy
} 
	mköd
;

93 
A_pos
 
	mpos
;

97 
S_symbﬁ
 
	m«me
;

98 
A_fõldLi°
 
	mªc‹d
;

99 
S_symbﬁ
 
	m¨øy
;

100 } 
	mu
;

105 
	sA_fõld_
 {
S_symbﬁ
 
	m«me
, 
	mtyp
; 
A_pos
 
	mpos
; 
boﬁ
 
	mesˇ≥
;};

106 
	sA_fõldLi°_
 {
A_fõld
 
	mhód
; 
A_fõldLi°
 
	mèû
;};

107 
	sA_expLi°_
 {
A_exp
 
	mhód
; 
A_expLi°
 
	mèû
;};

108 
	sA_fundec_
 {
A_pos
 
	mpos
;

109 
S_symbﬁ
 
	m«me
; 
A_fõldLi°
 
	m∑øms
;

110 
S_symbﬁ
 
	mªsu…
; 
A_exp
 
	mbody
;};

112 
	sA_fundecLi°_
 {
A_fundec
 
	mhód
; 
A_fundecLi°
 
	mèû
;};

113 
	sA_decLi°_
 {
A_dec
 
	mhód
; 
A_decLi°
 
	mèû
;};

114 
	sA_«mëy_
 {
S_symbﬁ
 
	m«me
; 
A_ty
 
	mty
;};

115 
	sA_«mëyLi°_
 {
A_«mëy
 
	mhód
; 
A_«mëyLi°
 
	mèû
;};

116 
	sA_efõld_
 {
S_symbﬁ
 
	m«me
; 
A_exp
 
	mexp
;};

117 
	sA_efõldLi°_
 {
A_efõld
 
	mhód
; 
A_efõldLi°
 
	mèû
;};

121 
A_v¨
 
A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
);

122 
A_v¨
 
A_FõldV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
S_symbﬁ
 
sym
);

123 
A_v¨
 
A_Subs¸ùtV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
A_exp
 
exp
);

124 
A_exp
 
A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
);

125 
A_exp
 
A_NûExp
(
A_pos
 
pos
);

126 
A_exp
 
A_I¡Exp
(
A_pos
 
pos
, 
i
);

127 
A_exp
 
A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
);

128 
A_exp
 
A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
);

129 
A_exp
 
A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, A_ex∞
À·
, A_ex∞
right
);

130 
A_exp
 
A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
);

131 
A_exp
 
A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
);

132 
A_exp
 
A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, A_ex∞
exp
);

133 
A_exp
 
A_IfExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
);

134 
A_exp
 
A_WhûeExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
body
);

135 
A_exp
 
A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, A_ex∞
lo
, A_ex∞
hi
, A_ex∞
body
);

136 
A_exp
 
A_BªakExp
(
A_pos
 
pos
);

137 
A_exp
 
A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, A_ex∞
body
);

138 
A_exp
 
A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, A_ex∞
size
, A_ex∞
öô
);

139 
A_dec
 
A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
);

140 
A_dec
 
A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
);

141 
A_dec
 
A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
);

142 
A_ty
 
A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
);

143 
A_ty
 
A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
);

144 
A_ty
 
A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
);

145 
A_fõld
 
A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
);

146 
A_fõldLi°
 
A_FõldLi°
(
A_fõld
 
hód
, A_fõldLi° 
èû
);

147 
A_expLi°
 
A_ExpLi°
(
A_exp
 
hód
, A_expLi° 
èû
);

148 
A_fundec
 
A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

149 
A_exp
 
body
);

150 
A_fundecLi°
 
A_FundecLi°
(
A_fundec
 
hód
, A_fundecLi° 
èû
);

151 
A_decLi°
 
A_DecLi°
(
A_dec
 
hód
, A_decLi° 
èû
);

152 
A_«mëy
 
A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
);

153 
A_«mëyLi°
 
A_NamëyLi°
(
A_«mëy
 
hód
, A_«mëyLi° 
èû
);

154 
A_efõld
 
A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
);

155 
A_efõldLi°
 
A_EfõldLi°
(
A_efõld
 
hód
, A_efõldLi° 
èû
);

	@env.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ív.h
"

8 
E_ívíåy
 
	$E_V¨E¡ry
(
Ty_ty
 
ty
)

10 
E_ívíåy
 
íåy
 = 
	`checked_mÆloc
((*entry));

11 
íåy
->
u
.
v¨
.
ty
 =Åy;

13  
íåy
;

14 
	}
}

16 
E_ívíåy
 
	$E_ROV¨E¡ry
(
Ty_ty
 
ty
)

18 
E_ívíåy
 
íåy
 = 
	`checked_mÆloc
((*entry));

19 
íåy
->
u
.
v¨
.
ty
 =Åy;

20 
íåy
->
ªad⁄ly
 = 1;

21  
íåy
;

22 
	}
}

24 
E_ívíåy
 
	$E_FunE¡ry
(
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
)

26 
E_ívíåy
 
íåy
 = 
	`checked_mÆloc
((*entry));

27 
íåy
->
u
.
fun
.
f‹mÆs
 = formals;

28 
íåy
->
u
.
fun
.
ªsu…
 =Ñesult;

30  
íåy
;

31 
	}
}

35 
S_èbÀ
 
	$E_ba£_ãnv
()

37 
S_èbÀ
 
èbÀ
;

38 
S_symbﬁ
 
ty_öt
;

39 
S_symbﬁ
 
ty_°rög
;

41 
èbÀ
 = 
	`S_em±y
();

44 
ty_öt
 = 
	`S_Symbﬁ
("int");

45 
	`S_íãr
(
èbÀ
, 
ty_öt
, 
	`Ty_I¡
());

48 
ty_°rög
 = 
	`S_Symbﬁ
("string");

49 
	`S_íãr
(
èbÀ
, 
ty_°rög
, 
	`Ty_Såög
());

51  
èbÀ
;

52 
	}
}

54 
S_èbÀ
 
	$E_ba£_vív
()

56 
S_èbÀ
 
èbÀ
;

58 
èbÀ
 = 
	`S_em±y
();

60  
èbÀ
;

61 
	}
}

	@env.h

3 #i‚de‡
__ENV_H_


4 
	#__ENV_H_


	)

6 
	~"ty≥s.h
"

8 
E_ívíåy_
 *
	tE_ívíåy
;

10 
	sE_ívíåy_
 {

11 íum {
	mE_v¨E¡ry
, 
	mE_funE¡ry
} 
	mköd
;

12 
	mªad⁄ly
;

15 °ru˘ {
Ty_ty
 
	mty
;} 
	mv¨
;

16 °ru˘ {
Ty_tyLi°
 
	mf‹mÆs
; 
Ty_ty
 
	mªsu…
;} 
	mfun
;

17 } 
	mu
;

20 
E_ívíåy
 
E_V¨E¡ry
(
Ty_ty
 
ty
);

21 
E_ívíåy
 
E_ROV¨E¡ry
(
Ty_ty
 
ty
);

22 
E_ívíåy
 
E_FunE¡ry
(
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
);

24 
S_èbÀ
 
E_ba£_ãnv
();

25 
S_èbÀ
 
E_ba£_vív
();

	@errormsg.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°d¨g.h
>

10 
	~"utû.h
"

11 
	~"îr‹msg.h
"

14 
boﬁ
 
	g™yEº‹s

FALSE
;

16 
°rög
 
	gfûeName
 = "";

18 
	glöeNum
 = 1;

20 
	gEM_tokPos
=0;

22 
FILE
 *
yyö
;

24 
	sötLi°
 {
	mi
; 
ötLi°
 *
	mª°
;} *
	tI¡Li°
;

26 
I¡Li°
 
	$ötLi°
(
i
, 
I¡Li°
 
ª°
)

27 {
I¡Li°
 
l

	`checked_mÆloc
( *l);

28 
l
->
i
=i;Ü->
ª°
=rest;

29  
l
;

30 
	}
}

32 
I¡Li°
 
	glöePos
=
NULL
;

34 
	$EM_√wlöe
()

35 {
löeNum
++;

36 
löePos
 = 
	`ötLi°
(
EM_tokPos
,ÜinePos);

37 
	}
}

39 
	$EM_îr‹
(
pos
, *
mesßge
,...)

41 
va_li°
 
≠
;

42 
I¡Li°
 
löes
 = 
löePos
;

43 
num
=
löeNum
;

45 
™yEº‹s
=
TRUE
;

46 
löes
 &&Üöes->
i
 >
pos
)

47 {
löes
ˆöes->
ª°
; 
num
--;}

49 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
,"%s:",fileName);

50 i‡(
löes
Ë
	`Ârötf
(
°dîr
,"%d.%d: ", 
num
, 
pos
-löes->
i
);

51 
	`va_°¨t
(
≠
,
mesßge
);

52 
	`vÂrötf
(
°dîr
, 
mesßge
, 
≠
);

53 
	`va_íd
(
≠
);

54 
	`Ârötf
(
°dîr
,"\n");

55 
	}
}

57 
	$EM_ª£t
(
°rög
 
‚ame
)

59 
™yEº‹s
=
FALSE
; 
fûeName
=
‚ame
; 
löeNum
=1;

60 
löePos
=
	`ötLi°
(0,
NULL
);

61 
yyö
 = 
	`f›í
(
‚ame
,"r");

62 i‡(!
yyö
Ë{
	`EM_îr‹
(0,"ˇ¬Ÿ o≥n"); 
	`exô
(1);}

63 
	}
}

	@errormsg.h

1 #i‚de‡
ERROR_MSG_H


2 
	#ERROR_MSG_H


	)

3 
boﬁ
 
EM_™yEº‹s
;

5 
EM_√wlöe
();

7 
EM_tokPos
;

9 
EM_îr‹
(, 
°rög
,...);

10 
EM_impossibÀ
(
°rög
,...);

11 
EM_ª£t
(
°rög
 
fûíame
);

	@helper.h

1 #i‚de‡
_HELPER_H_


2 
	#_HELPER_H_


	)

7 
	#gë_›exp_›î
(
a
Ë◊->
u
.
›
.
›î
)

	)

8 
	#gë_›exp_À·
(
a
Ë◊->
u
.
›
.
À·
)

	)

9 
	#gë_›exp_À·pos
(
a
Ë◊->
u
.
›
.
À·
->
pos
)

	)

10 
	#gë_›exp_right
(
a
Ë◊->
u
.
›
.
right
)

	)

11 
	#gë_›exp_righços
(
a
Ë◊->
u
.
›
.
right
->
pos
)

	)

14 
	#gë_Àãxp_decs
(
a
Ë◊->
u
.
Àt
.
decs
)

	)

15 
	#gë_Àãxp_body
(
a
Ë◊->
u
.
Àt
.
body
)

	)

18 
	#gë_ˇŒexp_func
(
a
Ë◊->
u
.
ˇŒ
.
func
)

	)

19 
	#gë_ˇŒexp_¨gs
(
a
Ë◊->
u
.
ˇŒ
.
¨gs
)

	)

22 
	#gë_ªc‹dexp_typ
(
a
Ë◊->
u
.
ªc‹d
.
typ
)

	)

23 
	#gë_ªc‹dexp_fõlds
(
a
Ë◊->
u
.
ªc‹d
.
fõlds
)

	)

26 
	#gë_£qexp_£q
(
a
Ë◊->
u
.
£q
)

	)

29 
	#gë_as£xp_v¨
(
a
Ë◊->
u
.
assign
.
v¨
)

	)

30 
	#gë_as£xp_exp
(
a
Ë◊->
u
.
assign
.
exp
)

	)

33 
	#gë_i„xp_ã°
(
a
Ë◊->
u
.
iff
.
ã°
)

	)

34 
	#gë_i„xp_thí
(
a
Ë◊->
u
.
iff
.
thí
)

	)

35 
	#gë_i„xp_ñ£
(
a
Ë◊->
u
.
iff
.
ñ£e
)

	)

38 
	#gë_whûìxp_ã°
(
a
Ë◊->
u
.
whûì
.
ã°
)

	)

39 
	#gë_whûìxp_body
(
a
Ë◊->
u
.
whûì
.
body
)

	)

42 
	#gë_f‹exp_v¨
(
a
Ë◊->
u
.
f‹r
.
v¨
)

	)

43 
	#gë_f‹exp_lo
(
a
Ë◊->
u
.
f‹r
.
lo
)

	)

44 
	#gë_f‹exp_hi
(
a
Ë◊->
u
.
f‹r
.
hi
)

	)

45 
	#gë_f‹exp_body
(
a
Ë◊->
u
.
f‹r
.
body
)

	)

48 
	#gë_¨øyexp_typ
(
a
Ë◊->
u
.
¨øy
.
typ
)

	)

49 
	#gë_¨øyexp_size
(
a
Ë◊->
u
.
¨øy
.
size
)

	)

50 
	#gë_¨øyexp_öô
(
a
Ë◊->
u
.
¨øy
.
öô
)

	)

53 
	#gë_v¨dec_öô
(
a
Ë◊->
u
.
v¨
.
öô
)

	)

54 
	#gë_v¨dec_v¨
(
a
Ë◊->
u
.
v¨
.v¨)

	)

55 
	#gë_v¨dec_typ
(
a
Ë◊->
u
.
v¨
.
typ
)

	)

57 
	#gë_ty≥dec_li°
(
a
Ë◊->
u
.
ty≥
)

	)

58 
	#gë_funcdec_li°
(
a
Ë◊->
u
.
fun˘i⁄
)

	)

61 
	#gë_ex±y_köd
(
a
Ë◊.
ty
->
köd
)

	)

62 
	#gë_¨øy_ty≥
(
a
Ë◊.
ty
->
u
.
¨øy
->
köd
)

	)

63 
	#gë_¨øy
(
a
Ë◊.
ty
->
u
.
¨øy
)

	)

64 
	#gë_ªc‹d_fõldli°
(
a
Ë◊.
ty
->
u
.
ªc‹d
)

	)

68 
	#gë_sim∂ev¨_sym
(
v
Ë(v->
u
.
sim∂e
)

	)

69 
	#gë_fõldv¨_v¨
(
v
Ë(v->
u
.
fõld
.
v¨
)

	)

70 
	#gë_fõldv¨_sym
(
v
Ë(v->
u
.
fõld
.
sym
)

	)

71 
	#gë_subv¨_v¨
(
v
Ë(v->
u
.
subs¸ùt
.
v¨
)

	)

72 
	#gë_subv¨_exp
(
v
Ë(v->
u
.
subs¸ùt
.
exp
)

	)

75 
	#gë_ty_«me
(
a
Ë◊->
u
.
«me
)

	)

76 
	#gë_ty_ªc‹d
(
a
Ë◊->
u
.
ªc‹d
)

	)

77 
	#gë_ty_¨øy
(
a
Ë◊->
u
.
¨øy
)

	)

80 
	#gë_¨øy_köd
(
a
Ë◊->
u
.
¨øy
->
köd
)

	)

83 
	#gë_v¨íåy_ty≥
(
x
Ë(x->
u
.
v¨
.
ty
)

	)

85 
	#gë_func_ªs
(
x
Ë(x->
u
.
fun
.
ªsu…
)

	)

86 
	#gë_func_tyli°
(
x
Ë(x->
u
.
fun
.
f‹mÆs
)

	)

	@parse.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"absyn.h
"

10 
	~"ty≥s.h
"

11 
	~"îr‹msg.h
"

12 
	~"∑r£.h
"

13 
	~"£m™t.h
"

15 
yy∑r£
();

16 
A_exp
 
absyn_roŸ
;

20 
A_exp
 
	$∑r£
(
°rög
 
‚ame
)

21 {
	`EM_ª£t
(
‚ame
);

22 i‡(
	`yy∑r£
() == 0)

23  
absyn_roŸ
;

24  
NULL
;

25 
	}
}

27 
	$maö
(
¨gc
, **
¨gv
){

28 if(
¨gc
 != 2){

29 
	`Ârötf
(
°dîr
,"usage:á.out filename\n");

30 
	`exô
(1);

33 
	`∑r£
(
¨gv
[1]);

35 i‡(
absyn_roŸ
){

36 
	`SEM_å™sProg
(
absyn_roŸ
);

38 
	`Ârötf
(
°dîr
,"\n");

40 
	}
}

	@parse.h

2 
A_exp
 
∑r£
(
°rög
 
‚ame
);

	@prabsyn.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"absyn.h
"

10 
	~"¥absyn.h
"

13 
¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
);

14 
¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
);

15 
¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
);

16 
¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
);

17 
¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
);

18 
¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
);

19 
¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
);

20 
¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
);

21 
¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
);

22 
¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
);

23 
¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
);

24 
¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
);

25 
¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
);

27 
	$ödít
(
FILE
 *
out
, 
d
) {

28 
i
;

29 
i
 = 0; i <
d
; i++Ë
	`Ârötf
(
out
, " ");

30 
	}
}

33 
	$¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
) {

34 
	`ödít
(
out
, 
d
);

35 
v
->
köd
) {

36 
A_sim∂eV¨
:

37 
	`Ârötf
(
out
, "sim∂eV¨(%s)", 
	`S_«me
(
v
->
u
.
sim∂e
));

39 
A_fõldV¨
:

40 
	`Ârötf
(
out
, "%s\n", "fieldVar(");

41 
	`¥_v¨
(
out
, 
v
->
u
.
fõld
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

42 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s)", 
	`S_«me
(
v
->
u
.
fõld
.
sym
));

44 
A_subs¸ùtV¨
:

45 
	`Ârötf
(
out
, "%s\n", "subscriptVar(");

46 
	`¥_v¨
(
out
, 
v
->
u
.
subs¸ùt
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

47 
	`¥_exp
(
out
, 
v
->
u
.
subs¸ùt
.
exp
, 
d
+1); 
	`Ârötf
(out, "%s", ")");

50 
	`as£π
(0);

52 
	}
}

54 
	g°r_›î
[][12] = {

58 
	$¥_›î
(
FILE
 *
out
, 
A_›î
 
d
) {

59 
	`Ârötf
(
out
, "%s", 
°r_›î
[
d
]);

60 
	}
}

63 
	$¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
) {

64 
	`ödít
(
out
, 
d
);

65 
v
->
köd
) {

66 
A_v¨Exp
:

67 
	`Ârötf
(
out
, "v¨Exp(\n"); 
	`¥_v¨
(out, 
v
->
u
.
v¨
, 
d
+1);

68 
	`Ârötf
(
out
, "%s", ")");

70 
A_nûExp
:

71 
	`Ârötf
(
out
, "nilExp()");

73 
A_ötExp
:

74 
	`Ârötf
(
out
, "ötExp(%d)", 
v
->
u
.
öâ
);

76 
A_°rögExp
:

77 
	`Ârötf
(
out
, "°rögExp(%s)", 
v
->
u
.
°rögg
);

79 
A_ˇŒExp
:

80 
	`Ârötf
(
out
, "ˇŒExp(%s,\n", 
	`S_«me
(
v
->
u
.
ˇŒ
.
func
));

81 
	`¥_expLi°
(
out
, 
v
->
u
.
ˇŒ
.
¨gs
, 
d
+1); 
	`Ârötf
(out, ")");

83 
A_›Exp
:

84 
	`Ârötf
(
out
, "opExp(\n");

85 
	`ödít
(
out
, 
d
+1); 
	`¥_›î
(out, 
v
->
u
.
›
.
›î
); 
	`Ârötf
(out, ",\n");

86 
	`¥_exp
(
out
, 
v
->
u
.
›
.
À·
, 
d
+1); 
	`Ârötf
(out, ",\n");

87 
	`¥_exp
(
out
, 
v
->
u
.
›
.
right
, 
d
+1); 
	`Ârötf
(out, ")");

89 
A_ªc‹dExp
:

90 
	`Ârötf
(
out
, "ªc‹dExp(%s,\n", 
	`S_«me
(
v
->
u
.
ªc‹d
.
typ
));

91 
	`¥_efõldLi°
(
out
, 
v
->
u
.
ªc‹d
.
fõlds
, 
d
+1); 
	`Ârötf
(out, ")");

93 
A_£qExp
:

94 
	`Ârötf
(
out
, "seqExp(\n");

95 
	`¥_expLi°
(
out
, 
v
->
u
.
£q
, 
d
+1); 
	`Ârötf
(out, ")");

97 
A_assignExp
:

98 
	`Ârötf
(
out
, "assignExp(\n");

99 
	`¥_v¨
(
out
, 
v
->
u
.
assign
.
v¨
, 
d
+1); 
	`Ârötf
(out, ",\n");

100 
	`¥_exp
(
out
, 
v
->
u
.
assign
.
exp
, 
d
+1); 
	`Ârötf
(out, ")");

102 
A_ifExp
:

103 
	`Ârötf
(
out
, "iffExp(\n");

104 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

105 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
thí
, 
d
+1);

106 i‡(
v
->
u
.
iff
.
ñ£e
) {

107 
	`Ârötf
(
out
, ",\n");

108 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ñ£e
, 
d
+1);

110 
	`Ârötf
(
out
, ")");

112 
A_whûeExp
:

113 
	`Ârötf
(
out
, "whileExp(\n");

114 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

115 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
body
, 
d
+1); 
	`Ârötf
(out, ")\n");

117 
A_f‹Exp
:

118 
	`Ârötf
(
out
, "f‹Exp(%s,\n", 
	`S_«me
(
v
->
u
.
f‹r
.
v¨
));

119 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
lo
, 
d
+1); 
	`Ârötf
(out, ",\n");

120 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
hi
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

121 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
body
, 
d
+1); 
	`Ârötf
(out, ",\n");

122 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
f‹r
.
esˇ≥
 ? "TRUE)" : "FALSE)");

124 
A_bªakExp
:

125 
	`Ârötf
(
out
, "breakExp()");

127 
A_ÀtExp
:

128 
	`Ârötf
(
out
, "letExp(\n");

129 
	`¥_decLi°
(
out
, 
v
->
u
.
Àt
.
decs
, 
d
+1); 
	`Ârötf
(out, ",\n");

130 
	`¥_exp
(
out
, 
v
->
u
.
Àt
.
body
, 
d
+1); 
	`Ârötf
(out, ")");

132 
A_¨øyExp
:

133 
	`Ârötf
(
out
, "¨øyExp(%s,\n", 
	`S_«me
(
v
->
u
.
¨øy
.
typ
));

134 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
size
, 
d
+1); 
	`Ârötf
(out, ",\n");

135 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
öô
, 
d
+1); 
	`Ârötf
(out, ")");

138 
	`as£π
(0);

140 
	}
}

142 
	$¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
) {

143 
	`ödít
(
out
, 
d
);

144 
v
->
köd
) {

145 
A_fun˘i⁄Dec
:

146 
	`Ârötf
(
out
, "functionDec(\n");

147 
	`¥_fundecLi°
(
out
, 
v
->
u
.
fun˘i⁄
, 
d
+1); 
	`Ârötf
(out, ")");

149 
A_v¨Dec
:

150 
	`Ârötf
(
out
, "v¨Dec(%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.var));

151 i‡(
v
->
u
.
v¨
.
typ
) {

152 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.
typ
));

154 
	`¥_exp
(
out
, 
v
->
u
.
v¨
.
öô
, 
d
+1); 
	`Ârötf
(out, ",\n");

155 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
v¨
.
esˇ≥
 ? "TRUE)" : "FALSE)");

157 
A_ty≥Dec
:

158 
	`Ârötf
(
out
, "typeDec(\n");

159 
	`¥_«mëyLi°
(
out
, 
v
->
u
.
ty≥
, 
d
+1); 
	`Ârötf
(out, ")");

162 
	`as£π
(0);

164 
	}
}

166 
	$¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
) {

167 
	`ödít
(
out
, 
d
);

168 
v
->
köd
) {

169 
A_«meTy
:

170 
	`Ârötf
(
out
, "«meTy(%s)", 
	`S_«me
(
v
->
u
.
«me
));

172 
A_ªc‹dTy
:

173 
	`Ârötf
(
out
, "recordTy(\n");

174 
	`¥_fõldLi°
(
out
, 
v
->
u
.
ªc‹d
, 
d
+1); 
	`Ârötf
(out, ")");

176 
A_¨øyTy
:

177 
	`Ârötf
(
out
, "¨øyTy(%s)", 
	`S_«me
(
v
->
u
.
¨øy
));

180 
	`as£π
(0);

182 
	}
}

184 
	$¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
) {

185 
	`ödít
(
out
, 
d
);

186 
	`Ârötf
(
out
, "fõld(%s,\n", 
	`S_«me
(
v
->
«me
));

187 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
typ
));

188 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
esˇ≥
 ? "TRUE)" : "FALSE)");

189 
	}
}

191 
	$¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
) {

192 
	`ödít
(
out
, 
d
);

193 i‡(
v
) {

194 
	`Ârötf
(
out
, "fieldList(\n");

195 
	`¥_fõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

196 
	`¥_fõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

198 
	`Ârötf
(
out
, "fieldList()");

199 
	}
}

201 
	$¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
) {

202 
	`ödít
(
out
, 
d
);

203 i‡(
v
) {

204 
	`Ârötf
(
out
, "expList(\n");

205 
	`¥_exp
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

206 
	`¥_expLi°
(
out
, 
v
->
èû
, 
d
+1);

207 
	`Ârötf
(
out
, ")");

209 
	`Ârötf
(
out
, "expList()");

211 
	}
}

213 
	$¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
) {

214 
	`ödít
(
out
, 
d
);

215 
	`Ârötf
(
out
, "fundec(%s,\n", 
	`S_«me
(
v
->
«me
));

216 
	`¥_fõldLi°
(
out
, 
v
->
∑øms
, 
d
+1); 
	`Ârötf
(out, ",\n");

217 i‡(
v
->
ªsu…
) {

218 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
ªsu…
));

220 
	`¥_exp
(
out
, 
v
->
body
, 
d
+1); 
	`Ârötf
(out, ")");

221 
	}
}

223 
	$¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
) {

224 
	`ödít
(
out
, 
d
);

225 i‡(
v
) {

226 
	`Ârötf
(
out
, "fundecList(\n");

227 
	`¥_fundec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

228 
	`¥_fundecLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

230 
	`Ârötf
(
out
, "fundecList()");

231 
	}
}

233 
	$¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
) {

234 
	`ödít
(
out
, 
d
);

235 i‡(
v
) {

236 
	`Ârötf
(
out
, "decList(\n");

237 
	`¥_dec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

238 
	`¥_decLi°
(
out
, 
v
->
èû
, 
d
+1);

239 
	`Ârötf
(
out
, ")");

241 
	`Ârötf
(
out
, "decList()");

243 
	}
}

245 
	$¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
) {

246 
	`ödít
(
out
, 
d
);

247 
	`Ârötf
(
out
, "«mëy(%s,\n", 
	`S_«me
(
v
->
«me
));

248 
	`¥_ty
(
out
, 
v
->
ty
, 
d
+1); 
	`Ârötf
(out, ")");

249 
	}
}

251 
	$¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
) {

252 
	`ödít
(
out
, 
d
);

253 i‡(
v
) {

254 
	`Ârötf
(
out
, "nametyList(\n");

255 
	`¥_«mëy
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

256 
	`¥_«mëyLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

258 
	`Ârötf
(
out
, "nametyList()");

259 
	}
}

261 
	$¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
) {

262 
	`ödít
(
out
, 
d
);

263 i‡(
v
) {

264 
	`Ârötf
(
out
, "efõld(%s,\n", 
	`S_«me
(
v
->
«me
));

265 
	`¥_exp
(
out
, 
v
->
exp
, 
d
+1); 
	`Ârötf
(out, ")");

267 
	`Ârötf
(
out
, "efield()");

268 
	}
}

270 
	$¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
) {

271 
	`ödít
(
out
, 
d
);

272 i‡(
v
) {

273 
	`Ârötf
(
out
, "efieldList(\n");

274 
	`¥_efõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

275 
	`¥_efõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

277 
	`Ârötf
(
out
, "efieldList()");

278 
	}
}

	@prabsyn.h

2 
¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
);

	@semant.c

1 
	~<°dio.h
>

2 
	~<as£π.h
>

3 
	~<°rög.h
>

4 
	~"utû.h
"

5 
	~"îr‹msg.h
"

6 
	~"symbﬁ.h
"

7 
	~"absyn.h
"

8 
	~"ty≥s.h
"

9 
	~"hñ≥r.h
"

10 
	~"ív.h
"

11 
	~"£m™t.h
"

16 * 
	tTr_exp
;

17 
	sex±y


19 
Tr_exp
 
	mexp
;

20 
Ty_ty
 
	mty
;

24 
ex±y
 
	$expTy
(
Tr_exp
 
exp
, 
Ty_ty
 
ty
)

26 
ex±y
 
e
;

28 
e
.
exp
 =Éxp;

29 
e
.
ty
 =Åy;

31  
e
;

32 
	}
}

35 
boﬁ
 
	$ty≥Eq
(
Ty_ty
 
a
, Ty_ty 
b
)

38 if(
a
->
köd
 =
Ty_¨øy
){

39  (
a
 =
b
);

40 }if(
a
->
köd
 =
Ty_ªc‹d
){

41  (
a
 =
b
 || b->
köd
 =
Ty_nû
);

42 }if(
b
->
köd
 =
Ty_ªc‹d
){

43  (
a
 =
b
 ||á->
köd
 =
Ty_nû
);

45  (
a
->
köd
 =
b
-kind);

47 
	}
}

50 
Ty_ty
 
	$a˘uÆ_ty
(
Ty_ty
 
ty
){

52 if(
ty
->
köd
 =
Ty_«me
){

53  
ty
->
u
.
«me
.ty;

55  
ty
;

57 
	}
}

60 
Ty_ty
 
	$checked_S_look_ty≥
(
S_èbÀ
 
ãnv
, 
S_symbﬁ
 
«me
, 
A_pos
 
pos
){

61 
Ty_ty
 
ªt
 = 
	`S_look
(
ãnv
, 
«me
);

62 if(!
ªt
){

63 
	`EM_îr‹
(
pos
, "undeföedÅy≥ %s", 
	`S_«me
(
«me
));

64 
ªt
 = 
	`Ty_I¡
();

66  
ªt
;

67 
	}
}

69 
ex±y
 
	$å™sExp
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_exp
 
a
)

71 
a
->
köd
) {

72 
A_v¨Exp
:

73  
	`å™sV¨
(
vív
, 
ãnv
, 
a
->
u
.
v¨
);

75 
A_nûExp
:

76  
	`expTy
(
NULL
, 
	`Ty_Nû
());

78 
A_ötExp
:

79  
	`expTy
(
NULL
, 
	`Ty_I¡
());

81 
A_°rögExp
:

82  
	`expTy
(
NULL
, 
	`Ty_Såög
());

84 
A_ˇŒExp
:

85 
A_expLi°
 
¨gs
;

86 
Ty_tyLi°
 
f‹mÆs
;

87 
ex±y
 
exp
;

89 
E_ívíåy
 
x
 = 
	`S_look
(
vív
, 
a
->
ˇŒ
.
func
);

90 if(
x
 && x->
köd
 =
E_funE¡ry
){

92 
¨gs
 = 
a
->
u
.
ˇŒ
.¨gs, 
f‹mÆs
 = 
x
->u.
fun
.f‹mÆs;árgs&& f‹mÆs;árg†¨gs->
èû
, formals = formals->tail)

94 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
¨gs
->
hód
);

95 if(!
	`ty≥Eq
(
exp
->
ty
, 
f‹mÆs
->
hód
)){

96 
	`EM_îr‹
(
¨gs
->
hód
->
pos
, "∑ømëîÅy≥ wr⁄g i¿fu˙ti⁄ %s", 
	`S_«me
(
a
->
u
.
ˇŒ
.
func
));

100 if(
¨gs
 !
NULL
){

101 
	`EM_îr‹
(
a
->
pos
, "toÿm™yÖ¨amëî†ö fun˘i⁄ %s", 
	`S_«me
◊->
u
.
ˇŒ
.
func
));

103 if(
f‹mÆs
 !
NULL
){

104 
	`EM_îr‹
(
a
->
pos
, "toÿÀs†∑ømëî†ö fu¡i⁄ %s", 
	`S_«me
◊->
u
.
ˇŒ
.
func
));

108  
	`expTy
(
NULL
, 
x
->
u
.
fun
.
ªsu…
);

111 
	`EM_îr‹
(
a
-
pos
, "undeföed fun˘i⁄ %s", 
	`S_«me
◊->
u
.
func
));

112  
	`expTy
(
NULL
, 
	`Ty_I¡
());

116 
A_›Exp
:

117 
A_›î
 
›î
 = 
a
->
u
.
›
.oper;

118 
ex±y
 
À·
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
›
.left);

119 
ex±y
 
right
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
›
.right);

120 if(
›î
 =
A_∂usOp
 || o≥∏=
A_möusOp
 || o≥∏=
A_timesOp
 || o≥∏=
A_divideOp
){

121 if(
À·
.
ty
->
köd
 !
Ty_öt
)

122 
	`EM_îr‹
(
a
->
u
.
›
.
À·
->
pos
, "integerÑequired");

123 if(
right
.
ty
->
köd
 !
Ty_öt
)

124 
	`EM_îr‹
(
a
->
u
.
›
.
right
->
pos
, "integerÑequired");

125  
	`expTy
(
NULL
, 
	`Ty_I¡
());

127 if(
›î
 =
A_eqOp
 || o≥∏=
A_√qOp
){

129 if(!
	`ty≥Eq
(
À·
.
ty
, 
right
.tyË||Üe·.ty->
köd
 =
Ty_void
)

130 
	`EM_îr‹
(
a
->
pos
, "sameÅypeÑequired");

132  
	`expTy
(
NULL
, 
	`Ty_I¡
());

135 if(!–(
À·
.
ty
->
köd
 =
Ty_öt
 && 
right
.ty->köd =Ty_ötË|| (À·.ty->köd =
Ty_°rög
)))

136 
	`EM_îr‹
(
a
->
pos
, "sameÅypeÑequired");

137  
	`expTy
(
NULL
, 
	`Ty_I¡
());

142 
A_ªc‹dExp
:

143 
Ty_ty
 
öô_ty
 = 
	`S_look
(
ãnv
, 
a
->
u
.
ªc‹d
.
typ
);

144 if(!
öô_ty
){

145 
	`EM_îr‹
(
pos
, "undeföedÅy≥ %s", 
	`S_«me
(
a
->
u
.
ªc‹d
.
typ
));

146  
	`expTy
(
NULL
, 
	`Ty_I¡
());

148 
Ty_ty
 
ty
 = 
	`a˘uÆ_ty
(
öô_ty
);

149 
A_efõldLi°
 
efs
;

150 
Ty_fõldLi°
 
fs
;

152 
ex±y
 
exp
;

153 if(
ty
->
köd
 !
Ty_ªc‹d
){

154 
	`EM_îr‹
(
a
->
pos
, "recordÅypeÑequired");

155  
	`expTy
(
	`Ty_I¡
());

159 
efs
 = 
a
->
u
.
ªc‹d
.
fõlds
, 
fs
 = 
ty
->u.ªc‹d;Éf†&& fs;Éf†efs->
èû
, fs = fs->tail){

160 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
efs
->
hód
->exp);

162 if(!(
efs
->
hód
->
«me
 =
fs
->hód->«meË|| !(
	`ty≥Eq
(
exp
.
ty
, fs->head->ty))){

163 
	`EM_îr‹
(
efs
->
hód
->
exp
->
pos
, "type mismatch");

166 if(
f
 || 
ef
){

167 
	`EM_îr‹
(
a
->
pos
, "type mismatch");

169  
	`expTy
(
NULL
, 
ty
);

172 
A_£qExp
:

174 
A_expLi°
 
curExp
;

175 
ex±y
 
ªsu…
 = 
	`expTy
(
	`Ty_Void
());

176 
cur
 = 
a
->
u
.
£q
; 
curExp
 !
NULL
; curEx∞curExp->
èû
){

177 
ªsu…
 = 
	`å™sExp
(
vív
, 
ãnv
, 
curExp
->
hód
);

179  
ªsu…
;

182 
A_assignExp
:

183 
ex±y
 
v¨_ty
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
a
->
u
.
assign
.
v¨
);

184 
ex±y
 
exp_ty
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
a
->
u
.
assign
.
exp
);

187 if(!
	`ty≥Eq
(
v¨_ty
, 
exp_ty
))

188 
	`EM_îr‹
(
a
->
pos
, "unmatchedássignÉxp");

190  
	`expTy
(
NULL
, 
	`Ty_Void
());

192 
A_ifExp
:

196 
ex±y
 
if_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
ã°
);

197 if(
if_ty
.
ty
->
köd
 !
Ty_öt
){

198 
	`EM_îr‹
(
a
->
u
.
iff
.
ã°
->
pos
, "integerÑequired");

200 
ex±y
 
thí_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
thí
);

201 if(
a
->
u
.
iff
.
ñ£e
){

202 
ex±y
 
ñ£_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
ñ£e
);

203 if(!
	`ty≥Eq
(
ñ£_ty
.
ty
, 
thí_ty
.ty)){

204 
	`EM_îr‹
(
a
->
pos
, "thenÉxpándÉlseÉxpÅype mismatch");

206  
	`expTy
(
NULL
, 
thí_ty
);

208 if(
thí_ty
.
ty
->
köd
 !
Ty_void
){

209 
	`EM_îr‹
(
a
->
pos
, "ifÅhenÉxp's body mustÖroduceÇo value");

212  
	`expTy
(
	`Ty_Void
());

215 
A_whûeExp
:

216 
ex±y
 
ã°_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
whûì
.
ã°
);

217 
ex±y
 
body_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
whûì
.
body
);

219 if(
ã°_ty
.
ty
 !
Ty_öt
){

220 
	`EM_îr‹
(
a
->
u
.
whûì
.
ã°
->
pos
, "integerÑequired");

222 if(
body_ty
.
ty
 !
Ty_void
){

223 
	`EM_îr‹
(
a
->
u
.
whûì
.
body
.
pos
, "while body mustÖroduceÇo value");

226  
	`expTy
(
NULL
, 
	`Ty_Void
());

228 
A_f‹Exp
:

229 
ex±y
 
lo_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
f‹r
.
lo
);

230 
ex±y
 
hi_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
f‹r
.
hi
);

231 
ex±y
 
body_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
f‹r
.
body
);

233 if(
lo_ty
.
ty
->
köd
 !
Ty_öt
){

234 
	`EM_îr‹
(
a
->
u
.
f‹r
.
lo
->
pos
, "integerÑequired");

236 if(
hi_ty
.
ty
->
köd
 !
Ty_öt
){

237 
	`EM_îr‹
(
a
->
u
.
f‹r
.
hi
->
pos
, "integerÑequired");

240 
	`S_begöSc›e
(
vív
);

241 
	`S_íãr
(
vív
, 
a
->
u
.
f‹r
.
v¨
, 
	`E_V¨E¡ry
(
	`Ty_I¡
(1)));

242 
body_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
f‹r
.
body
);

243 if(
body_ty
.
ty
 !
Ty_void
){

244 
	`EM_îr‹
(
a
->
u
.
whûì
.
body
.
pos
, "for body mustÖroduceÇo value");

246 
	`S_ídSc›e
(
vív
);

248  
	`expTy
(
NULL
, 
	`Ty_Void
());

250 
A_bªakExp
:

251  
	`expTy
(
NULL
, 
	`Ty_Void
());

253 
A_ÀtExp
:

254 
ex±y
 
exp
;

255 
A_decLi°
 
decs
;

256 
	`S_begöSc›e
(
vív
);

257 
	`S_begöSc›e
(
ãnv
);

259 
decs
 = 
a
->
u
.
Àt
.decs; decs; dec†
dec
->
èû
){

260 
	`å™sDec
(
vív
, 
ãnv
, 
decs
->
hód
);

262 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
Àt
.
body
);

264 
	`S_ídSc›e
(
ãnv
);

265 
	`S_ídSc›e
(
vív
);

266  
exp
;

269 
A_¨øyExp
:

270 
Ty_ty
 
öô_ty
 = 
	`S_look
(
ãnv
, 
a
->
u
.
¨øy
.
typ
);

271 if(!
öô_ty
){

272 
	`EM_îr‹
(
pos
, "undeföedÅy≥ %s", 
	`S_«me
(
a
->
u
.
ªc‹d
.
typ
));

273  
	`expTy
(
NULL
, 
	`Ty_I¡
());

275 
Ty_ty
 
ty
 = 
	`a˘uÆ_ty
(
öô_ty
);

277 
ex±y
 
size
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
¨øy
.size);

278 
ex±y
 
öô
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
¨øy
.init);

280 if(
size
.
ty
->
köd
 !
Ty_öt
){

281 
	`EM_îr‹
(
a
->
u
.
¨øy
.
size
->
pos
, "integerÑequired");

283 if(!
	`ty≥Eq
(
ty
->
u
.
¨øy
, 
öô
.ty)){

284 
	`EM_îr‹
(
a
->
u
.
¨øy
.
öô
->
pos
, "type mismatch");

287  
	`expTy
(
NULL
, 
ty
);

290 
	}
}

295 
boﬁ
 
	$föd_ßme_«me
(
A_«mëyLi°
 
fﬁlow_li°
, 
S_symbﬁ
 
cur_«me
){

297 if(!
fﬁlow_li°
){

298  
Ál£
;

302 if(
fﬁlow_li°
->
hód
.
«me
 =
cur_«me
){

303  
åue
;

305  
	`föd_ßme_«me
(
fﬁlow_li°
->
èû
, 
cur_«me
);

308 
	}
}

311 
Ty_tyLi°
 
	$makeF‹mÆTyLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
fõlds
, 
pos
){

312 if(
fõlds
){

313 
Ty_ty
 
ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
fõlds
->
hód
->
typ
, 
pos
);

314  
	`Ty_TyLi°
(
	`a˘uÆ_ty
(
ty
), 
	`makeF‹mÆTyLi°
(
ãnv
, 
fõlds
->
èû
, 
pos
));

316  
NULL
;

318 
	}
}

324 
Ty_fõldLi°
 
	$makeFõldTyLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
fõlds
, 
A_pos
 
pos
){

325 if(
fõlds
){

326 
Ty_ty
 
ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
fõlds
->
hóp
->
typ
, 
pos
);

327  
	`Ty_FõldLi°
(
	`Ty_Fõld
(
fõlds
->
hód
->
«me
 , 
	`a˘uÆ_ty
(
ty
)Ë, 
	`makeFõldTyLi°
(
ãnv
, fõlds->
èû
, 
pos
));

329  
NULL
;

331 
	}
}

333 
ex±y
 
	$å™sDec
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_dec
 
d
){

334 
d
->
köd
)

335 
A_fun˘i⁄Dec
:

338 
A_v¨Dec
:

342 
ex±y
 
exp_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
d
->
u
.
v¨
.
öô
);

344 if(
d
->
u
.
v¨
.
typ
){

345 
Ty_ty
 
öô_giví_ty
 = 
	`S_look
(
ãnv
, 
d
->
u
.
v¨
.
typ
);

346 if(!
öô_giví_ty
){

347 
	`EM_îr‹
(
pos
, "undeföedÅy≥ %s", 
	`S_«me
(
d
->
u
.
v¨
.
typ
));

348  
	`expTy
(
NULL
, 
	`Ty_I¡
());

350 
Ty_ty
 
a˘uÆ_giví_ty
 = 
	`a˘uÆ_ty
(
öô_giví_ty
);

352 if(!
	`ty≥Eq
(
exp_ty
.
ty
, 
a˘uÆ_giví_ty
)){

353 
	`EM_îr‹
(
d
->
pos
, "type mismathc");

355 
	`S_íãr
(
vív
, 
d
->
u
.
v¨
.v¨, 
	`E_V¨E¡ry
(
a˘uÆ_giví_ty
));

360 if(
exp_ty
.
ty
 =
Ty_nû
){

361 
	`EM_îr‹
(
d
->
u
.
v¨
.
öô
->
pos
, "initÉxp can't beÇil withoutÅype");

364 
	`S_íãr
(
vív
, 
d
->
u
.
v¨
.v¨. 
	`E_V¨E¡ry
(
exp_ty
.
ty
));

369 
A_ty≥Dec
:

370 
A_«mëyLi°
 
«mëy_li°
;

371 
«mëy_li°
 = 
d
->
u
.
ty≥
;Çamëy_li°;Çamëy_li° =Çamëy_li°->
èû
){

372 if(
	`föd_ßme_«me
(
«mëy_li°
->
èû
,Çamëy_li°->
hód
->
«me
)){

373 
	`EM_îr‹
(
«mëy_li°
->
hód
->
ty
->
pos
);

376 
	`S_íãr
(
ãnv
, 
«mëy_li°
->
hód
->
«me
, 
	`Ty_Name
“amëy_li°->hód->«me, 
NULL
));

380 
«mëy_li°
 = 
d
->
u
.
ty≥
;Çamëy_li°;Çamëy_li° =Çamëy_li°->
èû
){

381 
A_«mëy
 
cur_«mëy
 = 
«mëy_li°
->
hód
;

382 
cur_«mëy
->
ty
->
köd
)

384 
A_«meTy
:

390 
Ty_ty
 
«me_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

391 
«me_ty
->
köd
 = 
Ty_«me
;

394 
«me_ty
->
u
.
«me
.
sym
 = 
cur_«mëy
->
ty
->u.name;

398 
A_ªc‹dTy
:

399 
Ty_ty
 
ªc‹d_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

400 
ªc‹d_ty
->
köd
 = 
Ty_ªc‹d
;

401 
ªc‹d_ty
->
u
.
ªc‹d
 = 
	`makeFõldTyLi°
(
ãnv
, 
cur_«mëy
->
ty
->u.ªc‹d, 
d
->
pos
);

404 
A_¨øyTy
:

405 
Ty_ty
 
¨øy_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

406 
¨øy_ty
->
köd
 = 
Ty_¨øy
;

407 
¨øy_ty
->
u
.
¨øy
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
ty
->u.¨øy, 
d
->
pos
);

414 
	}
}

417 
ex±y
 
	$å™sV¨
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_v¨
 
v
){

418 
v
->
köd
)

420 
A_sim∂eV¨
:

421 
E_ívíåy
 
x
 = 
	`S_look
(
vív
, 
v
->
u
.
sim∂e
);

422 if(
x
 && x->
köd
 =
E_v¨E¡ry
){

423  
	`expTy
(
NULL
, 
x
->
u
.
v¨
.
ty
);

425 
	`EM_îr‹
(
v
->
pos
, "undeföed v¨übÀ %s", 
	`S_«me
(v->
u
.
sim∂e
));

426  
	`expTy
(
NULL
, 
	`Ty_I¡
());

428 
A_fõldV¨
:

430 
ex±y
 
v¨_ty
 = 
	`å™sV¨
(
vevn
, 
ãnv
, 
v
->
u
.
fõld
.
v¨
);

431 if(
v¨_ty
.
ty
->
köd
 !
Ty_ªc‹d
){

432 
	`EM_îr‹
(
v
->
u
.
fõld
.
v¨
->
pos
, "aÑecordÑequired");

433  
	`expTy
(
NULL
, 
	`Ty_I¡
());

436 
Ty_fõldLi°
 
ªc‹d_fõld
;

437 
ªc‹d_fõld
 = 
v¨
.
ty
->
u
.
ªc‹d
;Ñec‹d_fõld !
NULL
;Ñec‹d_fõld =Ñec‹d_fõld.
èû
){

438 
Ty_fõld
 
a_fõld
 = 
ªc‹d_fõld
->
hód
;

439 if(
a_fõld
->
«me
 =
v
->
u
.
fõld
.
sym
)

440  
	`expTy
(
a_fõld
->
ty
);

443 
	`EM_îr‹
(
v
->
u
.
fõld
.
v¨
->
pos
, "ªc‹d dÿnŸ havêthêfõld %s", v->u.fõld.
sym
);

444  
	`expTy
(
	`Ty_I¡
());

448 
A_subs¸ùtV¨
:

450 
ex±y
 
v¨_ty
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
v
->
u
.
subs¸ùt
.
v¨
);

451 if(
v¨_ty
.
ty
->
köd
 !
Ty_¨øy
){

452 
	`EM_îr‹
(
v
->
u
.
subs¸ùt
.
v¨
->
pos
, "anárrayÑequired");

453  
	`expTy
(
NULL
, 
	`Ty_I¡
());

456 
exp_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
v
->
u
.
subs¸ùt
.
exp
);

457 if(
exp_ty
.
ty
->
köd
 !
Ty_öt
){

458 
	`EM_îr‹
(
v
->
u
.
subs¸ùt
.
exp
->
pos
, "integerÑequired");

460  
	`expTy
(
v¨_ty
.
ty
->
u
.
¨øy
);

463 
	}
}

	@semant.h

1 #i‚de‡
__SEMANT_H_


2 
	#__SEMANT_H_


	)

4 
	~"absyn.h
"

5 
	~"symbﬁ.h
"

7 
	gex±y
;

9 
ex±y
 
å™sV¨
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_v¨
 
v
);

10 
ex±y
 
å™sExp
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_exp
 
a
);

11 
å™sDec
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_dec
 
d
);

12 
Ty_ty
 
å™sTy
 ( 
S_èbÀ
 
ãnv
, 
A_ty
 
a
);

14 
SEM_å™sProg
(
A_exp
 
exp
);

	@symbol.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"èbÀ.h
"

7 
	sS_symbﬁ_
 {
°rög
 
	m«me
; 
S_symbﬁ
 
	m√xt
;};

9 
S_symbﬁ
 
	$mksymbﬁ
(
°rög
 
«me
, 
S_symbﬁ
 
√xt
)

10 {
S_symbﬁ
 
s
=
	`checked_mÆloc
((*s));

11 
s
->
«me
=name;

12 
s
->
√xt
=next;

13  
s
;

14 
	}
}

16 
	#SIZE
 109

	)

18 
S_symbﬁ
 
	ghashèbÀ
[
SIZE
];

20 
	$hash
(*
s0
)

21 {
h
=0; *
s
;

22 
s
=
s0
; *s; s++)

23 
h
 = h*65599 + *
s
;

24  
h
;

25 
	}
}

27 
	$°ªq
(
°rög
 
a
, såög 
b
)

29  !
	`°rcmp
(
a
,
b
);

30 
	}
}

32 
S_symbﬁ
 
	$S_Symbﬁ
(
°rög
 
«me
)

33 {
ödex

	`hash
(
«me
Ë% 
SIZE
;

34 
S_symbﬁ
 
syms
 = 
hashèbÀ
[
ödex
], 
sym
;

35 
sym
=
syms
; sym; sym=sym->
√xt
)

36 i‡(
	`°ªq
(
sym
->
«me
,name))  sym;

37 
sym
 = 
	`mksymbﬁ
(
«me
,
syms
);

38 
hashèbÀ
[
ödex
]=
sym
;

39  
sym
;

40 
	}
}

42 
°rög
 
	$S_«me
(
S_symbﬁ
 
sym
)

44  
sym
->
«me
;

45 
	}
}

47 
S_èbÀ
 
	$S_em±y
()

49  
	`TAB_em±y
();

50 
	}
}

52 
	$S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
) {

53 
	`TAB_íãr
(
t
,
sym
,
vÆue
);

54 
	}
}

56 *
	$S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
) {

57  
	`TAB_look
(
t
,
sym
);

58 
	}
}

60 
S_symbﬁ_
 
	gm¨ksym
 = {"<mark>",0};

62 
	$S_begöSc›e
(
S_èbÀ
 
t
)

63 { 
	`S_íãr
(
t
,&
m¨ksym
,
NULL
);

64 
	}
}

66 
	$S_ídSc›e
(
S_èbÀ
 
t
)

67 {
S_symbﬁ
 
s
;

68 dÿ
s
=
	`TAB_p›
(
t
);

69 
s
 !&
m¨ksym
);

70 
	}
}

72 
	$S_dump
(
S_èbÀ
 
t
, (*
show
)(
S_symbﬁ
 
sym
, *
bödög
)) {

73 
	`TAB_dump
(
t
, ((*)(*, *)Ë
show
);

74 
	}
}

	@symbol.h

1 #i‚de‡
SYMBOL_H


2 
	#SYMBOL_H


	)

8 
S_symbﬁ_
 *
	tS_symbﬁ
;

13 
S_symbﬁ
 
S_Symbﬁ
(
°rög
);

16 
°rög
 
S_«me
(
S_symbﬁ
);

20 
TAB_èbÀ_
 *
	tS_èbÀ
;

23 
S_èbÀ
 
S_em±y
();

27 
S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
);

31 *
S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
);

34 
S_begöSc›e
(
S_èbÀ
 
t
);

38 
S_ídSc›e
(
S_èbÀ
 
t
);

	@table.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"èbÀ.h
"

10 
	#TABSIZE
 127

	)

12 
bödî_
 *
	tbödî
;

13 
	sbödî_
 {*
	mkey
; *
	mvÆue
; 
bödî
 
	m√xt
; *
	m¥evt›
;};

14 
	sTAB_èbÀ_
 {

15 
bödî
 
	mèbÀ
[
TABSIZE
];

16 *
	mt›
;

20 
bödî
 
	$Bödî
(*
key
, *
vÆue
, 
bödî
 
√xt
, *
¥evt›
)

21 {
bödî
 
b
 = 
	`checked_mÆloc
((*b));

22 
b
->
key
 = key; b->
vÆue
=vÆue; b->
√xt
Úext; b->
¥evt›
 =Örevtop;

23  
b
;

24 
	}
}

26 
TAB_èbÀ
 
	$TAB_em±y
()

28 
TAB_èbÀ
 
t
 = 
	`checked_mÆloc
((*t));

29 
i
;

30 
t
->
t›
 = 
NULL
;

31 
i
 = 0; i < 
TABSIZE
; i++)

32 
t
->
èbÀ
[
i
] = 
NULL
;

33  
t
;

34 
	}
}

45 
	$TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
)

46 {
ödex
;

47 
	`as£π
(
t
 && 
key
);

48 
ödex
 = (()
key
Ë% 
TABSIZE
;

49 
t
->
èbÀ
[
ödex
] = 
	`Bödî
(
key
, 
vÆue
,t->èbÀ[ödex],Å->
t›
);

50 
t
->
t›
 = 
key
;

51 
	}
}

53 *
	$TAB_look
(
TAB_èbÀ
 
t
, *
key
)

54 {
ödex
;

55 
bödî
 
b
;

56 
	`as£π
(
t
 && 
key
);

57 
ödex
=(()
key
Ë% 
TABSIZE
;

58 
b
=
t
->
èbÀ
[
ödex
]; b; b=b->
√xt
)

59 i‡(
b
->
key
==keyË b->
vÆue
;

60  
NULL
;

61 
	}
}

63 *
	$TAB_p›
(
TAB_èbÀ
 
t
) {

64 *
k
; 
bödî
 
b
; 
ödex
;

65 
	`as£π
 (
t
);

66 
k
 = 
t
->
t›
;

67 
	`as£π
 (
k
);

68 
ödex
 = (()
k
Ë% 
TABSIZE
;

69 
b
 = 
t
->
èbÀ
[
ödex
];

70 
	`as£π
(
b
);

71 
t
->
èbÀ
[
ödex
] = 
b
->
√xt
;

72 
t
->
t›
=
b
->
¥evt›
;

73  
b
->
key
;

74 
	}
}

76 
	$TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
)) {

77 *
k
 = 
t
->
t›
;

78 
ödex
 = (()
k
Ë% 
TABSIZE
;

79 
bödî
 
b
 = 
t
->
èbÀ
[
ödex
];

80 i‡(
b
==
NULL
) ;

81 
t
->
èbÀ
[
ödex
]=
b
->
√xt
;

82 
t
->
t›
=
b
->
¥evt›
;

83 
	`show
(
b
->
key
,b->
vÆue
);

84 
	`TAB_dump
(
t
,
show
);

85 
	`as£π
(
t
->
t›
 =
b
->
¥evt›
 &&Å->
èbÀ
[
ödex
]==b->
√xt
);

86 
t
->
t›
=
k
;

87 
t
->
èbÀ
[
ödex
]=
b
;

88 
	}
}

	@table.h

1 #i‚de‡
TABLE_H


2 
	#TABLE_H


	)

12 
TAB_èbÀ_
 *
	tTAB_èbÀ
;

15 
TAB_èbÀ
 
TAB_em±y
();

19 
TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
);

22 *
TAB_look
(
TAB_èbÀ
 
t
, *
key
);

26 *
TAB_p›
(
TAB_èbÀ
 
t
);

32 
TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
));

	@tiger.y

2 
	~<°dio.h
>

3 
	~"utû.h
"

4 
	~"îr‹msg.h
"

5 
	~"symbﬁ.h
"

6 
	~"absyn.h
"

8 
yyÀx
();

10 
A_exp
 
	gabsyn_roŸ
;

12 
	$yyîr‹
(*
s
)

14 
	`EM_îr‹
(
EM_tokPos
, "%s", 
s
);

15 
	}
}

20 
pos
;

21 
ivÆ
;

22 
°rög
 
svÆ
;

23 
A_exp
 
exp
;

24 
A_expLi°
 
ex∂i°
;

25 
A_v¨
 
v¨
;

26 
A_decLi°
 
de˛i°
;

27 
A_dec
 
dec
;

28 
A_efõldLi°
 
efõldli°
;

29 
A_efõld
 
efõld
;

30 
A_«mëy
 
«mëy
;

31 
A_«mëyLi°
 
«mëyli°
;

32 
A_fõldLi°
 
fõldli°
;

33 
A_fõld
 
fõld
;

34 
A_fundecLi°
 
funde˛i°
;

35 
A_fundec
 
fundec
;

36 
A_ty
 
ty
;

39 %
tokí
 <
svÆ
> 
ID
 
STRING


40 %
tokí
 <
ivÆ
> 
INT


42 %
tokí


43 
COMMA
 
COLON
 
SEMICOLON
 
LPAREN
 
RPAREN
 
LBRACK
 
RBRACK


44 
LBRACE
 
RBRACE
 
DOT


45 
PLUS
 
MINUS
 
TIMES
 
DIVIDE
 
EQ
 
NEQ
 
LT
 
LE
 
GT
 
GE
 
UMINUS


46 
AND
 
OR
 
ASSIGN


47 
ARRAY
 
IF
 
THEN
 
ELSE
 
WHILE
 
FOR
 
TO
 
DO
 
LET
 
IN
 
END
 
OF


48 
BREAK
 
NIL


49 
FUNCTION
 
VAR
 
TYPE


51 %
ty≥
 <
exp
>Éxp

52 %
ty≥
 <
ex∂i°
> 
∑øms
 
∑øm
 
£quícög_exps
 
£quícög
 
exp£q


53 %
ty≥
 <
v¨
> 
lvÆue


54 %
ty≥
 <
de˛i°
> 
decs


55 %
ty≥
 <
dec
> de¯
v¨dec


56 %
ty≥
 <
efõldli°
> 
ªc‹ds
 
ªc‹d


58 %
ty≥
 <
«mëyli°
> 
ty≥decs


59 %
ty≥
 <
«mëy
> 
ty≥dec


60 %
ty≥
 <
fõldli°
> 
ty≥fõlds
 
ty≥fõld


61 %
ty≥
 <
ty
>Åy

62 %
ty≥
 <
funde˛i°
> 
funcdecs


63 %
ty≥
 <
fundec
> 
funcdec


65 %
°¨t
 
¥ogøm


67 %
n⁄assoc
 
DO


68 %
n⁄assoc
 
THEN


69 %
n⁄assoc
 
ELSE


70 %
n⁄assoc
 
OF


71 %
n⁄assoc
 
ASSIGN


73 %
À·
 
OR


74 %
À·
 
AND


75 %
n⁄assoc
 
EQ
 
NEQ
 
LT
 
GT
 
LE
 
GE


76 %
À·
 
PLUS
 
MINUS


77 %
À·
 
TIMES
 
DIVIDE


78 %
À·
 
UMINUS


81 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

83 
¥ogøm
: 
exp
 {
absyn_roŸ
 = 
$1
;};

85 
exp
: 
lvÆue
 {
$$
=
	`A_V¨Exp
(
EM_tokPos
, 
$1
);}

86 | 
NIL
 {
$$
=
	`A_NûExp
(
EM_tokPos
);}

87 | 
INT
 {
$$
=
	`A_I¡Exp
(
EM_tokPos
, 
$1
);}

88 | 
STRING
 {
$$
=
	`A_SåögExp
(
EM_tokPos
, 
$1
);}

89 | 
ID
 
LPAREN
 
∑øms
 
RPAREN
 {
$$
=
	`A_CÆlExp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), 
$3
);}

92 | 
exp
 
PLUS
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_∂usOp
, 
$1
, 
$3
);}

93 | 
exp
 
MINUS
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, 
$1
, 
$3
);}

94 | 
exp
 
TIMES
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_timesOp
, 
$1
, 
$3
);}

95 | 
exp
 
DIVIDE
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_divideOp
, 
$1
, 
$3
);}

96 | 
exp
 
EQ
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_eqOp
, 
$1
, 
$3
);}

97 | 
exp
 
NEQ
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_√qOp
, 
$1
, 
$3
);}

98 | 
exp
 
LT
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_…Op
, 
$1
, 
$3
);}

99 | 
exp
 
LE
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_ÀOp
, 
$1
, 
$3
);}

100 | 
exp
 
GT
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_gtOp
, 
$1
, 
$3
);}

101 | 
exp
 
GE
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_geOp
, 
$1
, 
$3
);}

104 | 
MINUS
 
exp
 %
¥ec
 
UMINUS
 {
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, 
	`A_I¡Exp
(EM_tokPos, 0), 
$2
);}

106 | 
ID
 
LBRACE
 
ªc‹ds
 
RBRACE
 {
$$
=
	`A_Rec‹dExp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), 
$3
);}

107 | 
LPAREN
 
exp
 
RPAREN
 {
$$
=
$2
;}

108 | 
LPAREN
 
exp£q
 
RPAREN
 {
$$
=
	`A_SeqExp
(
EM_tokPos
, 
$2
);}

109 | 
lvÆue
 
ASSIGN
 
exp
 {
$$
=
	`A_AssignExp
(
EM_tokPos
, 
$1
, 
$3
);}

111 | 
IF
 
exp
 
THEN
Éx∞
ELSE
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$2
, 
$4
, 
$6
);}

112 | 
IF
 
exp
 
THEN
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$2
, 
$4
, 
NULL
);}

114 | 
WHILE
 
exp
 
DO
Éx∞{
$$
=
	`A_WhûeExp
(
EM_tokPos
, 
$2
, 
$4
);}

115 | 
BREAK
 {
$$
=
	`A_BªakExp
(
EM_tokPos
);}

116 | 
FOR
 
ID
 
ASSIGN
 
exp
 
TO
Éx∞
DO
Éx∞{
$$
=
	`A_F‹Exp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$2
), 
$4
, 
$6
, 
$8
);}

117 | 
LET
 
decs
 
IN
 
£quícög_exps
 
END
 {
$$
=
	`A_LëExp
(
EM_tokPos
, 
$2
, 
	`A_SeqExp
(EM_tokPos, 
$4
));}

118 | 
ID
 
LBRACK
 
exp
 
RBRACK
 
OF
Éx∞{
$$
=
	`A_AºayExp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), 
$3
, 
$6
);}

121 | 
exp
 
AND
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$1
, 
$3
, 
	`A_I¡Exp
(EM_tokPos, 0));}

122 | 
exp
 
OR
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$1
, 
	`A_I¡Exp
(EM_tokPos, 1), 
$3
);}

125 
lvÆue
: 
ID
 {
$$
=
	`A_Sim∂eV¨
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
));}

126 | 
lvÆue
 
DOT
 
ID
 {
$$
=
	`A_FõldV¨
(
EM_tokPos
, 
$1
, 
	`S_Symbﬁ
(
$3
));}

127 | 
lvÆue
 
LBRACK
 
exp
 
RBRACK
 {
$$
=
	`A_Subs¸ùtV¨
(
EM_tokPos
, 
$1
, 
$3
);}

128 | 
ID
 
LBRACK
 
exp
 
RBRACK
 {
$$
=
	`A_Subs¸ùtV¨
(
EM_tokPos
, 
	`A_Sim∂eV¨
(EM_tokPos, 
	`S_Symbﬁ
(
$1
)), 
$3
);}

132 
∑øms
: {
$$
=
NULL
;}

133 | 
∑øm
 {
$$
=
$1
;}

136 
∑øm
: 
exp
 {
$$
=
	`A_ExpLi°
(
$1
, 
NULL
);}

137 | 
exp
 
COMMA
 
∑øm
 {
$$
=
	`A_ExpLi°
(
$1
, 
$3
);}

140 
ªc‹ds
: {
$$
=
NULL
;}

141 | 
ªc‹d
 {
$$
=
$1
;}

144 
ªc‹d
: 
ID
 
EQ
 
exp
 {
$$
=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
(
$1
), 
$3
), 
NULL
);}

145 | 
ID
 
EQ
 
exp
 
COMMA
 
ªc‹d
 {
$$
=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
(
$1
), 
$3
), 
$5
);}

148 
£quícög_exps
: {
$$
=
NULL
;}

149 | 
£quícög
 {
$$
=
$1
;}

152 
£quícög
: 
exp
 {
$$
=
	`A_ExpLi°
(
$1
, 
NULL
);}

153 | 
exp
 
SEMICOLON
 
£quícög
 {
$$
=
	`A_ExpLi°
(
$1
, 
$3
);}

155 
exp£q
: 
exp
 
SEMICOLON
Éx∞{
$$
=
	`A_ExpLi°
(
$1
, A_ExpLi°(
$3
, 
NULL
));}

156 | 
exp
 
SEMICOLON
Éx∞SEMICOLON 
£quícög
 {
$$
=
	`A_ExpLi°
(
$1
, A_ExpLi°(
$3
, 
$5
));}

158 
decs
: {
$$
=
NULL
;}

159 | 
dec
 
decs
 {
$$
=
	`A_DecLi°
(
$1
, 
$2
);}

162 
dec
: 
funcdecs
 {
$$
=
	`A_Fun˘i⁄Dec
(
EM_tokPos
, 
$1
);}

163 | 
v¨dec
 {
$$
=
$1
;}

164 | 
ty≥decs
 {
$$
=
	`A_Ty≥Dec
(
EM_tokPos
, 
$1
);}

167 
v¨dec
: 
VAR
 
ID
 
ASSIGN
 
exp
 {
$$
=
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
(
$2
),S_Symbﬁ(""),
$4
);}

168 | 
VAR
 
ID
 
COLON
 ID 
ASSIGN
 
exp
 {
$$
=
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
(
$2
),S_Symbﬁ(
$4
),
$6
);}

171 
funcdecs
: {
$$
=
NULL
;}

172 | 
funcdec
 
funcdecs
 {
$$
=
	`A_FundecLi°
(
$1
, 
$2
);}

175 
funcdec
: 
FUNCTION
 
ID
 
LPAREN
 
ty≥fõlds
 
RPAREN
 
EQ
 
exp
 {
$$
=
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
(
$2
), 
$4
, S_Symbﬁ(""), 
$7
);}

176 | 
FUNCTION
 
ID
 
LPAREN
 
ty≥fõlds
 
RPAREN
 
COLON
 ID 
EQ
 
exp
 {
$$
=
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
(
$2
), 
$4
, S_Symbﬁ(
$7
), 
$9
);}

179 
ty≥decs
: 
ty≥dec
 {
$$
=
	`A_NamëyLi°
(
$1
, 
NULL
);}

180 | 
ty≥dec
 
ty≥decs
 {
$$
=
	`A_NamëyLi°
(
$1
, 
$2
);}

183 
ty≥dec
: 
TYPE
 
ID
 
EQ
 
ty
 {
$$
=
	`A_Namëy
(
	`S_Symbﬁ
(
$2
), 
$4
);}

186 
ty
: 
ID
 {
$$
=
	`A_NameTy
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
));}

187 | 
LBRACE
 
ty≥fõlds
 
RBRACE
 {
$$
=
	`A_Rec‹dTy
(
EM_tokPos
, 
$2
);}

188 | 
ARRAY
 
OF
 
ID
 {
$$
=
	`A_AºayTy
(
EM_tokPos
, 
	`S_Symbﬁ
(
$3
));}

191 
ty≥fõlds
: {
$$
=
NULL
;}

192 | 
ty≥fõld
 {
$$
=
$1
;}

195 
ty≥fõld
: 
ID
 
COLON
 ID {
$$
=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), S_Symbﬁ(
$3
)), 
NULL
);}

196 | 
ID
 
COLON
 ID 
COMMA
 
ty≥fõld
 {
$$
=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), S_Symbﬁ(
$3
)), 
$5
);}

	@types.c

8 
	~<°dio.h
>

9 
	~"utû.h
"

10 
	~"symbﬁ.h
"

11 
	~"ty≥s.h
"

13 
Ty_ty_
 
	gtynû
 = {
Ty_nû
};

14 
Ty_ty
 
	$Ty_Nû
(Ë{ &
tynû
;
	}
}

16 
Ty_ty_
 
	gtyöt
 = {
Ty_öt
};

17 
Ty_ty
 
	$Ty_I¡
(Ë{ &
työt
;
	}
}

19 
Ty_ty_
 
	gty°rög
 = {
Ty_°rög
};

20 
Ty_ty
 
	$Ty_Såög
(Ë{ &
ty°rög
;
	}
}

22 
Ty_ty_
 
	gtyvoid
 = {
Ty_void
};

23 
Ty_ty
 
	$Ty_Void
(Ë{ &
tyvoid
;
	}
}

25 
Ty_ty
 
	$Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
)

26 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

27 
p
->
köd
=
Ty_ªc‹d
;

28 
p
->
u
.
ªc‹d
=
fõlds
;

29  
p
;

30 
	}
}

32 
Ty_ty
 
	$Ty_Aºay
(
Ty_ty
 
ty
)

33 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

34 
p
->
köd
=
Ty_¨øy
;

35 
p
->
u
.
¨øy
=
ty
;

36  
p
;

37 
	}
}

39 
Ty_ty
 
	$Ty_Name
(
S_symbﬁ
 
sym
, 
Ty_ty
 
ty
)

40 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

41 
p
->
köd
=
Ty_«me
;

42 
p
->
u
.
«me
.
sym
=sym;

43 
p
->
u
.
«me
.
ty
=ty;

44  
p
;

45 
	}
}

48 
Ty_tyLi°
 
	$Ty_TyLi°
(
Ty_ty
 
hód
, 
Ty_tyLi°
 
èû
)

49 {
Ty_tyLi°
 
p
 = 
	`checked_mÆloc
((*p));

50 
p
->
hód
=head;

51 
p
->
èû
=tail;

52  
p
;

53 
	}
}

55 
Ty_fõld
 
	$Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
)

56 {
Ty_fõld
 
p
 = 
	`checked_mÆloc
((*p));

57 
p
->
«me
=name;

58 
p
->
ty
=ty;

59  
p
;

60 
	}
}

62 
Ty_fõldLi°
 
	$Ty_FõldLi°
(
Ty_fõld
 
hód
, 
Ty_fõldLi°
 
èû
)

63 {
Ty_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

64 
p
->
hód
=head;

65 
p
->
èû
=tail;

66  
p
;

67 
	}
}

70 
	g°r_ty
[][12] = {

75 
	$Ty_¥öt
(
Ty_ty
 
t
)

77 i‡(
t
 =
NULL
Ë
	`¥ötf
("null");

78 { 
	`¥ötf
("%s", 
°r_ty
[
t
->
köd
]);

79 i‡(
t
->
köd
 =
Ty_«me
) {

80 
	`¥ötf
(", %s", 
	`S_«me
(
t
->
u
.
«me
.
sym
)); }

82 
	}
}

84 
	$TyLi°_¥öt
(
Ty_tyLi°
 
li°
)

86 i‡(
li°
 =
NULL
Ë
	`¥ötf
("null");

88 
	`¥ötf
("TyList( ");

89 
	`Ty_¥öt
(
li°
->
hód
);

90 
	`¥ötf
(", ");

91 
	`TyLi°_¥öt
(
li°
->
èû
);

92 
	`¥ötf
(")");

94 
	}
}

	@types.h

1 #i‚de‡
TYPES_H


2 
	#TYPES_H


	)

10 
Ty_ty_
 *
	tTy_ty
;

11 
Ty_tyLi°_
 *
	tTy_tyLi°
;

12 
Ty_fõld_
 *
	tTy_fõld
;

13 
Ty_fõldLi°_
 *
	tTy_fõldLi°
;

15 
	sTy_ty_


17 íum {
	mTy_ªc‹d
, 
	mTy_nû
, 
	mTy_öt
, 
	mTy_°rög
, 
	mTy_¨øy
,

18 
	mTy_«me
, 
	mTy_void
} 
	mköd
;

21 
Ty_fõldLi°
 
	mªc‹d
;

22 
Ty_ty
 
	m¨øy
;

23 °ru˘ {
S_symbﬁ
 
	msym
; 
Ty_ty
 
	mty
;} 
	m«me
;

24 } 
	mu
;

27 
	sTy_tyLi°_
 {
Ty_ty
 
	mhód
; 
Ty_tyLi°
 
	mèû
;};

28 
	sTy_fõld_
 {
S_symbﬁ
 
	m«me
; 
Ty_ty
 
	mty
;};

29 
	sTy_fõldLi°_
 {
Ty_fõld
 
	mhód
; 
Ty_fõldLi°
 
	mèû
;};

31 
Ty_ty
 
Ty_Nû
();

32 
Ty_ty
 
Ty_I¡
();

33 
Ty_ty
 
Ty_Såög
();

34 
Ty_ty
 
Ty_Void
();

36 
Ty_ty
 
Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
);

37 
Ty_ty
 
Ty_Aºay
(Ty_ty 
ty
);

38 
Ty_ty
 
Ty_Name
(
S_symbﬁ
 
sym
, Ty_ty 
ty
);

40 
Ty_tyLi°
 
Ty_TyLi°
(
Ty_ty
 
hód
, Ty_tyLi° 
èû
);

41 
Ty_fõld
 
Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
);

42 
Ty_fõldLi°
 
Ty_FõldLi°
(
Ty_fõld
 
hód
, Ty_fõldLi° 
èû
);

44 
Ty_¥öt
(
Ty_ty
 
t
);

45 
TyLi°_¥öt
(
Ty_tyLi°
 
li°
);

	@util.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~"utû.h
"

9 *
	$checked_mÆloc
(
Àn
)

11 *
p
 = 
	`mÆloc
(
Àn
);

12 i‡(!
p
) {

13 
	`Ârötf
(
°dîr
,"\nRan out of memory!\n");

14 
	`exô
(1);

16 
	`mem£t
(
p
, 0, 
Àn
);

17  
p
;

18 
	}
}

20 
°rög
 
	$Såög
(*
s
)

21 {
°rög
 
p
 = 
	`checked_mÆloc
(
	`°æí
(
s
)+1);

22 
	`°r˝y
(
p
,
s
);

23  
p
;

24 
	}
}

26 
U_boﬁLi°
 
	$U_BoﬁLi°
(
boﬁ
 
hód
, 
U_boﬁLi°
 
èû
)

27 { 
U_boﬁLi°
 
li°
 = 
	`checked_mÆloc
((*list));

28 
li°
->
hód
 = head;

29 
li°
->
èû
 =Åail;

30  
li°
;

31 
	}
}

	@util.h

1 #i‚de‡
UTIL_H


2 
	#UTIL_H


	)

3 
	~<as£π.h
>

5 *
	t°rög
;

6 
	tboﬁ
;

8 
	#TRUE
 1

	)

9 
	#FALSE
 0

	)

11 *
checked_mÆloc
();

12 
°rög
 
Såög
(*);

14 
U_boﬁLi°_
 *
	tU_boﬁLi°
;

15 
	sU_boﬁLi°_
 {
boﬁ
 
	mhód
; 
U_boﬁLi°
 
	mèû
;};

16 
U_boﬁLi°
 
U_BoﬁLi°
(
boﬁ
 
hód
, U_boﬁLi° 
èû
);

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
38
543
absyn.c
absyn.h
env.c
env.h
errormsg.c
errormsg.h
helper.h
parse.c
parse.h
prabsyn.c
prabsyn.h
semant.c
semant.h
symbol.c
symbol.h
table.c
table.h
tiger.y
types.c
types.h
util.c
util.h
/usr/include/assert.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
