cscope 15 $HOME/codes/compiler_labs/lab6               0000596880
	@absyn.c

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"absyn.h
"

9 
	~<°dlib.h
>

10 
	~<°dio.h
>

11 
A_v¨
 
	$A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
)

12 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

13 
p
->
köd
=
A_sim∂eV¨
;

14 
p
->
pos
=pos;

15 
p
->
u
.
sim∂e
=
sym
;

16  
p
;

17 
	}
}

19 
A_v¨
 
	$A_FõldV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
S_symbﬁ
 
sym
)

20 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

21 
p
->
köd
=
A_fõldV¨
;

22 
p
->
pos
=pos;

23 
p
->
u
.
fõld
.
v¨
=var;

24 
p
->
u
.
fõld
.
sym
=sym;

25  
p
;

26 
	}
}

28 
A_v¨
 
	$A_Subs¸ùtV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

29 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

30 
p
->
köd
=
A_subs¸ùtV¨
;

31 
p
->
pos
=pos;

32 
p
->
u
.
subs¸ùt
.
v¨
=var;

33 
p
->
u
.
subs¸ùt
.
exp
=exp;

34  
p
;

35 
	}
}

38 
A_exp
 
	$A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
)

39 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

40 
p
->
köd
=
A_v¨Exp
;

41 
p
->
pos
=pos;

42 
p
->
u
.
v¨
=var;

43  
p
;

44 
	}
}

46 
A_exp
 
	$A_NûExp
(
A_pos
 
pos
)

47 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

48 
p
->
köd
=
A_nûExp
;

49 
p
->
pos
=pos;

50  
p
;

51 
	}
}

53 
A_exp
 
	$A_I¡Exp
(
A_pos
 
pos
, 
i
)

54 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

55 
p
->
köd
=
A_ötExp
;

56 
p
->
pos
=pos;

57 
p
->
u
.
öâ
=
i
;

58  
p
;

59 
	}
}

61 
A_exp
 
	$A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
)

63 
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

64 
p
->
köd
=
A_°rögExp
;

65 
p
->
pos
=pos;

66 
p
->
u
.
°rögg
=
s
;

67  
p
;

68 
	}
}

70 
A_exp
 
	$A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
)

71 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

72 
p
->
köd
=
A_ˇŒExp
;

73 
p
->
pos
=pos;

74 
p
->
u
.
ˇŒ
.
func
=func;

75 
p
->
u
.
ˇŒ
.
¨gs
=args;

76  
p
;

77 
	}
}

79 
A_exp
 
	$A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, 
A_exp
 
À·
, A_ex∞
right
)

80 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

81 
p
->
köd
=
A_›Exp
;

82 
p
->
pos
=pos;

83 
p
->
u
.
›
.
›î
=oper;

84 
p
->
u
.
›
.
À·
=left;

85 
p
->
u
.
›
.
right
=right;

86  
p
;

87 
	}
}

89 
A_exp
 
	$A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
)

90 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

91 
p
->
köd
=
A_ªc‹dExp
;

92 
p
->
pos
=pos;

93 
p
->
u
.
ªc‹d
.
typ
=typ;

94 
p
->
u
.
ªc‹d
.
fõlds
=fields;

95  
p
;

96 
	}
}

98 
A_exp
 
	$A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
)

99 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

100 
p
->
köd
=
A_£qExp
;

101 
p
->
pos
=pos;

102 
p
->
u
.
£q
=seq;

103  
p
;

104 
	}
}

106 
A_exp
 
	$A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

107 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

108 
p
->
köd
=
A_assignExp
;

109 
p
->
pos
=pos;

110 
p
->
u
.
assign
.
v¨
=var;

111 
p
->
u
.
assign
.
exp
=exp;

112  
p
;

113 
	}
}

115 
A_exp
 
	$A_IfExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
)

116 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

117 
p
->
köd
=
A_ifExp
;

118 
p
->
pos
=pos;

119 
p
->
u
.
iff
.
ã°
=test;

120 
p
->
u
.
iff
.
thí
=then;

121 
p
->
u
.
iff
.
ñ£e
=elsee;

122  
p
;

123 
	}
}

125 
A_exp
 
	$A_WhûeExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
body
)

126 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

127 
p
->
köd
=
A_whûeExp
;

128 
p
->
pos
=pos;

129 
p
->
u
.
whûì
.
ã°
=test;

130 
p
->
u
.
whûì
.
body
=body;

131  
p
;

132 
	}
}

134 
A_exp
 
	$A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, 
A_exp
 
lo
, A_ex∞
hi
, A_ex∞
body
)

135 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

136 
p
->
köd
=
A_f‹Exp
;

137 
p
->
pos
=pos;

138 
p
->
u
.
f‹r
.
v¨
=var;

139 
p
->
u
.
f‹r
.
lo
=lo;

140 
p
->
u
.
f‹r
.
hi
=hi;

141 
p
->
u
.
f‹r
.
body
=body;

142 
p
->
u
.
f‹r
.
esˇ≥
=
TRUE
;

143  
p
;

144 
	}
}

146 
A_exp
 
	$A_BªakExp
(
A_pos
 
pos
)

147 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

148 
p
->
köd
=
A_bªakExp
;

149 
p
->
pos
=pos;

150  
p
;

151 
	}
}

153 
A_exp
 
	$A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, 
A_exp
 
body
)

154 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

155 
p
->
köd
=
A_ÀtExp
;

156 
p
->
pos
=pos;

157 
p
->
u
.
Àt
.
decs
=decs;

158 
p
->
u
.
Àt
.
body
=body;

159  
p
;

160 
	}
}

162 
A_exp
 
	$A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_exp
 
size
, A_ex∞
öô
)

163 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

164 
p
->
köd
=
A_¨øyExp
;

165 
p
->
pos
=pos;

166 
p
->
u
.
¨øy
.
typ
=typ;

167 
p
->
u
.
¨øy
.
size
=size;

168 
p
->
u
.
¨øy
.
öô
=init;

169  
p
;

170 
	}
}

172 
A_dec
 
	$A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
)

173 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

174 
p
->
köd
=
A_fun˘i⁄Dec
;

175 
p
->
pos
=pos;

176 
p
->
u
.
fun˘i⁄
=function;

177  
p
;

178 
	}
}

180 
A_dec
 
	$A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
)

181 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

182 
p
->
köd
=
A_v¨Dec
;

183 
p
->
pos
=pos;

184 
p
->
u
.
v¨
.var=var;

185 
p
->
u
.
v¨
.
typ
=typ;

186 
p
->
u
.
v¨
.
öô
=init;

187 
p
->
u
.
v¨
.
esˇ≥
=
TRUE
;

188  
p
;

189 
	}
}

191 
A_dec
 
	$A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
)

192 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

193 
p
->
köd
=
A_ty≥Dec
;

194 
p
->
pos
=pos;

195 
p
->
u
.
ty≥
=type;

196  
p
;

197 
	}
}

199 
A_ty
 
	$A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
)

200 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

201 
p
->
köd
=
A_«meTy
;

202 
p
->
pos
=pos;

203 
p
->
u
.
«me
=name;

204  
p
;

205 
	}
}

207 
A_ty
 
	$A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
)

208 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

209 
p
->
köd
=
A_ªc‹dTy
;

210 
p
->
pos
=pos;

211 
p
->
u
.
ªc‹d
=record;

212  
p
;

213 
	}
}

215 
A_ty
 
	$A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
)

216 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

217 
p
->
köd
=
A_¨øyTy
;

218 
p
->
pos
=pos;

219 
p
->
u
.
¨øy
=array;

220  
p
;

221 
	}
}

223 
A_fõld
 
	$A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
)

224 {
A_fõld
 
p
 = 
	`checked_mÆloc
((*p));

225 
p
->
pos
=pos;

226 
p
->
«me
=name;

227 
p
->
typ
=typ;

228 
p
->
esˇ≥
=
TRUE
;

229  
p
;

230 
	}
}

232 
A_fõldLi°
 
	$A_FõldLi°
(
A_fõld
 
hód
, 
A_fõldLi°
 
èû
)

233 {
A_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

234 
p
->
hód
=head;

235 
p
->
èû
=tail;

236  
p
;

237 
	}
}

239 
A_expLi°
 
	$A_ExpLi°
(
A_exp
 
hód
, 
A_expLi°
 
èû
)

240 {
A_expLi°
 
p
 = 
	`checked_mÆloc
((*p));

241 
p
->
hód
=head;

242 
p
->
èû
=tail;

243  
p
;

244 
	}
}

246 
A_fundec
 
	$A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

247 
A_exp
 
body
)

248 {
A_fundec
 
p
 = 
	`checked_mÆloc
((*p));

249 
p
->
pos
=pos;

250 
p
->
«me
=name;

251 
p
->
∑øms
=params;

252 
p
->
ªsu…
=result;

253 
p
->
body
=body;

254  
p
;

255 
	}
}

257 
A_fundecLi°
 
	$A_FundecLi°
(
A_fundec
 
hód
, 
A_fundecLi°
 
èû
)

258 {
A_fundecLi°
 
p
 = 
	`checked_mÆloc
((*p));

259 
p
->
hód
=head;

260 
p
->
èû
=tail;

261  
p
;

262 
	}
}

264 
A_decLi°
 
	$A_DecLi°
(
A_dec
 
hód
, 
A_decLi°
 
èû
)

265 {
A_decLi°
 
p
 = 
	`checked_mÆloc
((*p));

266 
p
->
hód
=head;

267 
p
->
èû
=tail;

268  
p
;

269 
	}
}

271 
A_«mëy
 
	$A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
)

272 {
A_«mëy
 
p
 = 
	`checked_mÆloc
((*p));

273 
p
->
«me
=name;

274 
p
->
ty
=ty;

275  
p
;

276 
	}
}

278 
A_«mëyLi°
 
	$A_NamëyLi°
(
A_«mëy
 
hód
, 
A_«mëyLi°
 
èû
)

279 {
A_«mëyLi°
 
p
 = 
	`checked_mÆloc
((*p));

280 
p
->
hód
=head;

281 
p
->
èû
=tail;

282  
p
;

283 
	}
}

285 
A_efõld
 
	$A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
)

286 {
A_efõld
 
p
 = 
	`checked_mÆloc
((*p));

287 
p
->
«me
=name;

288 
p
->
exp
=exp;

289  
p
;

290 
	}
}

292 
A_efõldLi°
 
	$A_EfõldLi°
(
A_efõld
 
hód
, 
A_efõldLi°
 
èû
)

293 {
A_efõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

294 
p
->
hód
=head;

295 
p
->
èû
=tail;

296  
p
;

297 
	}
}

	@absyn.h

1 #i‚de‡
ABSYN_H


2 
	#ABSYN_H


	)

12 
	tA_pos
;

14 
A_v¨_
 *
	tA_v¨
;

15 
A_exp_
 *
	tA_exp
;

16 
A_dec_
 *
	tA_dec
;

17 
A_ty_
 *
	tA_ty
;

19 
A_decLi°_
 *
	tA_decLi°
;

20 
A_expLi°_
 *
	tA_expLi°
;

21 
A_fõld_
 *
	tA_fõld
;

22 
A_fõldLi°_
 *
	tA_fõldLi°
;

23 
A_fundec_
 *
	tA_fundec
;

24 
A_fundecLi°_
 *
	tA_fundecLi°
;

25 
A_«mëy_
 *
	tA_«mëy
;

26 
A_«mëyLi°_
 *
	tA_«mëyLi°
;

27 
A_efõld_
 *
	tA_efõld
;

28 
A_efõldLi°_
 *
	tA_efõldLi°
;

30 íum {
	mA_∂usOp
, 
	mA_möusOp
, 
	mA_timesOp
, 
	mA_divideOp
,

31 
	mA_eqOp
, 
	mA_√qOp
, 
	mA_…Op
, 
	mA_ÀOp
, 
	mA_gtOp
, 
	mA_geOp
} 
	tA_›î
;

33 
	sA_v¨_


34 {íum {
	mA_sim∂eV¨
, 
	mA_fõldV¨
, 
	mA_subs¸ùtV¨
} 
	mköd
;

35 
A_pos
 
	mpos
;

36 uni⁄ {
S_symbﬁ
 
	msim∂e
;

37 °ru˘ {
A_v¨
 
	mv¨
;

38 
S_symbﬁ
 
	msym
;} 
	mfõld
;

39 °ru˘ {
A_v¨
 
	mv¨
;

40 
A_exp
 
	mexp
;} 
	msubs¸ùt
;

41 } 
	mu
;

44 
	sA_exp_


45 {íum {
	mA_v¨Exp
, 
	mA_nûExp
, 
	mA_ötExp
, 
	mA_°rögExp
, 
	mA_ˇŒExp
,

46 
	mA_›Exp
, 
	mA_ªc‹dExp
, 
	mA_£qExp
, 
	mA_assignExp
, 
	mA_ifExp
,

47 
	mA_whûeExp
, 
	mA_f‹Exp
, 
	mA_bªakExp
, 
	mA_ÀtExp
, 
	mA_¨øyExp
} 
	mköd
;

48 
A_pos
 
	mpos
;

49 uni⁄ {
A_v¨
 
	mv¨
;

51 
	möâ
;

52 
°rög
 
	m°rögg
;

53 °ru˘ {
S_symbﬁ
 
	mfunc
; 
A_expLi°
 
	m¨gs
;} 
	mˇŒ
;

54 °ru˘ {
A_›î
 
	m›î
; 
A_exp
 
	mÀ·
; A_ex∞
	mright
;} 
	m›
;

55 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_efõldLi°
 
	mfõlds
;} 
	mªc‹d
;

56 
A_expLi°
 
	m£q
;

57 °ru˘ {
A_v¨
 
	mv¨
; 
A_exp
 
	mexp
;} 
	massign
;

58 °ru˘ {
A_exp
 
	mã°
, 
	mthí
, 
	mñ£e
;} 
	miff
;

59 °ru˘ {
A_exp
 
	mã°
, 
	mbody
;} 
	mwhûì
;

60 °ru˘ {
S_symbﬁ
 
	mv¨
; 
A_exp
 
	mlo
,
	mhi
,
	mbody
; 
boﬁ
 
	mesˇ≥
;} 
	mf‹r
;

62 °ru˘ {
A_decLi°
 
	mdecs
; 
A_exp
 
	mbody
;} 
	mÀt
;

63 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_exp
 
	msize
, 
	möô
;} 
	m¨øy
;

64 } 
	mu
;

67 
	sA_dec_


68 {íum {
	mA_fun˘i⁄Dec
, 
	mA_v¨Dec
, 
	mA_ty≥Dec
} 
	mköd
;

69 
A_pos
 
	mpos
;

70 uni⁄ {
A_fundecLi°
 
	mfun˘i⁄
;

72 °ru˘ {
S_symbﬁ
 
	mv¨
; S_symbﬁ 
	mtyp
; 
A_exp
 
	möô
; 
boﬁ
 
	mesˇ≥
;} var;

73 
A_«mëyLi°
 
	mty≥
;

74 } 
	mu
;

77 
	sA_ty_
 {íum {
	mA_«meTy
, 
	mA_ªc‹dTy
, 
	mA_¨øyTy
} 
	mköd
;

78 
A_pos
 
	mpos
;

79 uni⁄ {
S_symbﬁ
 
	m«me
;

80 
A_fõldLi°
 
	mªc‹d
;

81 
S_symbﬁ
 
	m¨øy
;

82 } 
	mu
;

87 
	sA_fõld_
 {
S_symbﬁ
 
	m«me
, 
	mtyp
; 
A_pos
 
	mpos
; 
boﬁ
 
	mesˇ≥
;};

88 
	sA_fõldLi°_
 {
A_fõld
 
	mhód
; 
A_fõldLi°
 
	mèû
;};

89 
	sA_expLi°_
 {
A_exp
 
	mhód
; 
A_expLi°
 
	mèû
;};

90 
	sA_fundec_
 {
A_pos
 
	mpos
;

91 
S_symbﬁ
 
	m«me
; 
A_fõldLi°
 
	m∑øms
;

92 
S_symbﬁ
 
	mªsu…
; 
A_exp
 
	mbody
;};

94 
	sA_fundecLi°_
 {
A_fundec
 
	mhód
; 
A_fundecLi°
 
	mèû
;};

95 
	sA_decLi°_
 {
A_dec
 
	mhód
; 
A_decLi°
 
	mèû
;};

96 
	sA_«mëy_
 {
S_symbﬁ
 
	m«me
; 
A_ty
 
	mty
;};

97 
	sA_«mëyLi°_
 {
A_«mëy
 
	mhód
; 
A_«mëyLi°
 
	mèû
;};

98 
	sA_efõld_
 {
S_symbﬁ
 
	m«me
; 
A_exp
 
	mexp
;};

99 
	sA_efõldLi°_
 {
A_efõld
 
	mhód
; 
A_efõldLi°
 
	mèû
;};

103 
A_v¨
 
A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
);

104 
A_v¨
 
A_FõldV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
S_symbﬁ
 
sym
);

105 
A_v¨
 
A_Subs¸ùtV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
A_exp
 
exp
);

106 
A_exp
 
A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
);

107 
A_exp
 
A_NûExp
(
A_pos
 
pos
);

108 
A_exp
 
A_I¡Exp
(
A_pos
 
pos
, 
i
);

109 
A_exp
 
A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
);

110 
A_exp
 
A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
);

111 
A_exp
 
A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, A_ex∞
À·
, A_ex∞
right
);

112 
A_exp
 
A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
);

113 
A_exp
 
A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
);

114 
A_exp
 
A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, A_ex∞
exp
);

115 
A_exp
 
A_IfExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
);

116 
A_exp
 
A_WhûeExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
body
);

117 
A_exp
 
A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, A_ex∞
lo
, A_ex∞
hi
, A_ex∞
body
);

118 
A_exp
 
A_BªakExp
(
A_pos
 
pos
);

119 
A_exp
 
A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, A_ex∞
body
);

120 
A_exp
 
A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, A_ex∞
size
, A_ex∞
öô
);

121 
A_dec
 
A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
);

122 
A_dec
 
A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
);

123 
A_dec
 
A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
);

124 
A_ty
 
A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
);

125 
A_ty
 
A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
);

126 
A_ty
 
A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
);

127 
A_fõld
 
A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
);

128 
A_fõldLi°
 
A_FõldLi°
(
A_fõld
 
hód
, A_fõldLi° 
èû
);

129 
A_expLi°
 
A_ExpLi°
(
A_exp
 
hód
, A_expLi° 
èû
);

130 
A_fundec
 
A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

131 
A_exp
 
body
);

132 
A_fundecLi°
 
A_FundecLi°
(
A_fundec
 
hód
, A_fundecLi° 
èû
);

133 
A_decLi°
 
A_DecLi°
(
A_dec
 
hód
, A_decLi° 
èû
);

134 
A_«mëy
 
A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
);

135 
A_«mëyLi°
 
A_NamëyLi°
(
A_«mëy
 
hód
, A_«mëyLi° 
èû
);

136 
A_efõld
 
A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
);

137 
A_efõldLi°
 
A_EfõldLi°
(
A_efõld
 
hód
, A_efõldLi° 
èû
);

	@assem.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~"utû.h
"

10 
	~"symbﬁ.h
"

11 
	~"absyn.h
"

12 
	~"ãmp.h
"

13 
	~"åì.h
"

14 
	~"as£m.h
"

15 
	~"‰ame.h
"

16 
	~"îr‹msg.h
"

18 
AS_èrgës
 
	$AS_T¨gës
(
Temp_œbñLi°
 
œbñs
) {

19 
AS_èrgës
 
p
 = 
	`checked_mÆloc
 ( *p);

20 
p
->
œbñs
=labels;

21  
p
;

22 
	}
}

24 
AS_ö°r
 
	$AS_O≥r
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
, 
AS_èrgës
 
j
) {

25 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

26 
p
->
köd
 = 
I_OPER
;

27 
p
->
u
.
OPER
.
as£m
=
a
;

28 
p
->
u
.
OPER
.
d°
=
d
;

29 
p
->
u
.
OPER
.
§c
=
s
;

30 
p
->
u
.
OPER
.
jumps
=
j
;

31  
p
;

32 
	}
}

34 
AS_ö°r
 
	$AS_Labñ
(
°rög
 
a
, 
Temp_œbñ
 
œbñ
) {

35 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

36 
p
->
köd
 = 
I_LABEL
;

37 
p
->
u
.
LABEL
.
as£m
=
a
;

38 
p
->
u
.
LABEL
.
œbñ
=label;

39  
p
;

40 
	}
}

42 
AS_ö°r
 
	$AS_Move
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
) {

43 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

44 
p
->
köd
 = 
I_MOVE
;

45 
p
->
u
.
MOVE
.
as£m
=
a
;

46 
p
->
u
.
MOVE
.
d°
=
d
;

47 
p
->
u
.
MOVE
.
§c
=
s
;

48  
p
;

49 
	}
}

51 
AS_ö°rLi°
 
	$AS_In°rLi°
(
AS_ö°r
 
hód
, 
AS_ö°rLi°
 
èû
)

52 {
AS_ö°rLi°
 
p
 = (AS_ö°rLi°Ë
	`checked_mÆloc
 ( *p);

53 
p
->
hód
=hód;Ö->
èû
=tail;

54  
p
;

55 
	}
}

58 
AS_ö°rLi°
 
	$AS_•li˚
(
AS_ö°rLi°
 
a
, AS_ö°rLi° 
b
) {

59 
AS_ö°rLi°
 
p
;

60 i‡(
a
==
NULL
Ë 
b
;

61 
p
=
a
;Ö->
èû
!=
NULL
;Ö=p->tail) ;

62 
p
->
èû
=
b
;

63  
a
;

64 
	}
}

66 
Temp_ãmp
 
	$¡hTemp
(
Temp_ãmpLi°
 
li°
, 
i
) {

67 
	`as£π
(
li°
);

68 i‡(
i
==0Ë 
li°
->
hód
;

69  
	`¡hTemp
(
li°
->
èû
,
i
-1);

70 
	}
}

72 
Temp_œbñ
 
	$¡hLabñ
(
Temp_œbñLi°
 
li°
, 
i
) {

73 
	`as£π
(
li°
);

74 i‡(
i
==0Ë 
li°
->
hód
;

75  
	`¡hLabñ
(
li°
->
èû
,
i
-1);

76 
	}
}

83 
	$f‹m©
(*
ªsu…
, 
°rög
 
as£m
,

84 
Temp_ãmpLi°
 
d°
, Temp_ãmpLi° 
§c
,

85 
AS_èrgës
 
jumps
, 
Temp_m≠
 
m
)

89 *
p
;

90 
i
 = 0;

91 
p
 = 
as£m
;Ö && *p != '\0';Ö++){

92 i‡(*
p
 == '`') {

93 *(++
p
)) {

96 
n
 = 
	`©oi
(++
p
);

97 
°rög
 
s
 = 
	`Temp_look
(
m
, 
	`¡hTemp
(
§c
,
n
));

98 
	`°r˝y
(
ªsu…
+
i
, 
s
);

99 
i
 +
	`°æí
(
s
);

104 
n
 = 
	`©oi
(++
p
);

105 
°rög
 
s
 = 
	`Temp_look
(
m
, 
	`¡hTemp
(
d°
,
n
));

106 
	`°r˝y
(
ªsu…
+
i
, 
s
);

107 
i
 +
	`°æí
(
s
);

111 
	`as£π
(
jumps
);

113 
n
 = 
	`©oi
(++
p
);

114 
°rög
 
s
 = 
	`Temp_œbñ°rög
(
	`¡hLabñ
(
jumps
->
œbñs
,
n
));

115 
	`°r˝y
(
ªsu…
+
i
, 
s
);

116 
i
 +
	`°æí
(
s
);

119 '`': 
ªsu…
[
i
] = '`'; i++;

121 : 
	`as£π
(0);

124 {
ªsu…
[
i
] = *
p
; i++; }}

125 
ªsu…
[
i
] = '\0';

126 
	}
}

128 
	$AS_¥öt
(
FILE
 *
out
, 
AS_ö°r
 
i
, 
Temp_m≠
 
m
)

130 
r
[200];

131 
i
->
köd
) {

132 
I_OPER
:

133 
	`f‹m©
(
r
, 
i
->
u
.
OPER
.
as£m
, i->u.OPER.
d°
, i->u.OPER.
§c
, i->u.OPER.
jumps
, 
m
);

134 
	`Ârötf
(
out
, "\t%s", 
r
);

136 
I_LABEL
:

137 
	`f‹m©
(
r
, 
i
->
u
.
LABEL
.
as£m
, 
NULL
, NULL, NULL, 
m
);

138 
	`Ârötf
(
out
, "%s", 
r
);

141 
I_MOVE
: {

142 i‡((
i
->
u
.
MOVE
.
d°
 =
NULL
Ë&& (i->u.MOVE.
§c
 == NULL)) {

143 *
§c
 = 
	`°rchr
(
i
->
u
.
MOVE
.
as£m
, '%');

144 i‡(
§c
 !
NULL
) {

145 *
d°
 = 
	`°rchr
(
§c
 + 1, '%');

146 i‡(
d°
 !
NULL
) {

148 i‡((
§c
[1] =
d°
[1]) && (src[2] == dst[2]) && (src[3] == dst[3])) ;

152 
	`f‹m©
(
r
, 
i
->
u
.
MOVE
.
as£m
, i->u.MOVE.
d°
, i->u.MOVE.
§c
, 
NULL
, 
m
);

153 
	`Ârötf
(
out
, "\t%s", 
r
);

157 
	}
}

160 
	$AS_¥ötIn°rLi°
 (
FILE
 *
out
, 
AS_ö°rLi°
 
iLi°
, 
Temp_m≠
 
m
)

162 ; 
iLi°
; iLi°=iLi°->
èû
) {

163 
	`AS_¥öt
(
out
, 
iLi°
->
hód
, 
m
);

165 
	`Ârötf
(
out
, "\n");

166 
	}
}

168 
AS_¥oc
 
	$AS_Proc
(
°rög
 
p
, 
AS_ö°rLi°
 
b
, såög 
e
)

169 {
AS_¥oc
 
¥oc
 = 
	`checked_mÆloc
((*proc));

170 
¥oc
->
¥ﬁog
=
p
;Öroc->
body
=
b
;Öroc->
ïûog
=
e
;

171  
¥oc
;

172 
	}
}

	@assem.h

6 #i‚de‡
ASSEM_H


7 
	#ASSEM_H


	)

9 °ru˘ {
Temp_œbñLi°
 
	mœbñs
;} *
	tAS_èrgës
;

10 
AS_èrgës
 
AS_T¨gës
(
Temp_œbñLi°
 
œbñs
);

12 
AS_ö°r_
 *
	tAS_ö°r
;

13 
	sAS_ö°r_
 {Énum {
	mI_OPER
, 
	mI_LABEL
, 
	mI_MOVE
} 
	mköd
;

14 uni⁄ {°ru˘ {
°rög
 
	mas£m
; 
Temp_ãmpLi°
 
	md°
, 
	m§c
;

15 
AS_èrgës
 
	mjumps
;} 
	mOPER
;

16 °ru˘ {
°rög
 
	mas£m
; 
Temp_œbñ
 
	mœbñ
;} 
	mLABEL
;

17 °ru˘ {
°rög
 
	mas£m
; 
Temp_ãmpLi°
 
	md°
, 
	m§c
;} 
	mMOVE
;

18 } 
	mu
;

21 
AS_ö°r
 
AS_O≥r
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
, 
AS_èrgës
 
j
);

22 
AS_ö°r
 
AS_Labñ
(
°rög
 
a
, 
Temp_œbñ
 
œbñ
);

23 
AS_ö°r
 
AS_Move
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
);

25 
AS_¥öt
(
FILE
 *
out
, 
AS_ö°r
 
i
, 
Temp_m≠
 
m
);

27 
AS_ö°rLi°_
 *
	tAS_ö°rLi°
;

28 
	sAS_ö°rLi°_
 { 
AS_ö°r
 
	mhód
; 
AS_ö°rLi°
 
	mèû
;};

29 
AS_ö°rLi°
 
AS_In°rLi°
(
AS_ö°r
 
hód
, AS_ö°rLi° 
èû
);

31 
AS_ö°rLi°
 
AS_•li˚
(AS_ö°rLi° 
a
, AS_ö°rLi° 
b
);

32 
AS_¥ötIn°rLi°
 (
FILE
 *
out
, 
AS_ö°rLi°
 
iLi°
, 
Temp_m≠
 
m
);

34 
AS_¥oc_
 *
	tAS_¥oc
;

35 
	sAS_¥oc_
 {

36 
°rög
 
	m¥ﬁog
;

37 
AS_ö°rLi°
 
	mbody
;

38 
°rög
 
	mïûog
;

41 
AS_¥oc
 
AS_Proc
(
°rög
 
p
, 
AS_ö°rLi°
 
b
, såög 
e
);

	@canon.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ãmp.h
"

9 
	~"åì.h
"

10 
	~"ˇn⁄.h
"

12 
expRefLi°_
 *
	texpRefLi°
;

13 
	sexpRefLi°_
 {
T_exp
 *
	mhód
; 
expRefLi°
 
	mèû
;};

16 
T_°m
 
do_°m
(T_°m 
°m
);

17 
°mExp
 
do_exp
(
T_exp
 
exp
);

18 
C_°mLi°Li°
 
mkBlocks
(
T_°mLi°
 
°ms
, 
Temp_œbñ
 
d⁄e
);

19 
T_°mLi°
 
gëNext
();

21 
expRefLi°
 
	$ExpRefLi°
(
T_exp
 *
hód
, 
expRefLi°
 
èû
)

22 {
expRefLi°
 
p
 = (expRefLi°Ë
	`checked_mÆloc
 ( *p);

23 
p
->
hód
=hód;Ö->
èû
=tail;

24  
p
;

25 
	}
}

28 
boﬁ
 
	$isN›
(
T_°m
 
x
)

29 {  
x
->
köd
 =
T_EXP
 && x->
u
.
EXP
->köd =
T_CONST
;

30 
	}
}

33 
T_°m
 
	$£q
(
T_°m
 
x
, T_°m 
y
)

35 i‡(
	`isN›
(
x
)Ë 
y
;

36 i‡(
	`isN›
(
y
)Ë 
x
;

37  
	`T_Seq
(
x
,
y
);

38 
	}
}

41 
boﬁ
 
	$commuã
(
T_°m
 
x
, 
T_exp
 
y
)

43 i‡(
	`isN›
(
x
)Ë 
TRUE
;

44 i‡(
y
->
köd
 =
T_NAME
 || y->köd =
T_CONST
Ë 
TRUE
;

45  
FALSE
;

46 
	}
}

48 
	s°mExp
 {
T_°m
 
	ms
; 
T_exp
 
	me
;};

50 
T_°m
 
	$ª‹dî
(
expRefLi°
 
æi°
) {

51 i‡(!
æi°
Ë 
	`T_Exp
(
	`T_C⁄°
(0));

54 i‡((*
æi°
->
hód
)->
köd
==
T_CALL
) {

55 
Temp_ãmp
 
t
 = 
	`Temp_√wãmp
();

56 *
æi°
->
hód
 = 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
t
),*rlist->head),T_Temp(t));

57  
	`ª‹dî
(
æi°
);

61 
°mExp
 
hd
 = 
	`do_exp
(*
æi°
->
hód
);

62 
T_°m
 
s
 = 
	`ª‹dî
(
æi°
->
èû
);

63 i‡(
	`commuã
(
s
,
hd
.
e
)) {

64 *
æi°
->
hód
=
hd
.
e
;

65  
	`£q
(
hd
.
s
,s);

67 
Temp_ãmp
 
t
 = 
	`Temp_√wãmp
();

68 *
æi°
->
hód
=
	`T_Temp
(
t
);

69  
	`£q
(
hd
.
s
, seq(
	`T_Move
(
	`T_Temp
(
t
),hd.
e
), s));

72 
	}
}

74 
expRefLi°
 
	$gë_ˇŒ_æi°
(
T_exp
 
exp
)

75 {
expRefLi°
 
æi°
, 
cuº
;

76 
T_expLi°
 
¨gs
 = 
exp
->
u
.
CALL
.args;

77 
cuº
 = 
æi°
 = 
	`ExpRefLi°
(&
exp
->
u
.
CALL
.
fun
, 
NULL
);

78 ;
¨gs
;árgs˜rgs->
èû
) {

79 
cuº
 = cuº->
èû
 = 
	`ExpRefLi°
(&
¨gs
->
hód
, 
NULL
);

81  
æi°
;

82 
	}
}

84 
°mExp
 
	$StmExp
(
T_°m
 
°m
, 
T_exp
 
exp
) {

85 
°mExp
 
x
;

86 
x
.
s
 = 
°m
;

87 
x
.
e
 = 
exp
;

88  
x
;

89 
	}
}

91 
°mExp
 
	$do_exp
(
T_exp
 
exp
)

93 
exp
->
köd
) {

94 
T_BINOP
:

95  
	`StmExp
(
	`ª‹dî
(
	`ExpRefLi°
(&
exp
->
u
.
BINOP
.
À·
,

96 
	`ExpRefLi°
(&
exp
->
u
.
BINOP
.
right
, 
NULL
))),

97 
exp
);

98 
T_MEM
:

99  
	`StmExp
(
	`ª‹dî
(
	`ExpRefLi°
(&
exp
->
u
.
MEM
, 
NULL
)),Éxp);

100 
T_ESEQ
:

101 {
°mExp
 
x
 = 
	`do_exp
(
exp
->
u
.
ESEQ
.exp);

102  
	`StmExp
(
	`£q
(
	`do_°m
(
exp
->
u
.
ESEQ
.
°m
), 
x
.
s
), x.
e
);

104 
T_CALL
:

105  
	`StmExp
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
exp
)),Éxp);

107  
	`StmExp
(
	`ª‹dî
(
NULL
), 
exp
);

109 
	}
}

112 
T_°m
 
	$do_°m
(
T_°m
 
°m
)

114 
°m
->
köd
) {

115 
T_SEQ
:

116  
	`£q
(
	`do_°m
(
°m
->
u
.
SEQ
.
À·
), do_°m(°m->u.SEQ.
right
));

117 
T_JUMP
:

118  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
JUMP
.
exp
, 
NULL
)), stm);

119 
T_CJUMP
:

120  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
CJUMP
.
À·
,

121 
	`ExpRefLi°
(&
°m
->
u
.
CJUMP
.
right
,
NULL
))), stm);

122 
T_MOVE
:

123 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_TEMP
 && stm->u.MOVE.
§c
->köd =
T_CALL
)

124  
	`£q
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
°m
->
u
.
MOVE
.
§c
)), stm);

125 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_TEMP
)

126  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
§c
, 
NULL
)), stm);

127 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_MEM
)

128  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
d°
->u.
MEM
,

129 
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
§c
, 
NULL
))), stm);

130 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_ESEQ
) {

131 
T_°m
 
s
 = 
°m
->
u
.
MOVE
.
d°
->u.
ESEQ
.stm;

132 
°m
->
u
.
MOVE
.
d°
 = stm->u.MOVE.d°->u.
ESEQ
.
exp
;

133  
	`do_°m
(
	`T_Seq
(
s
, 
°m
));

135 
	`as£π
(0);

136 
T_EXP
:

137 i‡(
°m
->
u
.
EXP
->
köd
 =
T_CALL
)

138  
	`£q
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
°m
->
u
.
EXP
)), stm);

139  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
EXP
, 
NULL
)), stm);

141  
°m
;

143 
	}
}

146 
T_°mLi°
 
	$löór
(
T_°m
 
°m
, 
T_°mLi°
 
right
)

148 i‡(
°m
->
köd
 =
T_SEQ
)

149  
	`löór
(
°m
->
u
.
SEQ
.
À·
,löór(°m->u.SEQ.
right
,right));

150  
	`T_StmLi°
(
°m
, 
right
);

151 
	}
}

157 
T_°mLi°
 
	$C_löórize
(
T_°m
 
°m
)

159  
	`löór
(
	`do_°m
(
°m
), 
NULL
);

160 
	}
}

162 
C_°mLi°Li°
 
	$StmLi°Li°
(
T_°mLi°
 
hód
, 
C_°mLi°Li°
 
èû
)

163 {
C_°mLi°Li°
 
p
 = (C_°mLi°Li°Ë
	`checked_mÆloc
 ( *p);

164 
p
->
hód
=hód;Ö->
èû
=tail;

165  
p
;

166 
	}
}

169 
C_°mLi°Li°
 
	$√xt
(
T_°mLi°
 
¥ev°ms
, T_°mLi° 
°ms
, 
Temp_œbñ
 
d⁄e
)

171 i‡(!
°ms
)

172  
	`√xt
(
¥ev°ms
,

173 
	`T_StmLi°
(
	`T_Jump
(
	`T_Name
(
d⁄e
), 
	`Temp_LabñLi°
(d⁄e, 
NULL
)),

174 
NULL
), 
d⁄e
);

177 i‡(
°ms
->
hód
->
köd
 =
T_JUMP
 || stms->hód->köd =
T_CJUMP
) {

178 
C_°mLi°Li°
 
°mLi°s
;

179 
¥ev°ms
->
èû
 = 
°ms
;

180 
°mLi°s
 = 
	`mkBlocks
(
°ms
->
èû
, 
d⁄e
);

181 
°ms
->
èû
 = 
NULL
;

182  
°mLi°s
;

185 i‡(
°ms
->
hód
->
köd
 =
T_LABEL
) {

186 
Temp_œbñ
 
œb
 = 
°ms
->
hód
->
u
.
LABEL
;

187  
	`√xt
(
¥ev°ms
, 
	`T_StmLi°
(
	`T_Jump
(
	`T_Name
(
œb
), 
	`Temp_LabñLi°
÷ab, 
NULL
)),

188 
°ms
), 
d⁄e
);

192 
¥ev°ms
->
èû
 = 
°ms
;

193  
	`√xt
(
°ms
, stms->
èû
, 
d⁄e
);

195 
	}
}

198 
C_°mLi°Li°
 
	$mkBlocks
(
T_°mLi°
 
°ms
, 
Temp_œbñ
 
d⁄e
)

200 i‡(!
°ms
) {

201  
NULL
;

203 i‡(
°ms
->
hód
->
köd
 !
T_LABEL
) {

204  
	`mkBlocks
(
	`T_StmLi°
(
	`T_Labñ
(
	`Temp_√wœbñ
()), 
°ms
), 
d⁄e
);

207  
	`StmLi°Li°
(
°ms
, 
	`√xt
(°ms, stms->
èû
, 
d⁄e
));

208 
	}
}

221 
C_block
 
	$C_basicBlocks
(
T_°mLi°
 
°mLi°
)

223 
C_block
 
b
;

224 
b
.
œbñ
 = 
	`Temp_√wœbñ
();

225 
b
.
°mLi°s
 = 
	`mkBlocks
(
°mLi°
, b.
œbñ
);

227  
b
;

228 
	}
}

230 
S_èbÀ
 
	gblock_ív
;

231 
C_block
 
	gglobÆ_block
;

233 
T_°mLi°
 
	$gëLa°
(
T_°mLi°
 
li°
)

235 
T_°mLi°
 
œ°
 = 
li°
;

236 
œ°
->
èû
->tail)Üast =Üast->tail;

238  
œ°
;

239 
	}
}

241 
	$åa˚
(
T_°mLi°
 
li°
)

243 
T_°mLi°
 
œ°
 = 
	`gëLa°
(
li°
);

244 
T_°m
 
œb
 = 
li°
->
hód
;

245 
T_°m
 
s
 = 
œ°
->
èû
->
hód
;

247 
	`S_íãr
(
block_ív
, 
œb
->
u
.
LABEL
, 
NULL
);

248 i‡(
s
->
köd
 =
T_JUMP
) {

249 
T_°mLi°
 
èrgë
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
JUMP
.
jumps
->
hód
);

250 i‡(!
s
->
u
.
JUMP
.
jumps
->
èû
 && 
èrgë
) {

251 
œ°
->
èû
 = 
èrgë
;

252 
	`åa˚
(
èrgë
);

254 
œ°
->
èû
->èû = 
	`gëNext
();

257 i‡(
s
->
köd
 =
T_CJUMP
) {

258 
T_°mLi°
 
åue
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
CJUMP
.true);

259 
T_°mLi°
 
Ál£
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
CJUMP
.false);

260 i‡(
Ál£
) {

261 
œ°
->
èû
->èû = 
Ál£
;

262 
	`åa˚
(
Ál£
);

264 i‡(
åue
) {

265 
œ°
->
èû
->
hód
 = 
	`T_Cjump
(
	`T_nŸRñ
(
s
->
u
.
CJUMP
.
›
), s->u.CJUMP.
À·
,

266 
s
->
u
.
CJUMP
.
right
, s->u.CJUMP.
Ál£
,

267 
s
->
u
.
CJUMP
.
åue
);

268 
œ°
->
èû
->èû = 
åue
;

269 
	`åa˚
(
åue
);

272 
Temp_œbñ
 
Ál£
 = 
	`Temp_√wœbñ
();

273 
œ°
->
èû
->
hód
 = 
	`T_Cjump
(
s
->
u
.
CJUMP
.
›
, s->u.CJUMP.
À·
,

274 
s
->
u
.
CJUMP
.
right
, s->u.CJUMP.
åue
, 
Ál£
);

275 
œ°
->
èû
->èû = 
	`T_StmLi°
(
	`T_Labñ
(
Ál£
), 
	`gëNext
());

278 
	`as£π
(0);

279 
	}
}

283 
T_°mLi°
 
	$gëNext
()

285 i‡(!
globÆ_block
.
°mLi°s
)

286  
	`T_StmLi°
(
	`T_Labñ
(
globÆ_block
.
œbñ
), 
NULL
);

288 
T_°mLi°
 
s
 = 
globÆ_block
.
°mLi°s
->
hód
;

289 i‡(
	`S_look
(
block_ív
, 
s
->
hód
->
u
.
LABEL
)) {

290 
	`åa˚
(
s
);

291  
s
;

294 
globÆ_block
.
°mLi°s
 = globÆ_block.°mLi°s->
èû
;

295  
	`gëNext
();

298 
	}
}

309 
T_°mLi°
 
	$C_åa˚ScheduÀ
(
C_block
 
b
)

310 { 
C_°mLi°Li°
 
sLi°
;

311 
block_ív
 = 
	`S_em±y
();

312 
globÆ_block
 = 
b
;

314 
sLi°
=
globÆ_block
.
°mLi°s
; sLi°; sLi°=sLi°->
èû
) {

315 
	`S_íãr
(
block_ív
, 
sLi°
->
hód
->hód->
u
.
LABEL
, sList->head);

318  
	`gëNext
();

319 
	}
}

	@canon.h

7 #i‚de‡
CANNON_H


8 
	#CANNON_H


	)

10 
C_°mLi°Li°_
 *
	tC_°mLi°Li°
;

11 
	sC_block
 { 
C_°mLi°Li°
 
	m°mLi°s
; 
Temp_œbñ
 
	mœbñ
;};

12 
	sC_°mLi°Li°_
 { 
T_°mLi°
 
	mhód
; 
C_°mLi°Li°
 
	mèû
;};

14 
T_°mLi°
 
C_löórize
(
T_°m
 
°m
);

21 
C_block
 
C_basicBlocks
(
T_°mLi°
 
°mLi°
);

34 
T_°mLi°
 
C_åa˚ScheduÀ
(
C_block
 
b
);

	@codegen.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"absyn.h
"

6 
	~"ãmp.h
"

7 
	~"îr‹msg.h
"

8 
	~"åì.h
"

9 
	~"as£m.h
"

10 
	~"‰ame.h
"

11 
	~"codegí.h
"

12 
	~"èbÀ.h
"

15 
	#MAXINLINE
 40

	)

17 
Temp_ãmp
 
munchExp
(
T_exp
 
e
);

19 
munchStm
(
T_°m
 
s
);

21 
Temp_ãmpLi°
 
munchArgs
(
ödex
, 
T_expLi°
 
li°
);

23 
Temp_ãmpLi°
 
	$L
(
Temp_ãmp
 
h
, 
Temp_ãmpLi°
 
t
) {

24  
	`Temp_TempLi°
(
h
,
t
);

25 
	}
}

27 
AS_ö°rLi°
 
	giLi°
 = 
NULL
;

28 
AS_ö°rLi°
 
	gœ°
 = 
NULL
;

30 
	$emô
(
AS_ö°r
 
ö°
){

31 if(
œ°
 !
NULL
)

32 
œ°
 =Üa°->
èû
 = 
	`AS_In°rLi°
(
ö°
, 
NULL
);

34 
œ°
 = 
iLi°
 = 
	`AS_In°rLi°
(
ö°
, 
NULL
);

35 
	}
}

37 
AS_ö°rLi°
 
	$F_codegí
(
F_‰ame
 
f
, 
T_°mLi°
 
°mLi°
) {

38 
AS_ö°rLi°
 
li°
;

39 
T_°mLi°
 
¶
;

41 
¶
 = 
°mLi°
; sl; s»¶->
èû
)

42 
	`munchStm
(
¶
->
hód
);

44 
li°
=
iLi°
;

46 
iLi°
 = 
œ°
 = 
NULL
;

47  
li°
;

48 
	}
}

51 
Temp_ãmp
 
	$munchExp
(
T_exp
 
e
){

53 if(
e
->
köd
 =
T_BINOP
){

54 
Temp_ãmp
 
À·
 = 
	`munchExp
(
e
->
u
.
BINOP
.left);

55 
Temp_ãmp
 
right
 = 
	`munchExp
(
e
->
u
.
BINOP
.right);

56 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

58 
e
->
u
.
BINOP
.
›
){

59 
T_∂us
:{

61 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
À·
, NULL)));

62 
	`emô
(
	`AS_O≥r
("add»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
right
, NULL), NULL));

63  
r
;

65 
T_möus
:{

66 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
À·
, NULL)));

67 
	`emô
(
	`AS_O≥r
("sub»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
right
, NULL), NULL));

68  
r
;

70 
T_mul
:{

71 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
À·
, NULL)));

73 
	`emô
(
	`AS_O≥r
("imu»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
right
, NULL), NULL));

74  
r
;

76 
T_div
:{

77 
Temp_ãmp
 
edx
 = 
	`Temp_√wãmp
();

78 
Temp_ãmp
 
óx
 = 
	`Temp_√wãmp
();

79 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
óx
, 
NULL
), L(
À·
, NULL)));

81 
	`emô
(
	`AS_O≥r
("˛td\n", 
NULL
, NULL, NULL));

83 
	`emô
(
	`AS_O≥r
("idiv»`s0\n", 
NULL
, 
	`L
(
right
, NULL), NULL));

84 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
óx
, NULL)));

86  
r
;

89 
	`as£π
(0);

94 if(
e
->
köd
 =
T_MEM
){

95 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

96 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

98 
T_exp
 
mem
 = 
e
->
u
.
MEM
;

100 if(
mem
->
köd
 =
T_BINOP


101 && 
mem
->
u
.
BINOP
.
›
 =
T_∂us


102 && 
mem
->
u
.
BINOP
.
À·
->
köd
 =
T_CONST
){

103 
Temp_ãmp
 
mem_right
 = 
	`munchExp
(
mem
->
u
.
BINOP
.
right
);

105 
i
 = 
mem
->
u
.
BINOP
.
À·
->u.
CONST
;

106 
	`•rötf
(
ö°
, "mov»%d(`s0), `d0\n", 
i
);

108 
	`emô
(
	`AS_O≥r
(
ö°
, 
	`L
(
r
, 
NULL
), L(
mem_right
, NULL), NULL));

109  
r
;

113 if(
mem
->
köd
 =
T_BINOP


114 && 
mem
->
u
.
BINOP
.
›
 =
T_∂us


115 && 
mem
->
u
.
BINOP
.
right
->
köd
 =
T_CONST
){

116 
Temp_ãmp
 
mem_À·
 = 
	`munchExp
(
mem
->
u
.
BINOP
.
À·
);

118 
i
 = 
mem
->
u
.
BINOP
.
right
->u.
CONST
;

119 
	`•rötf
(
ö°
, "mov»%d(`s0), `d0\n", 
i
);

121 
	`emô
(
	`AS_O≥r
(
ö°
, 
	`L
(
r
, 
NULL
), L(
mem_À·
, NULL), NULL));

122  
r
;

126 if(
mem
->
köd
 =
T_CONST
){

128 
i
 = 
mem
->
u
.
CONST
;

129 
	`•rötf
(
ö°
, "mov»%d, `d0\n", 
i
);

131 
	`emô
(
	`AS_O≥r
(
ö°
, 
	`L
(
r
, 
NULL
), NULL, NULL));

132  
r
;

137 
Temp_ãmp
 
s
 = 
	`munchExp
(
mem
);

138 
	`emô
(
	`AS_O≥r
("mov»(`s0), `d0\n", 
	`L
(
r
, 
NULL
), L(
s
, NULL), NULL));

139  
r
;

144 if(
e
->
köd
 =
T_TEMP
){

145  
e
->
u
.
TEMP
;

149 if(
e
->
köd
 =
T_ESEQ
){

150 
	`munchStm
(
e
->
u
.
ESEQ
.
°m
);

151 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

152 
r
 = 
	`munchExp
(
e
->
u
.
ESEQ
.
exp
);

153  
r
;

157 if(
e
->
köd
 =
T_NAME
){

158 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

159 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

161 
	`•rötf
(
ö°
, "mov»$%s, `d0\n", 
	`Temp_œbñ°rög
(
e
->
u
.
NAME
));

162 
	`emô
(
	`AS_O≥r
(
ö°
, 
	`L
(
r
, 
NULL
), NULL, NULL));

163  
r
;

167 if(
e
->
köd
 =
T_CONST
){

168 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

169 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

170 
	`•rötf
(
ö°
, "mov»%d, `d0\n", 
e
->
u
.
CONST
);

171 
	`emô
(
	`AS_O≥r
(
ö°
, 
	`L
(
r
, 
NULL
), NULL, NULL));

172  
r
;

176 if(
e
->
köd
 =
T_CALL
){

177 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

178 
Temp_ãmp
 
rv
 = 
	`F_RV
();

183 if(
e
->
u
.
CALL
.
fun
->
köd
 =
T_NAME
){

184 
Temp_œbñ
 
fun
 = 
e
->
u
.
CALL
.fun->u.
NAME
;

185 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

186 
	`•rötf
(
ö°
, "ˇŒ %s\n", 
	`Temp_œbñ°rög
(
fun
));

188 
Temp_ãmpLi°
 
¨gs
 = 
	`munchArgs
(0, 
e
->
u
.
CALL
.args);

199 
Temp_ãmpLi°
 
ˇŒdefs
 = 
	`F_ˇŒîßves
();

200 
	`emô
(
	`AS_O≥r
(
ö°
, 
	`L
(
	`F_RV
(), 
ˇŒdefs
), 
NULL
, NULL));

201 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
rv
, NULL)));

212  
r
;

216 
Temp_ãmp
 
s
 = 
	`munchExp
(
e
->
u
.
CALL
.
fun
);

217 
Temp_ãmpLi°
 
¨gs
 = 
	`munchArgs
(0, 
e
->
u
.
CALL
.args);

218 
Temp_ãmpLi°
 
ˇŒdefs
 = 
	`F_ˇŒîßves
();

229 
	`emô
(
	`AS_O≥r
("ˇŒ *`s0\n", 
	`L
(
	`F_RV
(), 
ˇŒdefs
), L(
s
, 
NULL
), NULL));

230 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
r
, 
NULL
), L(
rv
, NULL)));

240  
r
;

245 
	`as£π
(0);

246 
	}
}

248 
	$munchStm
(
T_°m
 
s
){

250 if(
s
->
köd
 =
T_SEQ
){

251 
	`munchStm
(
s
->
u
.
SEQ
.
À·
);

252 
	`munchStm
(
s
->
u
.
SEQ
.
right
);

257 if(
s
->
köd
 =
T_LABEL
){

258 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

259 
	`•rötf
(
ö°
, "%s:\n", 
	`Temp_œbñ°rög
(
s
->
u
.
LABEL
));

260 
	`emô
(
	`AS_Labñ
(
ö°
, 
s
->
u
.
LABEL
));

265 if(
s
->
köd
 =
T_JUMP
){

266 
s
->
u
.
JUMP
.
exp
->
köd
){

267 
T_NAME
:{

268 
Temp_œbñ
 
œbñ
 = 
s
->
u
.
JUMP
.
exp
->u.
NAME
;

269 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

270 
	`•rötf
(
ö°
, "jm∞%s\n", 
	`Temp_œbñ°rög
(
œbñ
));

271 
	`emô
(
	`AS_O≥r
(
ö°
, 
NULL
, NULL, 
	`AS_T¨gës
(
s
->
u
.
JUMP
.
jumps
)));

275 
Temp_ãmp
 
t
 = 
	`munchExp
(
s
->
u
.
JUMP
.
exp
);

276 
	`emô
(
	`AS_O≥r
("jm∞*`s0\n", 
NULL
, NULL, 
	`AS_T¨gës
(
s
->
u
.
JUMP
.
jumps
)));

282 if(
s
->
köd
 =
T_CJUMP
){

283 
Temp_ãmp
 
À·
 = 
	`munchExp
(
s
->
u
.
CJUMP
.left);

284 
Temp_ãmp
 
right
 = 
	`munchExp
(
s
->
u
.
CJUMP
.right);

285 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

286 
	`emô
(
	`AS_O≥r
("cm∞`s0, `s1\n", 
NULL
, 
	`L
(
right
, L(
À·
, NULL)), NULL));

288 
s
->
u
.
CJUMP
.
›
){

290 
T_eq
:{

291 
	`•rötf
(
ö°
, "jê%s\n", 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
åue
));

293 
T_√
:{

294 
	`•rötf
(
ö°
, "j√ %s\n", 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
åue
));

296 
T_…
:{

297 
	`•rötf
(
ö°
, "j»%s\n", 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
åue
));

299 
T_À
:{

300 
	`•rötf
(
ö°
, "jÀ %s\n", 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
åue
));

302 
T_gt
:{

303 
	`•rötf
(
ö°
, "jg %s\n", 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
åue
));

305 
T_ge
:{

306 
	`•rötf
(
ö°
, "jgê%s\n", 
	`Temp_œbñ°rög
(
s
->
u
.
CJUMP
.
åue
));

309 
	`as£π
(0);

311 
	`emô
(
	`AS_O≥r
(
ö°
, 
NULL
, NULL, 
	`AS_T¨gës
(
	`Temp_LabñLi°
(
s
->
u
.
CJUMP
.
åue
, NULL))));

316 if(
s
->
köd
 =
T_MOVE
){

317 *
ö°
 = 
	`checked_mÆloc
((Ë* 
MAXINLINE
);

320 if(
s
->
u
.
MOVE
.
§c
->
köd
 =
T_MEM


321 && 
s
->
u
.
MOVE
.
§c
->u.
MEM
->
köd
 =
T_BINOP


322 && 
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
›
 =
T_∂us


323 && 
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
right
->
köd
 =
T_CONST
){

324 
Temp_ãmp
 
d°
 = 
	`munchExp
(
s
->
u
.
MOVE
.dst);

325 
Temp_ãmp
 
À·_s
 = 
	`munchExp
(
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
À·
);

326 
i
 = 
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
right
->u.
CONST
;

327 
	`•rötf
(
ö°
, "mov»%d(`s0), `d0\n", 
i
);

328 
	`emô
(
	`AS_Move
(
ö°
, 
	`L
(
d°
, 
NULL
), L(
À·_s
, NULL)));

331 if(
s
->
u
.
MOVE
.
§c
->
köd
 =
T_MEM


332 && 
s
->
u
.
MOVE
.
§c
->u.
MEM
->
köd
 =
T_BINOP


333 && 
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
›
 =
T_∂us


334 && 
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
À·
->
köd
 =
T_CONST
){

335 
Temp_ãmp
 
d°
 = 
	`munchExp
(
s
->
u
.
MOVE
.dst);

336 
Temp_ãmp
 
right_s
 = 
	`munchExp
(
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
right
);

337 
i
 = 
s
->
u
.
MOVE
.
§c
->u.
MEM
->u.
BINOP
.
À·
->u.
CONST
;

338 
	`•rötf
(
ö°
, "mov»%d(`s0), `d0\n", 
i
);

339 
	`emô
(
	`AS_Move
(
ö°
, 
	`L
(
d°
, 
NULL
), L(
right_s
, NULL)));

344 if(
s
->
u
.
MOVE
.
d°
->
köd
 =
T_MEM
){

345 if(
s
->
u
.
MOVE
.
d°
->u.
MEM
->
köd
 =
T_BINOP


346 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
›
 =
T_∂us


347 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
right
->
köd
 =
T_CONST
){

348 
Temp_ãmp
 
§c
 = 
	`munchExp
(
s
->
u
.
MOVE
.src);

349 
Temp_ãmp
 
À·_d
 = 
	`munchExp
(
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
À·
);

350 
i
 = 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
right
->u.
CONST
;

351 
	`•rötf
(
ö°
, "mov»`s0, %d(`s1)\n", 
i
);

352 
	`emô
(
	`AS_Move
(
ö°
, 
NULL
, 
	`L
(
§c
, L(
À·_d
, NULL))));

355 if(
s
->
u
.
MOVE
.
d°
->u.
MEM
->
köd
 =
T_BINOP


356 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
›
 =
T_∂us


357 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
À·
->
köd
 =
T_CONST
){

358 
Temp_ãmp
 
§c
 = 
	`munchExp
(
s
->
u
.
MOVE
.src);

359 
Temp_ãmp
 
right_d
 = 
	`munchExp
(
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
right
);

360 
i
 = 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
À·
->u.
CONST
;

361 
	`•rötf
(
ö°
, "mov»`s0, %d(`s1)\n", 
i
);

362 
	`emô
(
	`AS_Move
(
ö°
, 
NULL
, 
	`L
(
§c
, L(
right_d
, NULL))));

368 if(
s
->
u
.
MOVE
.
§c
->
köd
 =
T_CONST
){

369 
§c_i
 = 
s
->
u
.
MOVE
.
§c
->u.
CONST
;

370 if(
s
->
u
.
MOVE
.
d°
->
köd
 =
T_MEM


371 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->
köd
 =
T_BINOP


372 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
›
 =
T_∂us


373 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
À·
->
köd
 =
T_CONST
){

374 
Temp_ãmp
 
§c
 = 
	`munchExp
(
s
->
u
.
MOVE
.src);

375 
Temp_ãmp
 
right_d
 = 
	`munchExp
(
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
right
);

376 
i
 = 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
À·
->u.
CONST
;

377 
	`•rötf
(
ö°
, "mov»$%d, %d(`s0)\n", 
§c_i
, 
i
);

378 
	`emô
(
	`AS_Move
(
ö°
, 
NULL
, 
	`L
(
right_d
, NULL)));

381 if(
s
->
u
.
MOVE
.
d°
->
köd
 =
T_CONST


382 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->
köd
 =
T_BINOP


383 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
›
 =
T_∂us


384 && 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
right
->
köd
 =
T_CONST
){

385 
Temp_ãmp
 
§c
 = 
	`munchExp
(
s
->
u
.
MOVE
.src);

386 
Temp_ãmp
 
À·_d
 = 
	`munchExp
(
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
À·
);

387 
i
 = 
s
->
u
.
MOVE
.
d°
->u.
MEM
->u.
BINOP
.
right
->u.
CONST
;

388 
	`•rötf
(
ö°
, "mov»$%d, %d(`s0)\n", 
§c_i
, 
i
);

389 
	`emô
(
	`AS_Move
(
ö°
, 
NULL
, 
	`L
(
À·_d
, NULL)));

393 
Temp_ãmp
 
d°
 = 
	`munchExp
(
s
->
u
.
MOVE
.dst);

394 
	`•rötf
(
ö°
, "mov»$%d, `d0\n", 
§c_i
);

395 
	`emô
(
	`AS_Move
(
ö°
, 
	`L
(
d°
, 
NULL
), NULL));

403 
Temp_ãmp
 
§c
 = 
	`munchExp
(
s
->
u
.
MOVE
.src);

404 
Temp_ãmp
 
d°
 = 
	`munchExp
(
s
->
u
.
MOVE
.dst);

405 
	`emô
(
	`AS_Move
("mov»`s0, `d0\n", 
	`L
(
d°
, 
NULL
), L(
§c
, NULL)));

412 if(
s
->
köd
 =
T_EXP
){

413 
	`munchExp
(
s
->
u
.
EXP
);

417 
	}
}

420 
Temp_ãmpLi°
 
	$munchArgs
(
ödex
, 
T_expLi°
 
¨gs
){

421 if(
¨gs
 =
NULL
){

422  
NULL
;

425 
Temp_ãmpLi°
 
èû_li°
 = 
	`munchArgs
(
ödex
 + 1, 
¨gs
->
èû
);

427 
Temp_ãmp
 
hód
 = 
	`munchExp
(
¨gs
->head);

429 
Temp_ãmp
 
•
 = 
	`F_SP
();

432 
	`emô
(
	`AS_O≥r
("push»`s0\n", 
NULL
, 
	`L
(
hód
, NULL), NULL));

433  
	`Temp_TempLi°
(
hód
, 
èû_li°
);

434 
	}
}

	@codegen.h

1 #i‚de‡
CODEGEN_H


2 
	#CODEGEN_H


	)

4 
AS_ö°rLi°
 
F_codegí
(
F_‰ame
 
f
, 
T_°mLi°
 
°mLi°
);

	@color.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

4 
	~"utû.h
"

5 
	~"symbﬁ.h
"

6 
	~"ãmp.h
"

7 
	~"åì.h
"

8 
	~"absyn.h
"

9 
	~"as£m.h
"

10 
	~"‰ame.h
"

11 
	~"gøph.h
"

12 
	~"livíess.h
"

13 
	~"cﬁ‹.h
"

14 
	~"èbÀ.h
"

16 
COL_ªsu…
 
	$COL_cﬁ‹
(
G_gøph
 
ig
, 
Temp_m≠
 
öôül
, 
Temp_ãmpLi°
 
ªgs
, 
Live_moveLi°
 
moves
) {

18 
COL_ªsu…
 
ªt
;

19  
ªt
;

20 
	}
}

	@color.h

6 #i‚de‡
COLOR_H


7 
	#COLOR_H


	)

9 
	sCOL_ªsu…
 {
Temp_m≠
 
	mcﬁ‹ög
; 
Temp_ãmpLi°
 
	m•ûls
;};

10 
COL_ªsu…
 
COL_cﬁ‹
(
G_gøph
 
ig
, 
Temp_m≠
 
öôül
, 
Temp_ãmpLi°
 
ªgs
, 
Live_moveLi°
 
moves
);

	@env.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ív.h
"

8 
E_ívíåy
 
	$E_V¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
)

10 
E_ívíåy
 
íåy
 = 
	`checked_mÆloc
((*entry));

13 
íåy
->
köd
 = 
E_v¨E¡ry
;

15 
íåy
->
u
.
v¨
.
ac˚ss
 =áccess;

16 
íåy
->
u
.
v¨
.
ty
 =Åy;

17  
íåy
;

18 
	}
}

20 
E_ívíåy
 
	$E_ROV¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
)

22 
E_ívíåy
 
íåy
 = 
	`checked_mÆloc
((*entry));

25 
íåy
->
köd
 = 
E_v¨E¡ry
;

27 
íåy
->
u
.
v¨
.
ac˚ss
 =áccess;

28 
íåy
->
u
.
v¨
.
ty
 =Åy;

29 
íåy
->
ªad⁄ly
 = 1;

30  
íåy
;

31 
	}
}

33 
E_ívíåy
 
	$E_FunE¡ry
(
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
, 
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
)

35 
E_ívíåy
 
íåy
 = 
	`checked_mÆloc
((*entry));

38 
íåy
->
köd
 = 
E_funE¡ry
;

40 
íåy
->
u
.
fun
.
Àvñ
 =Üevel;

41 
íåy
->
u
.
fun
.
œbñ
 =Üabel;

42 
íåy
->
u
.
fun
.
f‹mÆs
 = formals;

43 
íåy
->
u
.
fun
.
ªsu…
 =Ñesult;

44  
íåy
;

45 
	}
}

49 
S_èbÀ
 
	$E_ba£_ãnv
()

51 
S_èbÀ
 
èbÀ
;

52 
S_symbﬁ
 
ty_öt
;

53 
S_symbﬁ
 
ty_°rög
;

55 
èbÀ
 = 
	`S_em±y
();

58 
ty_öt
 = 
	`S_Symbﬁ
("int");

59 
	`S_íãr
(
èbÀ
, 
ty_öt
, 
	`Ty_I¡
());

62 
ty_°rög
 = 
	`S_Symbﬁ
("string");

63 
	`S_íãr
(
èbÀ
, 
ty_°rög
, 
	`Ty_Såög
());

65  
èbÀ
;

66 
	}
}

68 
S_èbÀ
 
	$E_ba£_vív
()

70 
S_èbÀ
 
ªs
 = 
	`S_em±y
();

71 
Tr_Àvñ
 
Àvñ
 = 
	`Tr_ouãrmo°
();

73 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("¥öt"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("¥öt"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_Void
()));

74 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("¥öti"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("¥öti"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Void
()));

75 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("Êush"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("Êush"), 
NULL
, 
	`Ty_Void
()));

76 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("gëch¨"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("gëch¨"), 
NULL
, 
	`Ty_Såög
()));

77 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("‹d"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("‹d"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_I¡
()));

78 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("chr"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("chr"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Såög
()));

79 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("size"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("size"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_I¡
()));

80 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("sub°rög"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("sub°rög"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), Ty_TyLi°(
	`Ty_I¡
(), Ty_TyLi°(Ty_I¡(), 
NULL
))), Ty_String()));

81 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("c⁄ˇt"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("c⁄ˇt"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), Ty_TyLi°(Ty_Såög(), 
NULL
)), Ty_String()));

82 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("nŸ"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("nŸ"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), Ty_Int()));

83 
	`S_íãr
(
ªs
, 
	`S_Symbﬁ
("exô"), 
	`E_FunE¡ry
(
Àvñ
, 
	`Temp_«medœbñ
("exô"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Void
()));

85  
ªs
;

86 
	}
}

	@env.h

3 #i‚de‡
ENV_H_


4 
	#ENV_H_


	)

6 
	~"ty≥s.h
"

7 
	~"å™¶©e.h
"

8 
	~"ãmp.h
"

10 
E_ívíåy_
 *
	tE_ívíåy
;

12 
	sE_ívíåy_
 {

13 íum {
	mE_v¨E¡ry
, 
	mE_funE¡ry
} 
	mköd
;

14 
	mªad⁄ly
;

17 °ru˘ {
Tr_ac˚ss
 
	mac˚ss
; 
Ty_ty
 
	mty
;} 
	mv¨
;

18 °ru˘ {
Tr_Àvñ
 
	mÀvñ
; 
Temp_œbñ
 
	mœbñ
; 
Ty_tyLi°
 
	mf‹mÆs
; 
Ty_ty
 
	mªsu…
;} 
	mfun
;

19 } 
	mu
;

22 
E_ívíåy
 
E_V¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
);

23 
E_ívíåy
 
E_ROV¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
);

24 
E_ívíåy
 
E_FunE¡ry
(
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
, 
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
);

26 
S_èbÀ
 
E_ba£_ãnv
();

27 
S_èbÀ
 
E_ba£_vív
();

	@errormsg.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°d¨g.h
>

10 
	~"utû.h
"

11 
	~"îr‹msg.h
"

14 
boﬁ
 
	g™yEº‹s

FALSE
;

16 
°rög
 
	gfûeName
 = "";

18 
	glöeNum
 = 1;

20 
	gEM_tokPos
=0;

22 
FILE
 *
yyö
;

24 
	sötLi°
 {
	mi
; 
ötLi°
 *
	mª°
;} *
	tI¡Li°
;

26 
I¡Li°
 
	$ötLi°
(
i
, 
I¡Li°
 
ª°
)

27 {
I¡Li°
 
l

	`checked_mÆloc
( *l);

28 
l
->
i
=i;Ü->
ª°
=rest;

29  
l
;

30 
	}
}

32 
I¡Li°
 
	glöePos
=
NULL
;

34 
	$EM_√wlöe
()

35 {
löeNum
++;

36 
löePos
 = 
	`ötLi°
(
EM_tokPos
,ÜinePos);

37 
	}
}

39 
	$EM_îr‹
(
pos
, *
mesßge
,...)

41 
va_li°
 
≠
;

42 
I¡Li°
 
löes
 = 
löePos
;

43 
num
=
löeNum
;

45 
™yEº‹s
=
TRUE
;

46 
löes
 &&Üöes->
i
 >
pos
)

47 {
löes
ˆöes->
ª°
; 
num
--;}

49 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
,"%s:",fileName);

50 i‡(
löes
Ë
	`Ârötf
(
°dîr
,"%d.%d: ", 
num
, 
pos
-löes->
i
);

51 
	`va_°¨t
(
≠
,
mesßge
);

52 
	`vÂrötf
(
°dîr
, 
mesßge
, 
≠
);

53 
	`va_íd
(
≠
);

54 
	`Ârötf
(
°dîr
,"\n");

55 
	}
}

57 
	$EM_ª£t
(
°rög
 
‚ame
)

59 
™yEº‹s
=
FALSE
; 
fûeName
=
‚ame
; 
löeNum
=1;

60 
löePos
=
	`ötLi°
(0,
NULL
);

61 
yyö
 = 
	`f›í
(
‚ame
,"r");

62 i‡(!
yyö
Ë{
	`EM_îr‹
(0,"ˇ¬Ÿ o≥n"); 
	`exô
(1);}

63 
	}
}

	@errormsg.h

1 #i‚de‡
ERROR_MSG_H


2 
	#ERROR_MSG_H


	)

3 
boﬁ
 
EM_™yEº‹s
;

5 
EM_√wlöe
();

7 
EM_tokPos
;

9 
EM_îr‹
(, 
°rög
,...);

10 
EM_impossibÀ
(
°rög
,...);

11 
EM_ª£t
(
°rög
 
fûíame
);

	@escape.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"absyn.h
"

6 
	~"esˇ≥.h
"

7 
	~"èbÀ.h
"

9 
	$Esc_födEsˇ≥
(
A_exp
 
exp
) {

11 
	}
}

	@escape.h

1 #i‚de‡
ESCAPE_H


2 
	#ESCAPE_H


	)

4 
Esc_födEsˇ≥
(
A_exp
 
exp
);

	@flowgraph.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

5 
	~"utû.h
"

6 
	~"symbﬁ.h
"

7 
	~"ãmp.h
"

8 
	~"åì.h
"

9 
	~"absyn.h
"

10 
	~"as£m.h
"

11 
	~"‰ame.h
"

12 
	~"gøph.h
"

13 
	~"Êowgøph.h
"

14 
	~"îr‹msg.h
"

15 
	~"èbÀ.h
"

17 
Temp_ãmpLi°
 
	$FG_def
(
G_node
 
n
) {

19 
AS_ö°r
 
ö°r
 = 
	`G_nodeInfo
(
n
);

20 
ö°r
->
köd
){

21 
I_OPER
:

22  
ö°r
->
u
.
OPER
.
d°
;

23 
I_LABEL
:

24  
NULL
;

25 
I_MOVE
:

26  
ö°r
->
u
.
MOVE
.
d°
;

28 
	`as£π
(0);

30  
NULL
;

31 
	}
}

33 
Temp_ãmpLi°
 
	$FG_u£
(
G_node
 
n
) {

35 
AS_ö°r
 
ö°r
 = 
	`G_nodeInfo
(
n
);

36 
ö°r
->
köd
){

37 
I_OPER
:

38  
ö°r
->
u
.
OPER
.
§c
;

39 
I_LABEL
:

40  
NULL
;

41 
I_MOVE
:

42  
ö°r
->
u
.
MOVE
.
§c
;

44 
	`as£π
(0);

46  
NULL
;

47 
	}
}

49 
boﬁ
 
	$FG_isMove
(
G_node
 
n
) {

51 
AS_ö°r
 
ö°r
 = 
	`G_nodeInfo
(
n
);

52  (
ö°r
->
köd
 =
I_MOVE
);

53 
	}
}

56 
G_gøph
 
	$FG_As£mFlowGøph
(
AS_ö°rLi°
 
û
, 
F_‰ame
 
f
) {

58 
G_gøph
 
ªsu…
 = 
	`G_Gøph
();

59 
TAB_èbÀ
 
œbñ2node
 = 
	`TAB_em±y
();

60 
TAB_èbÀ
 
ö°r2node
 = 
	`TAB_em±y
();

62 
G_node
 
œ°_node
 = 
NULL
;

63 
AS_ö°rLi°
 
ö°rs
 = 
û
; in°rs; in°r†ö°rs->
èû
){

64 
AS_ö°r
 
ö°r
 = 
ö°rs
->
hód
;

65 
G_node
 
ö°r_node
 = 
	`G_Node
(
ªsu…
, 
ö°r
);

66 
	`TAB_íãr
(
ö°r2node
, 
ö°r
, 
ö°r_node
);

67 if(
œ°_node
 !
NULL
)

68 
	`G_addEdge
(
œ°_node
, 
ö°r_node
);

69 
œ°_node
 = 
ö°r_node
;

70 if(
ö°r
->
köd
 =
I_LABEL
)

71 
	`TAB_íãr
(
œbñ2node
, 
ö°r
->
u
.
LABEL
.
œbñ
, 
ö°r_node
);

75 
AS_ö°rLi°
 
ö°rs
 = 
û
; in°rs; in°r†ö°rs->
èû
){

76 
AS_ö°r
 
ö°r
 = 
ö°rs
->
hód
;

77 if(
ö°r
->
köd
 =
I_OPER
){

78 
G_node
 
ö°r_node
 = 
	`TAB_look
(
ö°r2node
, 
ö°r
);

79 if(
ö°r
->
u
.
OPER
.
jumps
 !
NULL
){

80 
Temp_œbñLi°
 
œbñ_li°
 = 
ö°r
->
u
.
OPER
.
jumps
->
œbñs
;

81 ; 
œbñ_li°
 !
NULL
;Üabñ_li° =Üabñ_li°->
èû
){

82 
	`G_addEdge
(
ö°r_node
, 
	`TAB_look
(
œbñ2node
, 
œbñ_li°
->
hód
));

88  
ªsu…
;

89 
	}
}

	@flowgraph.h

5 #i‚de‡
FLOWGRAPH_H


6 
	#FLOWGRAPH_H


	)

8 
Temp_ãmpLi°
 
FG_def
(
G_node
 
n
);

9 
Temp_ãmpLi°
 
FG_u£
(
G_node
 
n
);

10 
boﬁ
 
FG_isMove
(
G_node
 
n
);

11 
G_gøph
 
FG_As£mFlowGøph
(
AS_ö°rLi°
 
û
, 
F_‰ame
 
f
);

	@frame.h

4 #i‚de‡
FRAME_H


5 
	#FRAME_H


	)

7 
	~"åì.h
"

8 
	~"ãmp.h
"

9 
	~"utû.h
"

10 
	~"as£m.h
"

14 
F_ac˚ss_
 *
	tF_ac˚ss
;

15 
	sF_ac˚ss_
 {

16 íum {
	möFøme
, 
	möReg
} 
	mköd
;

18 
	moff£t
;

19 
Temp_ãmp
 
	mªg
;

20 } 
	mu
;

22 
F_ac˚ssLi°_
 *
	tF_ac˚ssLi°
;

24 
	sF_ac˚ssLi°_
 {
F_ac˚ss
 
	mhód
; 
F_ac˚ssLi°
 
	mèû
;};

26 
F_‰ame_
 *
	tF_‰ame
;

27 
	sF_‰ame_
{

28 
Temp_œbñ
 
	m«me
;

29 
F_ac˚ssLi°
 
	mf‹mÆs
;

30 
	möFøme_˙t
;

35 
F_‰ag_
 *
	tF_‰ag
;

36 
	sF_‰ag_
 {íum {
	mF_°rögFøg
, 
	mF_¥ocFøg
} 
	mköd
;

38 °ru˘ {
Temp_œbñ
 
	mœbñ
; 
°rög
 
	m°r
;} 
	m°rögg
;

39 °ru˘ {
T_°m
 
	mbody
; 
F_‰ame
 
	m‰ame
;} 
	m¥oc
;

40 } 
	mu
;

43 
F_‰ag
 
F_SåögFøg
(
Temp_œbñ
 
œbñ
, 
°rög
 
°r
);

44 
F_‰ag
 
F_ProcFøg
(
T_°m
 
body
, 
F_‰ame
 
‰ame
);

46 
F_‰agLi°_
 *
	tF_‰agLi°
;

47 
	sF_‰agLi°_


49 
F_‰ag
 
	mhód
;

50 
F_‰agLi°
 
	mèû
;

53 
F_‰agLi°
 
F_FøgLi°
(
F_‰ag
 
hód
, F_‰agLi° 
èû
);

58 
Temp_m≠
 
	gF_ãmpM≠
;

60 c⁄° 
F_w‹dSize
;

61 
Temp_ãmp
 
F_FP
();

62 
Temp_ãmp
 
F_SP
();

63 
Temp_ãmp
 
F_RV
();

64 
Temp_ãmp
 
F_óx
();

65 
Temp_ãmp
 
F_ebx
();

66 
Temp_ãmp
 
F_ecx
();

67 
Temp_ãmp
 
F_edx
();

68 
Temp_ãmp
 
F_esi
();

69 
Temp_ãmp
 
F_edi
();

71 
F_size
(
F_‰ame
 
f
);

75 
F_ac˚ssLi°
 
F_Ac˚ssLi°
(
F_ac˚ss
 
hód
, F_ac˚ssLi° 
èû
);

78 
F_‰ame
 
F_√wFøme
(
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
);

81 
Temp_œbñ
 
F_«me
(
F_‰ame
 
f
);

84 
F_ac˚ssLi°
 
F_f‹mÆs
(
F_‰ame
 
f
);

87 
F_ac˚ss
 
F_ÆlocLoˇl
(
F_‰ame
 
f
, 
boﬁ
 
esˇ≥
);

90 
T_exp
 
F_Exp
(
F_ac˚ss
 
ac˚ss
, T_ex∞
Â
);

93 
T_exp
 
F_exã∫ÆCÆl
(
°rög
 
s
, 
T_expLi°
 
¨gs
);

96 
F_Spûl
(
F_‰ame
 
f
);

99 
AS_¥oc
 
F_¥ocE¡ryExô3
(
F_‰ame
 
f
, 
AS_ö°rLi°
 
body
);

102 
T_°m
 
F_¥ocE¡ryExô1
(
F_‰ame
 
f
, T_°m 
body
);

105 
Temp_ãmpLi°
 
F_ˇŒîßves
();

108 
Temp_ãmpLi°
 
F_backup_ˇŒîßves
();

111 
AS_ö°rLi°
 
F_¥ocE¡ryExô2
(AS_ö°rLi° 
body
);

	@graph.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"ãmp.h
"

10 
	~"åì.h
"

11 
	~"absyn.h
"

12 
	~"as£m.h
"

13 
	~"‰ame.h
"

14 
	~"gøph.h
"

15 
	~"îr‹msg.h
"

16 
	~"èbÀ.h
"

18 
	sG_gøph_
 {
	mnodecou¡
;

19 
G_nodeLi°
 
	mmynodes
, 
	mmyœ°
;

22 
	sG_node_
 {

23 
G_gøph
 
	mmygøph
;

24 
	mmykey
;

25 
G_nodeLi°
 
	msuccs
;

26 
G_nodeLi°
 
	m¥eds
;

27 *
	möfo
;

30 
G_gøph
 
	$G_Gøph
()

31 {
G_gøph
 
g
 = (G_gøphË
	`checked_mÆloc
( *g);

32 
g
->
nodecou¡
 = 0;

33 
g
->
mynodes
 = 
NULL
;

34 
g
->
myœ°
 = 
NULL
;

35  
g
;

36 
	}
}

38 
	$G_gøph_nodecou¡
(
G_gøph
 
g
){

39  
g
->
nodecou¡
;

40 
	}
}

43 
G_nodeLi°
 
	$G_NodeLi°
(
G_node
 
hód
, 
G_nodeLi°
 
èû
)

44 {
G_nodeLi°
 
n
 = (G_nodeLi°Ë
	`checked_mÆloc
( *n);

45 
n
->
hód
=head;

46 
n
->
èû
=tail;

47  
n
;

48 
	}
}

50 
G_nodeLi°
 
	$G_Uni⁄_nodeLi°
(
G_nodeLi°
 
l
, G_nodeLi° 
r
){

51 
G_nodeLi°
 
ªsu…
 = 
l
;

52 
r
){

53 if(!
	`G_In_nodeLi°
(
r
->
hód
, 
l
))

54 
ªsu…
 = 
	`G_NodeLi°
(
r
->
hód
,Ñesult);

55 
r
 =Ñ->
èû
;

57  
ªsu…
;

58 
	}
}

60 
G_nodeLi°
 
	$G_Sub_nodeLi°
(
G_nodeLi°
 
l
 , G_nodeLi° 
r
){

61 
G_nodeLi°
 
ªsu…
 = 
NULL
;

62 
l
){

63 if(!
	`G_In_nodeLi°
(
l
->
hód
, 
r
))

64 
ªsu…
 = 
	`G_NodeLi°
(
l
->
hód
,Ñesult);

65 
l
 =Ü->
èû
;

67  
ªsu…
;

68 
	}
}

70 
G_nodeLi°
 
	$G_I¡î£˘_nodeLi°
(
G_nodeLi°
 
l
, G_nodeLi° 
r
){

71 
G_nodeLi°
 
ªsu…
 = 
NULL
;

72 
l
){

73 if(
	`G_In_nodeLi°
(
l
->
hód
, 
r
))

74 
ªsu…
 = 
	`G_NodeLi°
(
l
->
hód
,Ñesult);

75 
l
 =Ü->
èû
;

77  
ªsu…
;

78 
	}
}

79 
boﬁ
 
	$G_In_nodeLi°
(
G_node
 
node
, 
G_nodeLi°
 
li°
){

80 
li°
){

81 if(
node
 =
li°
->
hód
)

82  
TRUE
;

83 
li°
 =Üi°->
èû
;

85  
FALSE
;

86 
	}
}

89 
G_node
 
	$G_Node
(
G_gøph
 
g
, *
öfo
)

90 {
G_node
 
n
 = (G_node)
	`checked_mÆloc
( *n);

91 
G_nodeLi°
 
p
 = 
	`G_NodeLi°
(
n
, 
NULL
);

92 
	`as£π
(
g
);

93 
n
->
mygøph
=
g
;

94 
n
->
mykey
=
g
->
nodecou¡
++;

96 i‡(
g
->
myœ°
==
NULL
)

97 
g
->
mynodes
=g->
myœ°
=
p
;

98 
g
->
myœ°
 = g->myœ°->
èû
 = 
p
;

100 
n
->
succs
=
NULL
;

101 
n
->
¥eds
=
NULL
;

102 
n
->
öfo
=info;

103  
n
;

104 
	}
}

106 
	$G_node_key
(
G_node
 
n
){

107  
n
->
mykey
;

108 
	}
}

110 
G_nodeLi°
 
	$G_nodes
(
G_gøph
 
g
)

112 
	`as£π
(
g
);

113  
g
->
mynodes
;

114 
	}
}

117 
boﬁ
 
	$G_öNodeLi°
(
G_node
 
a
, 
G_nodeLi°
 
l
) {

118 
G_nodeLi°
 
p
;

119 
p
=
l
;Ö!=
NULL
;Öı->
èû
)

120 i‡(
p
->
hód
==
a
Ë 
TRUE
;

121  
FALSE
;

122 
	}
}

124 
	$G_addEdge
(
G_node
 
‰om
, G_nodê
to
) {

125 
	`as£π
(
‰om
);ás£π(
to
);

126 
	`as£π
(
‰om
->
mygøph
 =
to
->mygraph);

127 i‡(
	`G_g€sTo
(
‰om
, 
to
)) ;

128 
to
->
¥eds
=
	`G_NodeLi°
(
‰om
,Åo->preds);

129 
‰om
->
succs
=
	`G_NodeLi°
(
to
, from->succs);

130 
	}
}

132 
G_nodeLi°
 
	$dñëe
(
G_node
 
a
, 
G_nodeLi°
 
l
) {

133 
	`as£π
(
a
 && 
l
);

134 i‡(
a
==
l
->
hód
ËÜ->
èû
;

135  
	`G_NodeLi°
(
l
->
hód
, 
	`dñëe
(
a
,Ü->
èû
));

136 
	}
}

138 
	$G_rmEdge
(
G_node
 
‰om
, G_nodê
to
) {

139 
	`as£π
(
‰om
 && 
to
);

140 
to
->
¥eds
=
	`dñëe
(
‰om
,to->preds);

141 
‰om
->
succs
=
	`dñëe
(
to
,from->succs);

142 
	}
}

147 
G_show
(
FILE
 *
out
, 
G_nodeLi°
 
p
, 
	$showInfo
(*)) {

148 ; 
p
!=
NULL
;Öı->
èû
) {

149 
G_node
 
n
 = 
p
->
hód
;

150 
G_nodeLi°
 
q
;

151 
	`as£π
(
n
);

152 i‡(
showInfo
)

153 
	`showInfo
(
n
->
öfo
);

154 
	`Ârötf
(
out
, " (%d): ", 
n
->
mykey
);

155 
q
=
	`G_succ
(
n
); q!=
NULL
; q=q->
èû
)

156 
	`Ârötf
(
out
, "%d ", 
q
->
hód
->
mykey
);

157 
	`Ârötf
(
out
, "\n");

159 
	}
}

161 
G_nodeLi°
 
	$G_succ
(
G_node
 
n
Ë{ 
	`as£π
“); Ç->
succs
; 
	}
}

163 
G_nodeLi°
 
	$G_¥ed
(
G_node
 
n
Ë{ 
	`as£π
“); Ç->
¥eds
; 
	}
}

165 
boﬁ
 
	$G_g€sTo
(
G_node
 
‰om
, G_nodê
n
) {

166  
	`G_öNodeLi°
(
n
, 
	`G_succ
(
‰om
));

167 
	}
}

170 
	$öDegªe
(
G_node
 
n
)

171 { 
deg
 = 0;

172 
G_nodeLi°
 
p
;

173 
p
=
	`G_¥ed
(
n
);Ö!=
NULL
;Öı->
èû
Ë
deg
++;

174  
deg
;

175 
	}
}

178 
	$outDegªe
(
G_node
 
n
)

179 { 
deg
 = 0;

180 
G_nodeLi°
 
p
;

181 
p
=
	`G_succ
(
n
);Ö!=
NULL
;Öı->
èû
Ë
deg
++;

182  
deg
;

183 
	}
}

185 
	$G_degªe
(
G_node
 
n
Ë{ 
	`öDegªe
“)+
	`outDegªe
“);
	}
}

188 
G_nodeLi°
 
	$ˇt
(
G_nodeLi°
 
a
, G_nodeLi° 
b
) {

189 i‡(
a
==
NULL
Ë 
b
;

190  
	`G_NodeLi°
(
a
->
hód
, 
	`ˇt
◊->
èû
, 
b
));

191 
	}
}

195 
G_nodeLi°
 
	$G_adj
(
G_node
 
n
Ë{ 
	`ˇt
(
	`G_succ
“), 
	`G_¥ed
“));
	}
}

197 *
	$G_nodeInfo
(
G_node
 
n
Ë{Ç->
öfo
;
	}
}

203 
G_èbÀ
 
	$G_em±y
() {

204  
	`TAB_em±y
();

205 
	}
}

207 
	$G_íãr
(
G_èbÀ
 
t
, 
G_node
 
node
, *
vÆue
)

209 
	`TAB_íãr
(
t
, 
node
, 
vÆue
);

210 
	}
}

212 *
	$G_look
(
G_èbÀ
 
t
, 
G_node
 
node
)

214  
	`TAB_look
(
t
, 
node
);

215 
	}
}

	@graph.h

5 #i‚de‡
GRAPH_H


6 
	#GRAPH_H


	)

8 
G_gøph_
 *
	tG_gøph
;

9 
G_node_
 *
	tG_node
;

11 
G_nodeLi°_
 *
	tG_nodeLi°
;

12 
	sG_nodeLi°_
 { 
G_node
 
	mhód
; 
G_nodeLi°
 
	mèû
;};

15 
G_gøph_nodecou¡
(
G_gøph
 
g
);

18 
G_node_key
(
G_node
 
n
);

21 
G_nodeLi°
 
G_Uni⁄_nodeLi°
(G_nodeLi° 
l
, G_nodeLi° 
r
);

22 
G_nodeLi°
 
G_Sub_nodeLi°
(G_nodeLi° 
l
 , G_nodeLi° 
r
);

23 
G_nodeLi°
 
G_I¡î£˘_nodeLi°
(G_nodeLi° 
l
, G_nodeLi° 
r
);

24 
boﬁ
 
G_In_nodeLi°
(
G_node
 
node
, 
G_nodeLi°
 
li°
);

28 
G_gøph
 
G_Gøph
();

30 
G_node
 
G_Node
(
G_gøph
 
g
, *
öfo
);

33 
G_nodeLi°
 
G_NodeLi°
(
G_node
 
hód
, G_nodeLi° 
èû
);

36 
G_nodeLi°
 
G_nodes
(
G_gøph
 
g
);

39 
boﬁ
 
G_öNodeLi°
(
G_node
 
a
, 
G_nodeLi°
 
l
);

43 
G_addEdge
(
G_node
 
‰om
, G_nodê
to
);

46 
G_rmEdge
(
G_node
 
‰om
, G_nodê
to
);

50 
G_show
(
FILE
 *
out
, 
G_nodeLi°
 
p
, 
showInfo
(*));

53 
G_nodeLi°
 
G_succ
(
G_node
 
n
);

56 
G_nodeLi°
 
G_¥ed
(
G_node
 
n
);

59 
boﬁ
 
G_g€sTo
(
G_node
 
‰om
, G_nodê
n
);

62 
G_degªe
(
G_node
 
n
);

65 
G_nodeLi°
 
G_adj
(
G_node
 
n
);

68 *
G_nodeInfo
(
G_node
 
n
);

71 
TAB_èbÀ_
 *
	tG_èbÀ
;

74 
G_èbÀ
 
G_em±y
();

77 
G_íãr
(
G_èbÀ
 
t
, 
G_node
 
node
, *
vÆue
);

80 *
G_look
(
G_èbÀ
 
t
, 
G_node
 
node
);

	@helper.h

1 #i‚de‡
HELPER_H_


2 
	#HELPER_H_


	)

7 
	#gë_›exp_›î
(
a
Ë◊->
u
.
›
.
›î
)

	)

8 
	#gë_›exp_À·
(
a
Ë◊->
u
.
›
.
À·
)

	)

9 
	#gë_›exp_À·pos
(
a
Ë◊->
u
.
›
.
À·
->
pos
)

	)

10 
	#gë_›exp_right
(
a
Ë◊->
u
.
›
.
right
)

	)

11 
	#gë_›exp_righços
(
a
Ë◊->
u
.
›
.
right
->
pos
)

	)

14 
	#gë_Àãxp_decs
(
a
Ë◊->
u
.
Àt
.
decs
)

	)

15 
	#gë_Àãxp_body
(
a
Ë◊->
u
.
Àt
.
body
)

	)

18 
	#gë_ˇŒexp_func
(
a
Ë◊->
u
.
ˇŒ
.
func
)

	)

19 
	#gë_ˇŒexp_¨gs
(
a
Ë◊->
u
.
ˇŒ
.
¨gs
)

	)

22 
	#gë_ªc‹dexp_typ
(
a
Ë◊->
u
.
ªc‹d
.
typ
)

	)

23 
	#gë_ªc‹dexp_fõlds
(
a
Ë◊->
u
.
ªc‹d
.
fõlds
)

	)

26 
	#gë_£qexp_£q
(
a
Ë◊->
u
.
£q
)

	)

29 
	#gë_as£xp_v¨
(
a
Ë◊->
u
.
assign
.
v¨
)

	)

30 
	#gë_as£xp_exp
(
a
Ë◊->
u
.
assign
.
exp
)

	)

33 
	#gë_i„xp_ã°
(
a
Ë◊->
u
.
iff
.
ã°
)

	)

34 
	#gë_i„xp_thí
(
a
Ë◊->
u
.
iff
.
thí
)

	)

35 
	#gë_i„xp_ñ£
(
a
Ë◊->
u
.
iff
.
ñ£e
)

	)

38 
	#gë_whûìxp_ã°
(
a
Ë◊->
u
.
whûì
.
ã°
)

	)

39 
	#gë_whûìxp_body
(
a
Ë◊->
u
.
whûì
.
body
)

	)

42 
	#gë_f‹exp_v¨
(
a
Ë◊->
u
.
f‹r
.
v¨
)

	)

43 
	#gë_f‹exp_lo
(
a
Ë◊->
u
.
f‹r
.
lo
)

	)

44 
	#gë_f‹exp_hi
(
a
Ë◊->
u
.
f‹r
.
hi
)

	)

45 
	#gë_f‹exp_body
(
a
Ë◊->
u
.
f‹r
.
body
)

	)

48 
	#gë_¨øyexp_typ
(
a
Ë◊->
u
.
¨øy
.
typ
)

	)

49 
	#gë_¨øyexp_size
(
a
Ë◊->
u
.
¨øy
.
size
)

	)

50 
	#gë_¨øyexp_öô
(
a
Ë◊->
u
.
¨øy
.
öô
)

	)

53 
	#gë_v¨dec_öô
(
a
Ë◊->
u
.
v¨
.
öô
)

	)

54 
	#gë_v¨dec_v¨
(
a
Ë◊->
u
.
v¨
.v¨)

	)

55 
	#gë_v¨dec_typ
(
a
Ë◊->
u
.
v¨
.
typ
)

	)

57 
	#gë_ty≥dec_li°
(
a
Ë◊->
u
.
ty≥
)

	)

58 
	#gë_funcdec_li°
(
a
Ë◊->
u
.
fun˘i⁄
)

	)

61 
	#gë_ex±y_köd
(
a
Ë◊.
ty
->
köd
)

	)

62 
	#gë_¨øy_ty≥
(
a
Ë◊.
ty
->
u
.
¨øy
->
köd
)

	)

63 
	#gë_¨øy
(
a
Ë◊.
ty
->
u
.
¨øy
)

	)

64 
	#gë_ªc‹d_fõldli°
(
a
Ë◊.
ty
->
u
.
ªc‹d
)

	)

68 
	#gë_sim∂ev¨_sym
(
v
Ë(v->
u
.
sim∂e
)

	)

69 
	#gë_fõldv¨_v¨
(
v
Ë(v->
u
.
fõld
.
v¨
)

	)

70 
	#gë_fõldv¨_sym
(
v
Ë(v->
u
.
fõld
.
sym
)

	)

71 
	#gë_subv¨_v¨
(
v
Ë(v->
u
.
subs¸ùt
.
v¨
)

	)

72 
	#gë_subv¨_exp
(
v
Ë(v->
u
.
subs¸ùt
.
exp
)

	)

75 
	#gë_ty_«me
(
a
Ë◊->
u
.
«me
)

	)

76 
	#gë_ty_ªc‹d
(
a
Ë◊->
u
.
ªc‹d
)

	)

77 
	#gë_ty_¨øy
(
a
Ë◊->
u
.
¨øy
)

	)

80 
	#gë_¨øy_köd
(
a
Ë◊->
u
.
¨øy
->
köd
)

	)

83 
	#gë_v¨íåy_ty≥
(
x
Ë(x->
u
.
v¨
.
ty
)

	)

85 
	#gë_func_ªs
(
x
Ë(x->
u
.
fun
.
ªsu…
)

	)

86 
	#gë_func_tyli°
(
x
Ë(x->
u
.
fun
.
f‹mÆs
)

	)

89 
	#gë_v¨_ac˚ss
(
x
Ë(x->
u
.
v¨
.
ac˚ss
)

	)

90 
	#gë_func_œbñ
(
x
Ë(x->
u
.
fun
.
œbñ
)

	)

91 
	#gë_func_Àvñ
(
x
Ë(x->
u
.
fun
.
Àvñ
)

	)

	@lex.yy.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 6

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

90 #ifde‡
__˝lu•lus


93 
	#YY_USE_CONST


	)

98 #i‡
deföed
 (
__STDC__
)

100 
	#YY_USE_CONST


	)

105 #ifde‡
YY_USE_CONST


106 
	#yyc⁄°
 c⁄°

	)

108 
	#yyc⁄°


	)

112 
	#YY_NULL
 0

	)

119 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

125 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

131 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

132 
	#YYSTATE
 
YY_START


	)

135 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

138 
	#YY_NEW_FILE
 
	`yyª°¨t
(
yyö
 )

	)

140 
	#YY_END_OF_BUFFER_CHAR
 0

	)

143 #i‚de‡
YY_BUF_SIZE


144 #ifde‡
__ü64__


149 
	#YY_BUF_SIZE
 32768

	)

151 
	#YY_BUF_SIZE
 16384

	)

157 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

159 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


160 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

161 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

164 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


165 
	#YY_TYPEDEF_YY_SIZE_T


	)

166 
size_t
 
	tyy_size_t
;

169 
yy_size_t
 
yyÀng
;

171 
FILE
 *
yyö
, *
yyout
;

173 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

174 
	#EOB_ACT_END_OF_FILE
 1

	)

175 
	#EOB_ACT_LAST_MATCH
 2

	)

177 
	#YY_LESS_LINENO
(
n
)

	)

178 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

181 
	#yyÀss
(
n
) \

185 
yyÀss_ma¸o_¨g
 = (
n
); \

186 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

187 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

188 
YY_RESTORE_YY_MORE_OFFSET
 \

189 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

190 
YY_DO_BEFORE_ACTION
; \

192  0 )

	)

194 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

196 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


197 
	#YY_STRUCT_YY_BUFFER_STATE


	)

198 
	syy_buf„r_°©e


200 
FILE
 *
	myy_öput_fûe
;

202 *
	myy_ch_buf
;

203 *
	myy_buf_pos
;

208 
yy_size_t
 
	myy_buf_size
;

213 
	myy_n_ch¨s
;

219 
	myy_is_our_buf„r
;

226 
	myy_is_öãø˘ive
;

232 
	myy_©_bﬁ
;

234 
	myy_bs_löío
;

235 
	myy_bs_cﬁumn
;

240 
	myy_fûl_buf„r
;

242 
	myy_buf„r_°©us
;

244 
	#YY_BUFFER_NEW
 0

	)

245 
	#YY_BUFFER_NORMAL
 1

	)

256 
	#YY_BUFFER_EOF_PENDING
 2

	)

262 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

263 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

264 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

272 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

273 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

274 : 
NULL
)

	)

279 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

282 
	gyy_hﬁd_ch¨
;

283 
	gyy_n_ch¨s
;

284 
yy_size_t
 
	gyyÀng
;

287 *
	gyy_c_buf_p
 = (*) 0;

288 
	gyy_öô
 = 0;

289 
	gyy_°¨t
 = 0;

294 
	gyy_did_buf„r_swôch_⁄_eof
;

296 
yyª°¨t
 (
FILE
 *
öput_fûe
 );

297 
yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

298 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

299 
yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

300 
yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

301 
yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

302 
yyp›_buf„r_°©e
 ();

304 
yyísuª_buf„r_°ack
 ();

305 
yy_lﬂd_buf„r_°©e
 ();

306 
yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

308 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

310 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

311 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

312 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

314 *
yyÆloc
 (
yy_size_t
 );

315 *
yyªÆloc
 (*,
yy_size_t
 );

316 
yy‰ì
 (* );

318 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

320 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

322 i‡–! 
YY_CURRENT_BUFFER
 ){ \

323 
	`yyísuª_buf„r_°ack
 (); \

324 
YY_CURRENT_BUFFER_LVALUE
 = \

325 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

327 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

328 }

	)

330 
	#yy_£t_bﬁ
(
©_bﬁ
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){\

333 
	`yyísuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

338 }

	)

340 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

342 
	tYY_CHAR
;

344 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

346 
	tyy_°©e_ty≥
;

348 
yylöío
;

350 
	gyylöío
 = 1;

352 *
yyãxt
;

353 #ifde‡
yyãxt_±r


354 #unde‡
yyãxt_±r


356 
	#yyãxt_±r
 
yyãxt


	)

358 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

359 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

360 
yy_gë_√xt_buf„r
 ();

361 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

362 
__©åibuã__
((
__n‹ëu∫__
))

364 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

369 
	#YY_DO_BEFORE_ACTION
 \

370 (
yyãxt_±r
Ë
yy_bp
; \

371 
yyÀng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

372 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

373 *
yy_˝
 = '\0'; \

374 (
yy_c_buf_p
Ë
yy_˝
;

	)

376 
	#YY_NUM_RULES
 63

	)

377 
	#YY_END_OF_BUFFER
 64

	)

380 
	syy_å™s_öfo


382 
Êex_öt32_t
 
	myy_vîify
;

383 
Êex_öt32_t
 
	myy_nxt
;

385 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[119] =

402 
yyc⁄°
 
YY_CHAR
 
	gyy_ec
[256] =

434 
yyc⁄°
 
YY_CHAR
 
	gyy_mëa
[50] =

443 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_ba£
[123] =

461 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[123] =

479 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_nxt
[191] =

503 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[191] =

527 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

528 *
	gyy_œ°_ac˚±ög_˝os
;

530 
yy_Êex_debug
;

531 
	gyy_Êex_debug
 = 0;

536 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

537 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

538 
	#YY_MORE_ADJ
 0

	)

539 
	#YY_RESTORE_YY_MORE_OFFSET


	)

540 *
	gyyãxt
;

544 
	~<°rög.h
>

545 
	~"utû.h
"

546 
	~"symbﬁ.h
"

547 
	~"îr‹msg.h
"

548 
	~"absyn.h
"

549 
	~"y.èb.h
"

551 
	gch¨Pos
=1;

553 
	$yywøp
()

555 
ch¨Pos
=1;

557 
	}
}

559 
	$adju°
()

561 
EM_tokPos
=
ch¨Pos
;

562 
ch¨Pos
+=
yyÀng
;

563 
	}
}

570 
	#MAX_STR_LEN
 4096

	)

571 
	gposôi⁄
;

572 
	g°rbuf
[
MAX_STR_LEN
];

573 
	gcommít_dïth
;

579 
	#INITIAL
 0

	)

580 
	#NORMAL
 1

	)

581 
	#COMMENT
 2

	)

582 
	#STR
 3

	)

584 #i‚de‡
YY_NO_UNISTD_H


589 
	~<uni°d.h
>

592 #i‚de‡
YY_EXTRA_TYPE


593 
	#YY_EXTRA_TYPE
 *

	)

596 
yy_öô_globÆs
 ();

601 
yyÀx_de°roy
 ();

603 
yygë_debug
 ();

605 
yy£t_debug
 (
debug_Êag
 );

607 
YY_EXTRA_TYPE
 
yygë_exåa
 ();

609 
yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

611 
FILE
 *
yygë_ö
 ();

613 
yy£t_ö
 (
FILE
 * 
_ö_°r
 );

615 
FILE
 *
yygë_out
 ();

617 
yy£t_out
 (
FILE
 * 
_out_°r
 );

619 
yy_size_t
 
yygë_Àng
 ();

621 *
yygë_ãxt
 ();

623 
yygë_löío
 ();

625 
yy£t_löío
 (
_löe_numbî
 );

631 #i‚de‡
YY_SKIP_YYWRAP


632 #ifde‡
__˝lu•lus


633 "C" 
yywøp
 ();

635 
yywøp
 ();

639 #i‚de‡
YY_NO_UNPUT


641 
yyu≈ut
 (
c
,*
buf_±r
 );

645 #i‚de‡
yyãxt_±r


646 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

649 #ifde‡
YY_NEED_STRLEN


650 
yy_Êex_°æí
 (
yyc⁄°
 * );

653 #i‚de‡
YY_NO_INPUT


655 #ifde‡
__˝lu•lus


656 
yyöput
 ();

658 
öput
 ();

664 #i‚de‡
YY_READ_BUF_SIZE


665 #ifde‡
__ü64__


667 
	#YY_READ_BUF_SIZE
 16384

	)

669 
	#YY_READ_BUF_SIZE
 8192

	)

674 #i‚de‡
ECHO


678 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

684 #i‚de‡
YY_INPUT


685 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

686 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

688 
c
 = '*'; \

689 
size_t
 
n
; \

690  
n
 = 0;Ç < 
max_size
 && \

691 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

692 
buf
[
n
] = (Ë
c
; \

693 i‡–
c
 == '\n' ) \

694 
buf
[
n
++] = (Ë
c
; \

695 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

696 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

697 
ªsu…
 = 
n
; \

701 
î∫o
=0; \

702  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
yyö
))==0 && 
	`„º‹
(yyin)) \

704 if–
î∫o
 !
EINTR
) \

706 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

709 
î∫o
=0; \

710 
	`˛óªº
(
yyö
); \

714 

	)

721 #i‚de‡
yyãrmö©e


722 
	#yyãrmö©e
(Ë 
YY_NULL


	)

726 #i‚de‡
YY_START_STACK_INCR


727 
	#YY_START_STACK_INCR
 25

	)

731 #i‚de‡
YY_FATAL_ERROR


732 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

740 #i‚de‡
YY_DECL


741 
	#YY_DECL_IS_OURS
 1

	)

743 
yyÀx
 ();

745 
	#YY_DECL
 
	`yyÀx
 ()

	)

751 #i‚de‡
YY_USER_ACTION


752 
	#YY_USER_ACTION


	)

756 #i‚de‡
YY_BREAK


757 
	#YY_BREAK
 ;

	)

760 
	#YY_RULE_SETUP
 \

761 
YY_USER_ACTION


	)

765 
	gYY_DECL


767 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

768 *
	gyy_˝
, *
	gyy_bp
;

769 
	gyy_a˘
;

771 i‡–!(
	gyy_öô
) )

773 (
	gyy_öô
) = 1;

775 #ifde‡
YY_USER_INIT


776 
	gYY_USER_INIT
;

779 i‡–! (
	gyy_°¨t
) )

780 (
	gyy_°¨t
) = 1;

782 i‡–! 
	gyyö
 )

783 
	gyyö
 = 
°dö
;

785 i‡–! 
	gyyout
 )

786 
	gyyout
 = 
°dout
;

788 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

789 
yyísuª_buf„r_°ack
 ();

790 
	gYY_CURRENT_BUFFER_LVALUE
 =

791 
yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

794 
yy_lﬂd_buf„r_°©e
( );

810 
	gyy_˝
 = (
yy_c_buf_p
);

813 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

818 
	gyy_bp
 = 
yy_˝
;

820 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

821 
	gyy_m©ch
:

824 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

825 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

827 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

828 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

830  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

832 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

833 i‡–
	gyy_cuºít_°©e
 >= 119 )

834 
yy_c
 = 
yy_mëa
[() yy_c];

836 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

837 ++
	gyy_˝
;

839  
	gyy_ba£
[
yy_cuºít_°©e
] != 141 );

841 
	gyy_föd_a˘i⁄
:

842 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

843 i‡–
	gyy_a˘
 == 0 )

845 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

846 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

847 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

850 
	gYY_DO_BEFORE_ACTION
;

852 
	gdo_a˘i⁄
:

854  
yy_a˘
 )

858 *
yy_˝
 = (
yy_hﬁd_ch¨
);

859 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

860 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

861 
	gyy_föd_a˘i⁄
;

864 
YY_RULE_SETUP


866 {
adju°
();  
	gWHILE
;}

867 
YY_BREAK


869 
YY_RULE_SETUP


871 {
adju°
();  
	gFOR
;}

872 
YY_BREAK


874 
YY_RULE_SETUP


876 {
adju°
();  
	gTO
;}

877 
YY_BREAK


879 
YY_RULE_SETUP


881 {
adju°
();  
	gBREAK
;}

882 
YY_BREAK


884 
YY_RULE_SETUP


886 {
adju°
();  
	gLET
;}

887 
YY_BREAK


889 
YY_RULE_SETUP


891 {
adju°
();  
	gIN
;}

892 
YY_BREAK


894 
YY_RULE_SETUP


896 {
adju°
();  
	gEND
;}

897 
YY_BREAK


899 
YY_RULE_SETUP


901 {
adju°
();  
	gFUNCTION
;}

902 
YY_BREAK


904 
YY_RULE_SETUP


906 {
adju°
();  
	gVAR
;}

907 
YY_BREAK


909 
YY_RULE_SETUP


911 {
adju°
();  
	gTYPE
;}

912 
YY_BREAK


914 
YY_RULE_SETUP


916 {
adju°
();  
	gARRAY
;}

917 
YY_BREAK


919 
YY_RULE_SETUP


921 {
adju°
();  
	gIF
;}

922 
YY_BREAK


924 
YY_RULE_SETUP


926 {
adju°
();  
	gTHEN
;}

927 
YY_BREAK


929 
YY_RULE_SETUP


931 {
adju°
();  
	gELSE
;}

932 
YY_BREAK


934 
YY_RULE_SETUP


936 {
adju°
();  
	gDO
;}

937 
YY_BREAK


939 
YY_RULE_SETUP


941 {
adju°
();  
	gOF
;}

942 
YY_BREAK


944 
YY_RULE_SETUP


946 {
adju°
();  
	gNIL
;}

947 
YY_BREAK


949 
YY_RULE_SETUP


951 {
adju°
(); 
	gyylvÆ
.
	gsvÆ
=
Såög
(
yyãxt
);  
	gID
;}

952 
YY_BREAK


954 
YY_RULE_SETUP


956 {
adju°
(); 
	gyylvÆ
.
	givÆ
=
©oi
(
yyãxt
);  
	gINT
;}

957 
YY_BREAK


959 
YY_RULE_SETUP


961 {
adju°
();  
	gCOMMA
;}

962 
YY_BREAK


964 
YY_RULE_SETUP


966 {
adju°
();  
	gCOLON
;}

967 
YY_BREAK


969 
YY_RULE_SETUP


971 {
adju°
();  
	gSEMICOLON
;}

972 
YY_BREAK


974 
YY_RULE_SETUP


976 {
adju°
();  
	gLPAREN
;}

977 
YY_BREAK


979 
YY_RULE_SETUP


981 {
adju°
();  
	gRPAREN
;}

982 
YY_BREAK


984 
YY_RULE_SETUP


986 {
adju°
();  
	gLBRACK
;}

987 
YY_BREAK


989 
YY_RULE_SETUP


991 {
adju°
();  
	gRBRACK
;}

992 
YY_BREAK


994 
YY_RULE_SETUP


996 {
adju°
();  
	gLBRACE
;}

997 
YY_BREAK


999 
YY_RULE_SETUP


1001 {
adju°
();  
	gRBRACE
;}

1002 
YY_BREAK


1004 
YY_RULE_SETUP


1006 {
adju°
();  
	gDOT
;}

1007 
YY_BREAK


1009 
YY_RULE_SETUP


1011 {
adju°
();  
	gPLUS
;}

1012 
YY_BREAK


1014 
YY_RULE_SETUP


1016 {
adju°
();  
	gMINUS
;}

1017 
YY_BREAK


1019 
YY_RULE_SETUP


1021 {
adju°
();  
	gTIMES
;}

1022 
YY_BREAK


1024 
YY_RULE_SETUP


1026 {
adju°
();  
	gDIVIDE
;}

1027 
YY_BREAK


1029 
YY_RULE_SETUP


1031 {
adju°
();  
	gEQ
;}

1032 
YY_BREAK


1034 
YY_RULE_SETUP


1036 {
adju°
();  
	gNEQ
;}

1037 
YY_BREAK


1039 
YY_RULE_SETUP


1041 {
adju°
();  
	gLT
;}

1042 
YY_BREAK


1044 
YY_RULE_SETUP


1046 {
adju°
();  
	gLE
;}

1047 
YY_BREAK


1049 
YY_RULE_SETUP


1051 {
adju°
();  
	gGT
;}

1052 
YY_BREAK


1054 
YY_RULE_SETUP


1056 {
adju°
();  
	gGE
;}

1057 
YY_BREAK


1059 
YY_RULE_SETUP


1061 {
adju°
();  
	gAND
;}

1062 
YY_BREAK


1064 
YY_RULE_SETUP


1066 {
adju°
();  
	gOR
;}

1067 
YY_BREAK


1069 
YY_RULE_SETUP


1071 {
adju°
();  
	gASSIGN
;}

1072 
YY_BREAK


1074 
YY_RULE_SETUP


1076 {
adju°
(); ;}

1077 
YY_BREAK


1080 
YY_RULE_SETUP


1082 {
adju°
(); 
EM_√wlöe
(); ;}

1083 
YY_BREAK


1085 
YY_RULE_SETUP


1087 {
adju°
(); 
	gcommít_dïth
=1; 
BEGIN
 
	gCOMMENT
;}

1088 
YY_BREAK


1090 
YY_RULE_SETUP


1092 {
adju°
(); 
	gposôi⁄
=0; 
BEGIN
 
	gSTR
;}

1093 
YY_BREAK


1095 
YY_RULE_SETUP


1097 {
adju°
(); 
	gyylvÆ
.
	gsvÆ
 = "";  
	gSTRING
;}

1098 
YY_BREAK


1100 
YY_RULE_SETUP


1102 {
adju°
(); 
EM_îr‹
(
EM_tokPos
, "illegalÅoken");}

1103 
YY_BREAK


1105 
YY_RULE_SETUP


1107 {
adju°
(); 
	gcommít_dïth
++;}

1108 
YY_BREAK


1110 
YY_RULE_SETUP


1112 {
adju°
(); 
	gcommít_dïth
--; if(commít_dïth==0Ë
BEGIN
 
NORMAL
;}

1113 
YY_BREAK


1116 
YY_RULE_SETUP


1118 {
adju°
(); 
EM_√wlöe
(); ;}

1119 
YY_BREAK


1121 
YY_RULE_SETUP


1123 {
adju°
();}

1124 
YY_BREAK


1126 
YY_RULE_SETUP


1128 {
ch¨Pos
 +
yyÀng
; 
	g°rbuf
[
posôi⁄
]='\0'; 
	gyylvÆ
.
	gsvÆ
 = 
Såög
(
°rbuf
); 
BEGIN
 
	gNORMAL
;  
	gSTRING
;}

1129 
YY_BREAK


1131 
YY_RULE_SETUP


1133 {
ch¨Pos
 +
yyÀng
; 
	g°rbuf
[
posôi⁄
]='\n'; 
	gposôi⁄
++;}

1134 
YY_BREAK


1136 
YY_RULE_SETUP


1138 {
ch¨Pos
 +
yyÀng
; 
	g°rbuf
[
posôi⁄
]='\t'; 
	gposôi⁄
++;}

1139 
YY_BREAK


1141 
YY_RULE_SETUP


1143 {
ch¨Pos
 +
yyÀng
; 
	g°rbuf
[
posôi⁄
] = 
©oi
(
yyãxt
+1); 
	gposôi⁄
++;}

1144 
YY_BREAK


1146 
YY_RULE_SETUP


1148 {
ch¨Pos
 +
yyÀng
; 
	g°rbuf
[
posôi⁄
]='"'; 
	gposôi⁄
++;}

1149 
YY_BREAK


1151 
YY_RULE_SETUP


1153 {
ch¨Pos
 +
yyÀng
; 
	g°rbuf
[
posôi⁄
]='\\'; 
	gposôi⁄
++;}

1154 
YY_BREAK


1157 
YY_RULE_SETUP


1159 {
ch¨Pos
 +
yyÀng
;}

1160 
YY_BREAK


1162 
YY_RULE_SETUP


1164 {
ch¨Pos
 +
yyÀng
; 
°r˝y
(
°rbuf
+
posôi⁄
, 
yyãxt
); 
	gposôi⁄
 += yyleng;}

1165 
YY_BREAK


1168 
YY_RULE_SETUP


1170 {
adju°
(); 
EM_√wlöe
(); ;}

1171 
YY_BREAK


1173 
YY_RULE_SETUP


1175 {
BEGIN
 
NORMAL
; 
yyÀss
(0);}

1176 
YY_BREAK


1178 
YY_RULE_SETUP


1180 
ECHO
;

1181 
	gYY_BREAK


1183 
YY_STATE_EOF
(
INITIAL
):

1184 
YY_STATE_EOF
(
NORMAL
):

1185 
YY_STATE_EOF
(
COMMENT
):

1186 
YY_STATE_EOF
(
STR
):

1187 
yyãrmö©e
();

1189 
	gYY_END_OF_BUFFER
:

1192 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1195 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1196 
YY_RESTORE_YY_MORE_OFFSET


1198 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1209 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1210 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

1211 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1221 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1223 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1225 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1227 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1238 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1240 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1242 i‡–
	gyy_√xt_°©e
 )

1245 
	gyy_˝
 = ++(
yy_c_buf_p
);

1246 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1247 
	gyy_m©ch
;

1252 
	gyy_˝
 = (
yy_c_buf_p
);

1253 
	gyy_föd_a˘i⁄
;

1257  
yy_gë_√xt_buf„r
( ) )

1259 
	gEOB_ACT_END_OF_FILE
:

1261 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1263 i‡–
yywøp
( ) )

1274 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1276 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1277 
	gdo_a˘i⁄
;

1282 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1283 
	gYY_NEW_FILE
;

1288 
	gEOB_ACT_CONTINUE_SCAN
:

1289 (
yy_c_buf_p
) =

1290 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1292 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1294 
	gyy_˝
 = (
yy_c_buf_p
);

1295 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1296 
	gyy_m©ch
;

1298 
	gEOB_ACT_LAST_MATCH
:

1299 (
yy_c_buf_p
) =

1300 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1302 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1304 
	gyy_˝
 = (
yy_c_buf_p
);

1305 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1306 
	gyy_föd_a˘i⁄
;

1312 
YY_FATAL_ERROR
(

1326 
	$yy_gë_√xt_buf„r
 ()

1328 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1329 *
sour˚
 = (
yyãxt_±r
);

1330 
yy_size_t
 
numbî_to_move
, 
i
;

1331 
ªt_vÆ
;

1333 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1334 
	`YY_FATAL_ERROR
(

1337 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1339 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1344  
EOB_ACT_END_OF_FILE
;

1352  
EOB_ACT_LAST_MATCH
;

1359 
numbî_to_move
 = (
yy_size_t
Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1361  
i
 = 0; i < 
numbî_to_move
; ++i )

1362 *(
de°
++Ë*(
sour˚
++);

1364 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1368 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1372 
yy_size_t
 
num_to_ªad
 =

1373 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1375  
num_to_ªad
 <= 0 )

1379 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1381 
yy_c_buf_p_off£t
 =

1382 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1384 i‡–
b
->
yy_is_our_buf„r
 )

1386 
yy_size_t
 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1388 i‡–
√w_size
 <= 0 )

1389 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1391 
b
->
yy_buf_size
 *= 2;

1393 
b
->
yy_ch_buf
 = (*)

1395 
	`yyªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1399 
b
->
yy_ch_buf
 = 0;

1401 i‡–! 
b
->
yy_ch_buf
 )

1402 
	`YY_FATAL_ERROR
(

1405 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1407 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1408 
numbî_to_move
 - 1;

1412 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1413 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1416 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1417 (
yy_n_ch¨s
), 
num_to_ªad
 );

1419 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1422 i‡–(
yy_n_ch¨s
) == 0 )

1424 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1426 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1427 
	`yyª°¨t
(
yyö
 );

1432 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1433 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1434 
YY_BUFFER_EOF_PENDING
;

1439 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1441 i‡((Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1443 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1444 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1445 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1446 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1449 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1450 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1451 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1453 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1455  
ªt_vÆ
;

1456 
	}
}

1460 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1462 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1463 *
yy_˝
;

1465 
yy_cuºít_°©e
 = (
yy_°¨t
);

1467  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1469 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1470 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1472 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1473 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1475  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1477 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1478 i‡–
yy_cuºít_°©e
 >= 119 )

1479 
yy_c
 = 
yy_mëa
[() yy_c];

1481 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1484  
yy_cuºít_°©e
;

1485 
	}
}

1492 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1494 
yy_is_jam
;

1495 *
yy_˝
 = (
yy_c_buf_p
);

1497 
YY_CHAR
 
yy_c
 = 1;

1498 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1500 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1501 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1503  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1505 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1506 i‡–
yy_cuºít_°©e
 >= 119 )

1507 
yy_c
 = 
yy_mëa
[() yy_c];

1509 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1510 
yy_is_jam
 = (
yy_cuºít_°©e
 == 118);

1512  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1513 
	}
}

1515 #i‚de‡
YY_NO_UNPUT


1517 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1519 *
yy_˝
;

1521 
yy_˝
 = (
yy_c_buf_p
);

1524 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1526 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1529 
yy_size_t
 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1530 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1531 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1532 *
sour˚
 =

1533 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1535  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1536 *--
de°
 = *--
sour˚
;

1538 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1539 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1540 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1541 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1543 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1544 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1547 *--
yy_˝
 = (Ë
c
;

1549 (
yyãxt_±r
Ë
yy_bp
;

1550 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1551 (
yy_c_buf_p
Ë
yy_˝
;

1552 
	}
}

1556 #i‚de‡
YY_NO_INPUT


1557 #ifde‡
__˝lu•lus


1558 
	$yyöput
 ()

1560 
	$öput
 ()

1564 
c
;

1566 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1568 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1574 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1576 *(
yy_c_buf_p
) = '\0';

1580 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1581 ++(
yy_c_buf_p
);

1583  
	`yy_gë_√xt_buf„r
( ) )

1585 
EOB_ACT_LAST_MATCH
:

1597 
	`yyª°¨t
(
yyö
 );

1601 
EOB_ACT_END_OF_FILE
:

1603 i‡–
	`yywøp
( ) )

1604  
EOF
;

1606 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1607 
YY_NEW_FILE
;

1608 #ifde‡
__˝lu•lus


1609  
	`yyöput
();

1611  
	`öput
();

1615 
EOB_ACT_CONTINUE_SCAN
:

1616 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1622 
c
 = *(*Ë(
yy_c_buf_p
);

1623 *(
yy_c_buf_p
) = '\0';

1624 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1626  
c
;

1627 
	}
}

1635 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1638 i‡–! 
YY_CURRENT_BUFFER
 ){

1639 
	`yyísuª_buf„r_°ack
 ();

1640 
YY_CURRENT_BUFFER_LVALUE
 =

1641 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

1644 
	`yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1645 
	`yy_lﬂd_buf„r_°©e
( );

1646 
	}
}

1652 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1660 
	`yyísuª_buf„r_°ack
 ();

1661 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1664 i‡–
YY_CURRENT_BUFFER
 )

1667 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1668 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1669 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1672 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1673 
	`yy_lﬂd_buf„r_°©e
( );

1680 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1681 
	}
}

1683 
	$yy_lﬂd_buf„r_°©e
 ()

1685 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1686 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1687 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1688 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1689 
	}
}

1697 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1699 
YY_BUFFER_STATE
 
b
;

1701 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1702 i‡–! 
b
 )

1703 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1705 
b
->
yy_buf_size
 = (
yy_size_t
)
size
;

1710 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
(b->
yy_buf_size
 + 2 );

1711 i‡–! 
b
->
yy_ch_buf
 )

1712 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1714 
b
->
yy_is_our_buf„r
 = 1;

1716 
	`yy_öô_buf„r
(
b
,
fûe
 );

1718  
b
;

1719 
	}
}

1725 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1728 i‡–! 
b
 )

1731 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1732 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1734 i‡–
b
->
yy_is_our_buf„r
 )

1735 
	`yy‰ì
((*Ë
b
->
yy_ch_buf
 );

1737 
	`yy‰ì
((*Ë
b
 );

1738 
	}
}

1744 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1747 
€ºno
 = 
î∫o
;

1749 
	`yy_Êush_buf„r
(
b
 );

1751 
b
->
yy_öput_fûe
 = 
fûe
;

1752 
b
->
yy_fûl_buf„r
 = 1;

1758 i‡(
b
 !
YY_CURRENT_BUFFER
){

1759 
b
->
yy_bs_löío
 = 1;

1760 
b
->
yy_bs_cﬁumn
 = 0;

1763 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1765 
î∫o
 = 
€ºno
;

1766 
	}
}

1772 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1774 i‡–! 
b
 )

1777 
b
->
yy_n_ch¨s
 = 0;

1783 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1784 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1786 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1788 
b
->
yy_©_bﬁ
 = 1;

1789 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1791 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1792 
	`yy_lﬂd_buf„r_°©e
( );

1793 
	}
}

1801 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1803 i‡(
√w_buf„r
 =
NULL
)

1806 
	`yyísuª_buf„r_°ack
();

1809 i‡–
YY_CURRENT_BUFFER
 )

1812 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1813 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1814 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1818 i‡(
YY_CURRENT_BUFFER
)

1819 (
yy_buf„r_°ack_t›
)++;

1820 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1823 
	`yy_lﬂd_buf„r_°©e
( );

1824 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1825 
	}
}

1831 
	$yyp›_buf„r_°©e
 ()

1833 i‡(!
YY_CURRENT_BUFFER
)

1836 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1837 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1838 i‡((
yy_buf„r_°ack_t›
) > 0)

1839 --(
yy_buf„r_°ack_t›
);

1841 i‡(
YY_CURRENT_BUFFER
) {

1842 
	`yy_lﬂd_buf„r_°©e
( );

1843 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1845 
	}
}

1850 
	$yyísuª_buf„r_°ack
 ()

1852 
yy_size_t
 
num_to_Æloc
;

1854 i‡(!(
yy_buf„r_°ack
)) {

1860 
num_to_Æloc
 = 1;

1861 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


1862 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1864 i‡–! (
yy_buf„r_°ack
) )

1865 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1867 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1869 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1870 (
yy_buf„r_°ack_t›
) = 0;

1874 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1877 
yy_size_t
 
grow_size
 = 8 ;

1879 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1880 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


1881 ((
yy_buf„r_°ack
),

1882 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1884 i‡–! (
yy_buf„r_°ack
) )

1885 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1888 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1889 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1891 
	}
}

1899 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1901 
YY_BUFFER_STATE
 
b
;

1903 i‡–
size
 < 2 ||

1904 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1905 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1909 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

1910 i‡–! 
b
 )

1911 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1913 
b
->
yy_buf_size
 = 
size
 - 2;

1914 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1915 
b
->
yy_is_our_buf„r
 = 0;

1916 
b
->
yy_öput_fûe
 = 0;

1917 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1918 
b
->
yy_is_öãø˘ive
 = 0;

1919 
b
->
yy_©_bﬁ
 = 1;

1920 
b
->
yy_fûl_buf„r
 = 0;

1921 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1923 
	`yy_swôch_to_buf„r
(
b
 );

1925  
b
;

1926 
	}
}

1936 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1939  
	`yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1940 
	}
}

1949 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

1951 
YY_BUFFER_STATE
 
b
;

1952 *
buf
;

1953 
yy_size_t
 
n
;

1954 
yy_size_t
 
i
;

1957 
n
 = 
_yybyãs_Àn
 + 2;

1958 
buf
 = (*Ë
	`yyÆloc
(
n
 );

1959 i‡–! 
buf
 )

1960 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

1962  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1963 
buf
[
i
] = 
yybyãs
[i];

1965 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1967 
b
 = 
	`yy_sˇn_buf„r
(
buf
,
n
 );

1968 i‡–! 
b
 )

1969 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

1974 
b
->
yy_is_our_buf„r
 = 1;

1976  
b
;

1977 
	}
}

1979 #i‚de‡
YY_EXIT_FAILURE


1980 
	#YY_EXIT_FAILURE
 2

	)

1983 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1985 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1986 
	`exô
–
YY_EXIT_FAILURE
 );

1987 
	}
}

1991 #unde‡
yyÀss


1992 
	#yyÀss
(
n
) \

1996 
yyÀss_ma¸o_¨g
 = (
n
); \

1997 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1998 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

1999 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

2000 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2001 *(
yy_c_buf_p
) = '\0'; \

2002 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

2004  0 )

	)

2011 
	$yygë_löío
 ()

2014  
yylöío
;

2015 
	}
}

2020 
FILE
 *
	$yygë_ö
 ()

2022  
yyö
;

2023 
	}
}

2028 
FILE
 *
	$yygë_out
 ()

2030  
yyout
;

2031 
	}
}

2036 
yy_size_t
 
	$yygë_Àng
 ()

2038  
yyÀng
;

2039 
	}
}

2045 *
	$yygë_ãxt
 ()

2047  
yyãxt
;

2048 
	}
}

2054 
	$yy£t_löío
 (
_löe_numbî
 )

2057 
yylöío
 = 
_löe_numbî
;

2058 
	}
}

2066 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

2068 
yyö
 = 
_ö_°r
 ;

2069 
	}
}

2071 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

2073 
yyout
 = 
_out_°r
 ;

2074 
	}
}

2076 
	$yygë_debug
 ()

2078  
yy_Êex_debug
;

2079 
	}
}

2081 
	$yy£t_debug
 (
_bdebug
 )

2083 
yy_Êex_debug
 = 
_bdebug
 ;

2084 
	}
}

2086 
	$yy_öô_globÆs
 ()

2092 (
yy_buf„r_°ack
) = 0;

2093 (
yy_buf„r_°ack_t›
) = 0;

2094 (
yy_buf„r_°ack_max
) = 0;

2095 (
yy_c_buf_p
) = (*) 0;

2096 (
yy_öô
) = 0;

2097 (
yy_°¨t
) = 0;

2100 #ifde‡
YY_STDINIT


2101 
yyö
 = 
°dö
;

2102 
yyout
 = 
°dout
;

2104 
yyö
 = (
FILE
 *) 0;

2105 
yyout
 = (
FILE
 *) 0;

2112 
	}
}

2115 
	$yyÀx_de°roy
 ()

2119 
YY_CURRENT_BUFFER
){

2120 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2121 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2122 
	`yyp›_buf„r_°©e
();

2126 
	`yy‰ì
((
yy_buf„r_°ack
) );

2127 (
yy_buf„r_°ack
Ë
NULL
;

2131 
	`yy_öô_globÆs
( );

2134 
	}
}

2140 #i‚de‡
yyãxt_±r


2141 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2144 
i
;

2145  
i
 = 0; i < 
n
; ++i )

2146 
s1
[
i
] = 
s2
[i];

2147 
	}
}

2150 #ifde‡
YY_NEED_STRLEN


2151 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2153 
n
;

2154  
n
 = 0; 
s
[n]; ++n )

2157  
n
;

2158 
	}
}

2161 *
	$yyÆloc
 (
yy_size_t
 
size
 )

2163  (*Ë
	`mÆloc
–
size
 );

2164 
	}
}

2166 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2176  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2177 
	}
}

2179 
	$yy‰ì
 (* 
±r
 )

2181 
	`‰ì
–(*Ë
±r
 );

2182 
	}
}

2184 
	#YYTABLES_NAME
 "yyèbÀs"

	)

	@liveness.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

6 
	~"absyn.h
"

7 
	~"as£m.h
"

8 
	~"‰ame.h
"

9 
	~"gøph.h
"

10 
	~"Êowgøph.h
"

11 
	~"livíess.h
"

12 
	~"èbÀ.h
"

14 
	$¥öt_ãmpLi°
(
Temp_ãmpLi°
 
li°
, 
Temp_m≠
 
m≠
){

15 
li°
){

16 
°rög
 
«me
 = 
	`Temp_look
(
m≠
, 
li°
->
hód
);

17 
	`¥ötf
("%s, ", 
«me
);

18 
li°
 =Üi°->
èû
;

20 
	}
}

22 
	$¥öt_èbÀ
(
G_nodeLi°
 
Êow_nodes
, 
G_èbÀ
 
ö_èbÀ
, G_èbÀ 
èbÀ
, 
Temp_m≠
 
m≠
){

23 
	`¥ötf
("===================================================\n");

24 
Êow_nodes
){

25 
G_node
 
n
 = 
Êow_nodes
->
hód
;

26 
Êow_nodes
 = flow_nodes->
èû
;

27 
Temp_ãmpLi°
 
ö_£t
 = (Temp_ãmpLi°)
	`G_look
(
ö_èbÀ
, 
n
);

28 
Temp_ãmpLi°
 
out_£t
 = (Temp_ãmpLi°)
	`G_look
(
èbÀ
, 
n
);

29 
AS_ö°r
 
ö°r
 = (AS_ö°r)
	`G_nodeInfo
(
n
);

30 
	`AS_¥öt
(
°dout
, 
ö°r
, 
m≠
);

31 
	`¥ötf
("\tin: ");

32 
	`¥öt_ãmpLi°
(
ö_£t
, 
m≠
);

33 
	`¥ötf
("\n\tout: ");

34 
	`¥öt_ãmpLi°
(
out_£t
, 
m≠
);

35 
	`¥ötf
("\n\n");

37 
	}
}

39 
Temp_ãmpLi°
 
	g¥ecﬁ‹ed_ªgs
 = 
NULL
;

42 
Temp_ãmpLi°
 
	$Pªcﬁ‹ed_ªgs
(){

43 if(
¥ecﬁ‹ed_ªgs
)

44  
¥ecﬁ‹ed_ªgs
;

47 
¥ecﬁ‹ed_ªgs
 = 
	`Temp_TempLi°
(
	`F_óx
(),

48 
	`Temp_TempLi°
(
	`F_ebx
(),

49 
	`Temp_TempLi°
(
	`F_ecx
(),

50 
	`Temp_TempLi°
(
	`F_edx
(),

51 
	`Temp_TempLi°
(
	`F_esi
(),

52 
	`Temp_TempLi°
(
	`F_edi
(), 
NULL
)

58 
	}
}

60 
Live_moveLi°
 
	$Live_MoveLi°
(
G_node
 
§c
, G_nodê
d°
, 
Live_moveLi°
 
èû
) {

61 
Live_moveLi°
 
lm
 = (Live_moveLi°Ë
	`checked_mÆloc
((*lm));

62 
lm
->
§c
 = src;

63 
lm
->
d°
 = dst;

64 
lm
->
èû
 =Åail;

65  
lm
;

66 
	}
}

69 
Temp_ãmp
 
	$Live_gãmp
(
G_node
 
n
) {

71  
	`G_nodeInfo
(
n
);

72 
	}
}

75 
Live_moveLi°
 
	$Live_Uni⁄_moveLi°
(
Live_moveLi°
 
l
, Live_moveLi° 
r
){

76 
Live_moveLi°
 
ªsu…
 = 
l
;

77 
r
){

78 
G_node
 
§c
 = 
r
->src;

79 
G_node
 
d°
 = 
r
->dst;

80 if(!
	`Live_In_moveLi°
(
§c
, 
d°
, 
l
))

82 
ªsu…
 = 
	`Live_MoveLi°
(
§c
, 
d°
,Ñesult);

83 
r
 =Ñ->
èû
;

85  
ªsu…
;

86 
	}
}

88 
Live_moveLi°
 
	$Live_Sub_moveLi°
(
Live_moveLi°
 
l
, Live_moveLi° 
r
){

89 
Live_moveLi°
 
ªsu…
 = 
NULL
;

90 
l
){

91 
G_node
 
§c
 = 
l
->src;

92 
G_node
 
d°
 = 
l
->dst;

93 if(!
	`Live_In_moveLi°
(
§c
, 
d°
, 
r
))

94 
ªsu…
 = 
	`Live_MoveLi°
(
§c
, 
d°
,Ñesult);

95 
l
 =Ü->
èû
;

97  
ªsu…
;

98 
	}
}

100 
Live_moveLi°
 
	$Live_I¡î£˘_moveLi°
(
Live_moveLi°
 
l
, Live_moveLi° 
r
){

101 
Live_moveLi°
 
ªsu…
 = 
NULL
;

102 
r
){

103 
G_node
 
§c
 = 
r
->src;

104 
G_node
 
d°
 = 
r
->dst;

105 if(
	`Live_In_moveLi°
(
§c
, 
d°
, 
l
))

106 
ªsu…
 = 
	`Live_MoveLi°
(
§c
, 
d°
,Ñesult);

107 
r
 =Ñ->
èû
;

109  
ªsu…
;

110 
	}
}

112 
boﬁ
 
	$Live_In_moveLi°
(
G_node
 
§c
, G_nodê
d°
, 
Live_moveLi°
 
li°
){

113 
li°
){

114 if(
§c
 =
li°
->§¯&& 
d°
 ==Üist->dst)

115  
TRUE
;

116 
li°
 =Üi°->
èû
;

118  
FALSE
;

119 
	}
}

124 
G_node
 
	$gë_Gnode
(
G_gøph
 
g
, 
Temp_ãmp
 
t
, 
TAB_èbÀ
 
ãmp_2_node
){

125 
G_node
 
ªsu…
 = 
	`TAB_look
(
ãmp_2_node
, 
t
);

126 if(!
ªsu…
){

127 
ªsu…
 = 
	`G_Node
(
g
, 
t
);

128 
	`TAB_íãr
(
ãmp_2_node
, 
t
, 
ªsu…
);

130  
ªsu…
;

131 
	}
}

133 
boﬁ
 * 
	$˚Œ_of_bôm≠
(
boﬁ
 *
bôm≠_ba£
, 
node_˙t
, 
node_key_a
, 
node_key_b
){

134  (
bôm≠_ba£
 + 
node_˙t
 * 
node_key_a
 + 
node_key_b
);

135 
	}
}

138 
	$lök
(
Live_gøph
 *
lg
, 
Temp_ãmp
 
ãmp_a
, Temp_ãm∞
ãmp_b
, 
TAB_èbÀ
 
ãmp_2_node
){

140 if(
ãmp_a
 =
ãmp_b
 ||Åemp_®=
	`F_FP
() ||Åemp_b == F_FP())

143 
G_node
 
node_a
 = 
	`gë_Gnode
(
lg
->
gøph
, 
ãmp_a
, 
ãmp_2_node
);

144 
G_node
 
node_b
 = 
	`gë_Gnode
(
lg
->
gøph
, 
ãmp_b
, 
ãmp_2_node
);

146 
boﬁ
 * 
˚Œ
 = 
	`˚Œ_of_bôm≠
(
lg
->
adj_m≠
, 
	`G_gøph_nodecou¡
÷g->
gøph
), 
	`G_node_key
(
node_a
),G_node_key(
node_b
));

147 if(! *
˚Œ
){

148 *
˚Œ
 = 
TRUE
;

149 
˚Œ
 = 
	`˚Œ_of_bôm≠
(
lg
->
adj_m≠
, 
	`G_gøph_nodecou¡
÷g->
gøph
), 
	`G_node_key
(
node_b
), G_node_key(
node_a
));

150 *
˚Œ
 = 
TRUE
;

155 if(!
	`Temp_In_ãmpLi°
(
ãmp_a
, 
	`Pªcﬁ‹ed_ªgs
())){

156 
	`G_addEdge
(
node_a
, 
node_b
);

158 if(!
	`Temp_In_ãmpLi°
(
ãmp_b
, 
	`Pªcﬁ‹ed_ªgs
())){

159 
	`G_addEdge
(
node_a
, 
node_b
);

165 if(!
	`Temp_In_ãmpLi°
(
ãmp_a
, 
	`Pªcﬁ‹ed_ªgs
())){

166 *
i
 = (*)
	`G_look
(
lg
->
•ûl_¥i‹ôy
, 
node_a
);

167 *
i
 = *i + 1;

169 if(!
	`Temp_In_ãmpLi°
(
ãmp_b
, 
	`Pªcﬁ‹ed_ªgs
())){

170 *
i
 = (*)
	`G_look
(
lg
->
•ûl_¥i‹ôy
, 
node_b
);

171 *
i
 = *i + 1;

173 
	}
}

177 
Live_gøph
 
	$Live_livíess
(
G_gøph
 
Êow
) {

179 
Live_gøph
 
lg
;

180 
G_èbÀ
 
ö_èbÀ
 = 
	`G_em±y
();

181 
G_èbÀ
 
out_èbÀ
 = 
	`G_em±y
();

183 
G_nodeLi°
 
Êow_nodes
 = 
	`G_nodes
(
Êow
);

186 ; 
Êow_nodes
 !
NULL
; flow_node†Êow_nodes->
èû
){

187 
	`G_íãr
(
ö_èbÀ
, 
Êow_nodes
->
hód
, 
NULL
);

188 
	`G_íãr
(
out_èbÀ
, 
Êow_nodes
->
hód
, 
NULL
);

191 
boﬁ
 
ch™ged
 = 
TRUE
;

192 
Temp_m≠
 
m≠
 = 
	`Temp_œyîM≠
(
F_ãmpM≠
, 
	`Temp_«me
());

193 
ch™ged
){

194 
ch™ged
 = 
FALSE
;

195 
Êow_nodes
 = 
	`G_nodes
(
Êow
);

196 
	`¥öt_èbÀ
(
Êow_nodes
, 
ö_èbÀ
, 
out_èbÀ
, 
m≠
);

197 ; 
Êow_nodes
 !
NULL
; flow_node†Êow_nodes->
èû
){

198 
G_node
 
cur_Êow_node
 = 
Êow_nodes
->
hód
;

199 
Temp_ãmpLi°
 
ö_£t_öôül
 = (Temp_ãmpLi°)
	`G_look
(
ö_èbÀ
, 
cur_Êow_node
);

200 
Temp_ãmpLi°
 
out_£t_öôül
 = (Temp_ãmpLi°)
	`G_look
(
out_èbÀ
, 
cur_Êow_node
);

201 
Temp_ãmpLi°
 
ö_£t_a·î
 = 
NULL
;

202 
Temp_ãmpLi°
 
out_£t_a·î
 = 
NULL
;

204 
G_nodeLi°
 
succ_li°
 = 
	`G_succ
(
cur_Êow_node
);

206 ; 
succ_li°
 !
NULL
; succ_li° = succ_li°->
èû
){

207 
G_node
 
succ_node
 = 
succ_li°
->
hód
;

208 
Temp_ãmpLi°
 
succ_ö_£t
 = (Temp_ãmpLi°)
	`G_look
(
ö_èbÀ
, 
succ_node
);

209 
out_£t_a·î
 = 
	`Temp_Uni⁄_ãmpLi°
(out_£t_a·î, 
succ_ö_£t
);

212 
ö_£t_a·î
 = 
	`Temp_Uni⁄_ãmpLi°
(
	`FG_u£
(
cur_Êow_node
), 
	`Temp_Sub_ãmpLi°
(
out_£t_a·î
, 
	`FG_def
(cur_flow_node)));

214 if(!
	`Temp_EquÆ_ãmpLi°
(
ö_£t_öôül
, 
ö_£t_a·î
)){

215 
ch™ged
 = 
TRUE
;

216 
	`G_íãr
(
ö_èbÀ
, 
cur_Êow_node
, 
ö_£t_a·î
);

218 if(!
	`Temp_EquÆ_ãmpLi°
(
out_£t_öôül
, 
out_£t_a·î
)){

219 
ch™ged
 = 
TRUE
;

220 
	`G_íãr
(
out_èbÀ
, 
cur_Êow_node
, 
out_£t_a·î
);

226 
lg
.
gøph
 = 
	`G_Gøph
();

227 
lg
.
•ûl_¥i‹ôy
 = 
	`G_em±y
();

228 
lg
.
moves
 = 
NULL
;

232 
TAB_èbÀ
 
ãmp_2_node
 = 
	`TAB_em±y
();

234 
Temp_ãmpLi°
 
¥e_ªgs
 = 
	`Pªcﬁ‹ed_ªgs
();Öª_ªgs;Öª_ªg†¥e_ªgs->
èû
){

235 
	`gë_Gnode
(
lg
.
gøph
, 
¥e_ªgs
->
hód
, 
ãmp_2_node
);

238 
Êow_nodes
 = 
	`G_nodes
(
Êow
);

239 ; 
Êow_nodes
 !
NULL
; flow_node†Êow_nodes->
èû
){

240 
Temp_ãmpLi°
 
def_li°
 = 
	`FG_def
(
Êow_nodes
->
hód
); def_li°; def_li° = def_li°->
èû
){

241 if(
def_li°
->
hód
 !
	`F_FP
()){

242 * 
¥i‹ôy
 = 
	`checked_mÆloc
(());

243 *
¥i‹ôy
 = 0;

244 
G_node
 
node
 = 
	`gë_Gnode
(
lg
.
gøph
, 
def_li°
->
hód
, 
ãmp_2_node
);

245 
	`G_íãr
(
lg
.
•ûl_¥i‹ôy
, 
node
, 
¥i‹ôy
);

250 
node_˙t
 = 
	`G_gøph_nodecou¡
(
lg
.
gøph
);

251 
lg
.
adj_m≠
 = 
	`checked_mÆloc
((
node_˙t
 *Çode_˙tË* (
boﬁ
));

255 
Temp_ãmpLi°
 
p1
 = 
	`Pªcﬁ‹ed_ªgs
();Ö1;Ö1 =Ö1->
èû
){

256 
Temp_ãmpLi°
 
p2
 = 
	`Pªcﬁ‹ed_ªgs
();Ö2;Ö2 =Ö2->
èû
){

257 if(
p1
->
hód
 !
p2
->head)

258 
	`lök
(&
lg
, 
p1
->
hód
, 
p2
->hód, 
ãmp_2_node
);

263 
Êow_nodes
 = 
	`G_nodes
(
Êow
);

264 ; 
Êow_nodes
 !
NULL
; flow_node†Êow_nodes->
èû
){

265 
G_node
 
cur_node
 = 
Êow_nodes
->
hód
;

266 
Temp_ãmpLi°
 
out_£t
 = (Temp_ãmpLi°Ë
	`G_look
(
out_èbÀ
, 
cur_node
);

268 
AS_ö°r
 
ö°r
 = 
	`G_nodeInfo
(
cur_node
);

269 if(
ö°r
->
köd
 =
I_MOVE
){

270 
out_£t
 = 
	`Temp_Sub_ãmpLi°
(out_£t, 
	`FG_u£
(
cur_node
));

272 
Temp_ãmpLi°
 
def_li°
 = 
	`FG_def
(
cur_node
); def_li°; def_li° = def_li°->
èû
){

273 
Temp_ãmpLi°
 
u£_li°
 = 
	`FG_u£
(
cur_node
); u£_li°; u£_li° = u£_li°->
èû
){

274 
G_node
 
§c_node
 = 
	`gë_Gnode
(
lg
.
gøph
, 
u£_li°
->
hód
, 
ãmp_2_node
);

275 
G_node
 
d°_node
 = 
	`gë_Gnode
(
lg
.
gøph
, 
def_li°
->
hód
, 
ãmp_2_node
);

276 
lg
.
moves
 = 
	`Live_MoveLi°
(
§c_node
, 
d°_node
,Üg.moves);

282 
Temp_ãmpLi°
 
def_li°
 = 
	`FG_def
(
cur_node
); def_li°; def_li° = def_li°->
èû
){

283 ; 
out_£t
; out_£àout_£t->
èû
){

284 
	`lök
(&
lg
, 
def_li°
->
hód
, 
out_£t
->hód, 
ãmp_2_node
);

289  
lg
;

290 
	}
}

	@liveness.h

1 #i‚de‡
LIVENESS_H


2 
	#LIVENESS_H


	)

5 
Live_moveLi°_
 *
	tLive_moveLi°
;

6 
	sLive_moveLi°_
 {

7 
G_node
 
	m§c
, 
	md°
;

8 
Live_moveLi°
 
	mèû
;

11 
Live_moveLi°
 
Live_MoveLi°
(
G_node
 
§c
, G_nodê
d°
, Live_moveLi° 
èû
);

14 
Live_moveLi°
 
Live_Uni⁄_moveLi°
(Live_moveLi° 
l
, Live_moveLi° 
r
);

15 
Live_moveLi°
 
Live_Sub_moveLi°
(Live_moveLi° 
l
, Live_moveLi° 
r
);

16 
Live_moveLi°
 
Live_I¡î£˘_moveLi°
(Live_moveLi° 
l
, Live_moveLi° 
r
);

18 
boﬁ
 
Live_In_moveLi°
(
G_node
 
§c
, G_nodê
d°
, 
Live_moveLi°
 
li°
);

20 
	sLive_gøph
 {

21 
boﬁ
 *
	madj_m≠
;

22 
G_gøph
 
	mgøph
;

23 
Live_moveLi°
 
	mmoves
;

24 
G_èbÀ
 
	m•ûl_¥i‹ôy
;

28 
Temp_ãmp
 
Live_gãmp
(
G_node
 
n
);

30 
Live_gøph
 
Live_livíess
(
G_gøph
 
Êow
);

32 
Temp_ãmpLi°
 
Pªcﬁ‹ed_ªgs
();

	@main.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ty≥s.h
"

9 
	~"absyn.h
"

10 
	~"îr‹msg.h
"

11 
	~"ãmp.h
"

12 
	~"åì.h
"

13 
	~"as£m.h
"

14 
	~"‰ame.h
"

15 
	~"å™¶©e.h
"

16 
	~"ív.h
"

17 
	~"£m™t.h
"

18 
	~"ˇn⁄.h
"

19 
	~"¥absyn.h
"

20 
	~"¥öâªe.h
"

21 
	~"esˇ≥.h
"

22 
	~"∑r£.h
"

23 
	~"codegí.h
"

24 
	~"ªgÆloc.h
"

26 
boﬁ
 
™yEº‹s
;

37 
	$doProc
(
FILE
 *
out
, 
F_‰ame
 
‰ame
, 
T_°m
 
body
)

40 
fûe_«me
[100];

41 
	`•rötf
(
fûe_«me
, "log");

42 
FILE
 *
log_fûe
 = 
	`f›í
(
fûe_«me
, "w");

45 
AS_¥oc
 
¥oc
;

46 
RA_ªsu…
 
Æloˇti⁄
;

47 
T_°mLi°
 
°mLi°
;

48 
AS_ö°rLi°
 
iLi°
;

49 
C_block
 
blo
;

51 
F_ãmpM≠
 = 
	`Temp_em±y
();

53 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_FP
(), "%ebp");

54 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_SP
(), "%esp");

55 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_óx
(), "%eax");

56 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_ebx
(), "%ebx");

57 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_ecx
(), "%ecx");

58 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_edx
(), "%edx");

59 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_esi
(), "%esi");

60 
	`Temp_íãr
(
F_ãmpM≠
, 
	`F_edi
(), "%edi");

63 if(
	`Tr_ouãrmo°
()->
‰ame
 != frame)

64 
body
 = 
	`F_¥ocE¡ryExô1
(
‰ame
, body);

66 
	`Ârötf
(
log_fûe
, "doPro¯f‹ fun˘i⁄ %s:\n\n", 
	`S_«me
(
	`F_«me
(
‰ame
)));

67 
	`¥ötStmLi°
(
log_fûe
, 
	`T_StmLi°
(
body
, 
NULL
));

68 
	`Ârötf
(
log_fûe
, "-------====IRÅree=====-----\n");

70 
°mLi°
 = 
	`C_löórize
(
body
);

72 
	`¥ötStmLi°
(
log_fûe
, 
°mLi°
);

73 
	`Ârötf
(
log_fûe
, "-------====Linearlized=====-----\n");

75 
blo
 = 
	`C_basicBlocks
(
°mLi°
);

76 
C_°mLi°Li°
 
°mLi°s
 = 
blo
.stmLists;

78 ; 
°mLi°s
; stmLi°†°mLi°s->
èû
) {

79 
	`¥ötStmLi°
(
log_fûe
, 
°mLi°s
->
hód
);

80 
	`Ârötf
(
log_fûe
, "------====Basic block=====-------\n");

83 
°mLi°
 = 
	`C_åa˚ScheduÀ
(
blo
);

85 
	`¥ötStmLi°
(
log_fûe
, 
°mLi°
);

86 
	`Ârötf
(
log_fûe
, "-------====trace=====-----\n");

87 
iLi°
 = 
	`F_codegí
(
‰ame
, 
°mLi°
);

89 
	`AS_¥ötIn°rLi°
(
log_fûe
, 
iLi°
, 
	`Temp_œyîM≠
(
F_ãmpM≠
, 
	`Temp_«me
()));

90 
	`Ârötf
(
log_fûe
, "----======before RA=======-----\n");

91 
	`fÊush
(
log_fûe
);

94 
RA_ªsu…
 
ø
 = 
	`RA_ªgAŒoc
(
‰ame
, 
iLi°
);

96 
¥oc
 = 
	`F_¥ocE¡ryExô3
(
‰ame
, 
ø
.
û
);

99 
°rög
 
¥ocName
 = 
	`S_«me
(
	`F_«me
(
‰ame
));

100 
	`Ârötf
(
out
, ".glob»%s\n", 
¥ocName
);

101 
	`Ârötf
(
out
, ".ty≥ %s, @fun˘i⁄\n", 
¥ocName
);

102 
	`Ârötf
(
out
, "%s:\n", 
¥ocName
);

106 
	`Ârötf
(
out
, "%s", 
¥oc
->
¥ﬁog
);

107 
	`AS_¥ötIn°rLi°
 (
out
, 
¥oc
->
body
,

108 
	`Temp_œyîM≠
(
F_ãmpM≠
, 
ø
.
cﬁ‹ög
));

109 
	`Ârötf
(
out
, "%s\n", 
¥oc
->
ïûog
);

111 
	}
}

113 
	$doSå
(
FILE
 *
out
, 
Temp_œbñ
 
œbñ
, 
°rög
 
°r
) {

114 
	`Ârötf
(
out
, ".section .rodata\n");

115 
	`Ârötf
(
out
, ".%s:\n", 
	`S_«me
(
œbñ
));

117 
Àngth
 = *(*)
°r
;

118 
Àngth
 =Üength + 4;

120 
	`Ârötf
(
out
, ".string \"");

121 
i
 = 0;

122 ; 
i
 < 
Àngth
; i++) {

123 
	`Ârötf
(
out
, "%c", 
°r
[
i
]);

125 
	`Ârötf
(
out
, "\"\n");

128 
	}
}

130 
	$maö
(
¨gc
, 
°rög
 *
¨gv
)

132 
A_exp
 
absyn_roŸ
;

133 
S_èbÀ
 
ba£_ív
, 
ba£_ãnv
;

134 
F_‰agLi°
 
‰ags
;

135 
outfûe
[100];

136 
FILE
 *
out
 = 
°dout
;

138 i‡(
¨gc
==2) {

142 
absyn_roŸ
 = 
	`∑r£
(
¨gv
[1]);

143 i‡(!
absyn_roŸ
)

147 
	`¥_exp
(
out
, 
absyn_roŸ
, 0);

148 
	`Ârötf
(
out
, "\n");

159 
‰ags
 = 
	`SEM_å™sProg
(
absyn_roŸ
);

160 i‡(
™yEº‹s
)  1;

163 
	`•rötf
(
outfûe
, "%s.s", 
¨gv
[1]);

164 
out
 = 
	`f›í
(
outfûe
, "w");

166 
	`Ârötf
(
out
, ".text\n");

167 ;
‰ags
;‰ags=‰ags->
èû
)

168 i‡(
‰ags
->
hód
->
köd
 =
F_¥ocFøg
) {

169 
	`doProc
(
out
, 
‰ags
->
hód
->
u
.
¥oc
.
‰ame
, føgs->hód->u.¥oc.
body
);

171 i‡(
‰ags
->
hód
->
köd
 =
F_°rögFøg
)

172 
	`doSå
(
out
, 
‰ags
->
hód
->
u
.
°rögg
.
œbñ
, føgs->hód->u.°rögg.
°r
);

174 
	`f˛o£
(
out
);

177 
	`EM_îr‹
(0,"usage:Åiger file.tig");

179 
	}
}

	@parse.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

8 
	~"utû.h
"

9 
	~"symbﬁ.h
"

10 
	~"ty≥s.h
"

11 
	~"absyn.h
"

12 
	~"îr‹msg.h
"

13 
	~"ãmp.h
"

14 
	~"åì.h
"

15 
	~"as£m.h
"

16 
	~"‰ame.h
"

17 
	~"å™¶©e.h
"

18 
	~"ív.h
"

19 
	~"£m™t.h
"

20 
	~"∑r£.h
"

22 
yy∑r£
();

23 
A_exp
 
absyn_roŸ
;

27 
A_exp
 
	$∑r£
(
°rög
 
‚ame
)

28 {
	`EM_ª£t
(
‚ame
);

29 i‡(
	`yy∑r£
() == 0)

30  
absyn_roŸ
;

32 
	`exô
(123);

33  
NULL
;

36 
	}
}

	@parse.h

3 #i‚de‡
PARSE_H


4 
	#PARSR_H


	)

6 
A_exp
 
∑r£
(
°rög
 
‚ame
);

	@prabsyn.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"absyn.h
"

10 
	~"¥absyn.h
"

13 
¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
);

14 
¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
);

15 
¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
);

16 
¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
);

17 
¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
);

18 
¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
);

19 
¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
);

20 
¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
);

21 
¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
);

22 
¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
);

23 
¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
);

24 
¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
);

25 
¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
);

27 
	$ödít
(
FILE
 *
out
, 
d
) {

28 
i
;

29 
i
 = 0; i <
d
; i++Ë
	`Ârötf
(
out
, " ");

30 
	}
}

33 
	$¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
) {

34 
	`ödít
(
out
, 
d
);

35 
v
->
köd
) {

36 
A_sim∂eV¨
:

37 
	`Ârötf
(
out
, "sim∂eV¨(%s)", 
	`S_«me
(
v
->
u
.
sim∂e
));

39 
A_fõldV¨
:

40 
	`Ârötf
(
out
, "%s\n", "fieldVar(");

41 
	`¥_v¨
(
out
, 
v
->
u
.
fõld
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

42 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s)", 
	`S_«me
(
v
->
u
.
fõld
.
sym
));

44 
A_subs¸ùtV¨
:

45 
	`Ârötf
(
out
, "%s\n", "subscriptVar(");

46 
	`¥_v¨
(
out
, 
v
->
u
.
subs¸ùt
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

47 
	`¥_exp
(
out
, 
v
->
u
.
subs¸ùt
.
exp
, 
d
+1); 
	`Ârötf
(out, "%s", ")");

50 
	`as£π
(0);

52 
	}
}

54 
	g°r_›î
[][12] = {

58 
	$¥_›î
(
FILE
 *
out
, 
A_›î
 
d
) {

59 
	`Ârötf
(
out
, "%s", 
°r_›î
[
d
]);

60 
	}
}

63 
	$¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
) {

64 
	`ödít
(
out
, 
d
);

65 
v
->
köd
) {

66 
A_v¨Exp
:

67 
	`Ârötf
(
out
, "v¨Exp(\n"); 
	`¥_v¨
(out, 
v
->
u
.
v¨
, 
d
+1);

68 
	`Ârötf
(
out
, "%s", ")");

70 
A_nûExp
:

71 
	`Ârötf
(
out
, "nilExp()");

73 
A_ötExp
:

74 
	`Ârötf
(
out
, "ötExp(%d)", 
v
->
u
.
öâ
);

76 
A_°rögExp
:

77 
	`Ârötf
(
out
, "°rögExp(%s)", 
v
->
u
.
°rögg
);

79 
A_ˇŒExp
:

80 
	`Ârötf
(
out
, "ˇŒExp(%s,\n", 
	`S_«me
(
v
->
u
.
ˇŒ
.
func
));

81 
	`¥_expLi°
(
out
, 
v
->
u
.
ˇŒ
.
¨gs
, 
d
+1); 
	`Ârötf
(out, ")");

83 
A_›Exp
:

84 
	`Ârötf
(
out
, "opExp(\n");

85 
	`ödít
(
out
, 
d
+1); 
	`¥_›î
(out, 
v
->
u
.
›
.
›î
); 
	`Ârötf
(out, ",\n");

86 
	`¥_exp
(
out
, 
v
->
u
.
›
.
À·
, 
d
+1); 
	`Ârötf
(out, ",\n");

87 
	`¥_exp
(
out
, 
v
->
u
.
›
.
right
, 
d
+1); 
	`Ârötf
(out, ")");

89 
A_ªc‹dExp
:

90 
	`Ârötf
(
out
, "ªc‹dExp(%s,\n", 
	`S_«me
(
v
->
u
.
ªc‹d
.
typ
));

91 
	`¥_efõldLi°
(
out
, 
v
->
u
.
ªc‹d
.
fõlds
, 
d
+1); 
	`Ârötf
(out, ")");

93 
A_£qExp
:

94 
	`Ârötf
(
out
, "seqExp(\n");

95 
	`¥_expLi°
(
out
, 
v
->
u
.
£q
, 
d
+1); 
	`Ârötf
(out, ")");

97 
A_assignExp
:

98 
	`Ârötf
(
out
, "assignExp(\n");

99 
	`¥_v¨
(
out
, 
v
->
u
.
assign
.
v¨
, 
d
+1); 
	`Ârötf
(out, ",\n");

100 
	`¥_exp
(
out
, 
v
->
u
.
assign
.
exp
, 
d
+1); 
	`Ârötf
(out, ")");

102 
A_ifExp
:

103 
	`Ârötf
(
out
, "iffExp(\n");

104 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

105 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
thí
, 
d
+1);

106 i‡(
v
->
u
.
iff
.
ñ£e
) {

107 
	`Ârötf
(
out
, ",\n");

108 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ñ£e
, 
d
+1);

110 
	`Ârötf
(
out
, ")");

112 
A_whûeExp
:

113 
	`Ârötf
(
out
, "whileExp(\n");

114 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

115 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
body
, 
d
+1); 
	`Ârötf
(out, ")\n");

117 
A_f‹Exp
:

118 
	`Ârötf
(
out
, "f‹Exp(%s,\n", 
	`S_«me
(
v
->
u
.
f‹r
.
v¨
));

119 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
lo
, 
d
+1); 
	`Ârötf
(out, ",\n");

120 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
hi
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

121 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
body
, 
d
+1); 
	`Ârötf
(out, ",\n");

122 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
f‹r
.
esˇ≥
 ? "TRUE)" : "FALSE)");

124 
A_bªakExp
:

125 
	`Ârötf
(
out
, "breakExp()");

127 
A_ÀtExp
:

128 
	`Ârötf
(
out
, "letExp(\n");

129 
	`¥_decLi°
(
out
, 
v
->
u
.
Àt
.
decs
, 
d
+1); 
	`Ârötf
(out, ",\n");

130 
	`¥_exp
(
out
, 
v
->
u
.
Àt
.
body
, 
d
+1); 
	`Ârötf
(out, ")");

132 
A_¨øyExp
:

133 
	`Ârötf
(
out
, "¨øyExp(%s,\n", 
	`S_«me
(
v
->
u
.
¨øy
.
typ
));

134 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
size
, 
d
+1); 
	`Ârötf
(out, ",\n");

135 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
öô
, 
d
+1); 
	`Ârötf
(out, ")");

138 
	`as£π
(0);

140 
	}
}

142 
	$¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
) {

143 
	`ödít
(
out
, 
d
);

144 
v
->
köd
) {

145 
A_fun˘i⁄Dec
:

146 
	`Ârötf
(
out
, "functionDec(\n");

147 
	`¥_fundecLi°
(
out
, 
v
->
u
.
fun˘i⁄
, 
d
+1); 
	`Ârötf
(out, ")");

149 
A_v¨Dec
:

150 
	`Ârötf
(
out
, "v¨Dec(%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.var));

151 i‡(
v
->
u
.
v¨
.
typ
) {

152 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.
typ
));

154 
	`¥_exp
(
out
, 
v
->
u
.
v¨
.
öô
, 
d
+1); 
	`Ârötf
(out, ",\n");

155 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
v¨
.
esˇ≥
 ? "TRUE)" : "FALSE)");

157 
A_ty≥Dec
:

158 
	`Ârötf
(
out
, "typeDec(\n");

159 
	`¥_«mëyLi°
(
out
, 
v
->
u
.
ty≥
, 
d
+1); 
	`Ârötf
(out, ")");

162 
	`as£π
(0);

164 
	}
}

166 
	$¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
) {

167 
	`ödít
(
out
, 
d
);

168 
v
->
köd
) {

169 
A_«meTy
:

170 
	`Ârötf
(
out
, "«meTy(%s)", 
	`S_«me
(
v
->
u
.
«me
));

172 
A_ªc‹dTy
:

173 
	`Ârötf
(
out
, "recordTy(\n");

174 
	`¥_fõldLi°
(
out
, 
v
->
u
.
ªc‹d
, 
d
+1); 
	`Ârötf
(out, ")");

176 
A_¨øyTy
:

177 
	`Ârötf
(
out
, "¨øyTy(%s)", 
	`S_«me
(
v
->
u
.
¨øy
));

180 
	`as£π
(0);

182 
	}
}

184 
	$¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
) {

185 
	`ödít
(
out
, 
d
);

186 
	`Ârötf
(
out
, "fõld(%s,\n", 
	`S_«me
(
v
->
«me
));

187 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
typ
));

188 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
esˇ≥
 ? "TRUE)" : "FALSE)");

189 
	}
}

191 
	$¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
) {

192 
	`ödít
(
out
, 
d
);

193 i‡(
v
) {

194 
	`Ârötf
(
out
, "fieldList(\n");

195 
	`¥_fõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

196 
	`¥_fõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

198 
	`Ârötf
(
out
, "fieldList()");

199 
	}
}

201 
	$¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
) {

202 
	`ödít
(
out
, 
d
);

203 i‡(
v
) {

204 
	`Ârötf
(
out
, "expList(\n");

205 
	`¥_exp
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

206 
	`¥_expLi°
(
out
, 
v
->
èû
, 
d
+1);

207 
	`Ârötf
(
out
, ")");

209 
	`Ârötf
(
out
, "expList()");

211 
	}
}

213 
	$¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
) {

214 
	`ödít
(
out
, 
d
);

215 
	`Ârötf
(
out
, "fundec(%s,\n", 
	`S_«me
(
v
->
«me
));

216 
	`¥_fõldLi°
(
out
, 
v
->
∑øms
, 
d
+1); 
	`Ârötf
(out, ",\n");

217 i‡(
v
->
ªsu…
) {

218 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
ªsu…
));

220 
	`¥_exp
(
out
, 
v
->
body
, 
d
+1); 
	`Ârötf
(out, ")");

221 
	}
}

223 
	$¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
) {

224 
	`ödít
(
out
, 
d
);

225 i‡(
v
) {

226 
	`Ârötf
(
out
, "fundecList(\n");

227 
	`¥_fundec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

228 
	`¥_fundecLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

230 
	`Ârötf
(
out
, "fundecList()");

231 
	}
}

233 
	$¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
) {

234 
	`ödít
(
out
, 
d
);

235 i‡(
v
) {

236 
	`Ârötf
(
out
, "decList(\n");

237 
	`¥_dec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

238 
	`¥_decLi°
(
out
, 
v
->
èû
, 
d
+1);

239 
	`Ârötf
(
out
, ")");

241 
	`Ârötf
(
out
, "decList()");

243 
	}
}

245 
	$¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
) {

246 
	`ödít
(
out
, 
d
);

247 
	`Ârötf
(
out
, "«mëy(%s,\n", 
	`S_«me
(
v
->
«me
));

248 
	`¥_ty
(
out
, 
v
->
ty
, 
d
+1); 
	`Ârötf
(out, ")");

249 
	}
}

251 
	$¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
) {

252 
	`ödít
(
out
, 
d
);

253 i‡(
v
) {

254 
	`Ârötf
(
out
, "nametyList(\n");

255 
	`¥_«mëy
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

256 
	`¥_«mëyLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

258 
	`Ârötf
(
out
, "nametyList()");

259 
	}
}

261 
	$¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
) {

262 
	`ödít
(
out
, 
d
);

263 i‡(
v
) {

264 
	`Ârötf
(
out
, "efõld(%s,\n", 
	`S_«me
(
v
->
«me
));

265 
	`¥_exp
(
out
, 
v
->
exp
, 
d
+1); 
	`Ârötf
(out, ")");

267 
	`Ârötf
(
out
, "efield()");

268 
	}
}

270 
	$¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
) {

271 
	`ödít
(
out
, 
d
);

272 i‡(
v
) {

273 
	`Ârötf
(
out
, "efieldList(\n");

274 
	`¥_efõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

275 
	`¥_efõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

277 
	`Ârötf
(
out
, "efieldList()");

278 
	}
}

	@prabsyn.h

3 #i‚de‡
PRABSYN_H


4 
	#PRABSYN_H


	)

6 
¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
);

	@printtree.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ãmp.h
"

9 
	~"åì.h
"

10 
	~"¥öâªe.h
"

13 
¥_åì_exp
(
FILE
 *
out
, 
T_exp
 
exp
, 
d
);

15 
	$ödít
(
FILE
 *
out
, 
d
) {

16 
i
;

17 
i
 = 0; i <
d
; i++Ë
	`Ârötf
(
out
, " ");

18 
	}
}

20 
	gbö_›î
[][12] = {

24 
	gªl_›î
[][12] = {

27 
	$¥_°m
(
FILE
 *
out
, 
T_°m
 
°m
, 
d
)

29 
°m
->
köd
) {

30 
T_SEQ
:

31 
	`ödít
(
out
,
d
);

32 
	`Ârötf
(
out
, "SEQ(\n"); 
	`¥_°m
(out, 
°m
->
u
.
SEQ
.
À·
,
d
+1); fprintf(out, ",\n");

33 
	`¥_°m
(
out
, 
°m
->
u
.
SEQ
.
right
,
d
+1); 
	`Ârötf
(out, ")");

35 
T_LABEL
:

36 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "LABEL %s", 
	`S_«me
(
°m
->
u
.
LABEL
));

38 
T_JUMP
:

39 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "JUMP(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
JUMP
.
exp
,d+1);

40 
	`Ârötf
(
out
, ")");

42 
T_CJUMP
:

43 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CJUMP(%s,\n", 
ªl_›î
[
°m
->
u
.
CJUMP
.
›
]);

44 
	`¥_åì_exp
(
out
, 
°m
->
u
.
CJUMP
.
À·
,
d
+1); 
	`Ârötf
(out, ",\n");

45 
	`¥_åì_exp
(
out
, 
°m
->
u
.
CJUMP
.
right
,
d
+1); 
	`Ârötf
(out, ",\n");

46 
	`ödít
(
out
,
d
+1); 
	`Ârötf
(out, "%s,", 
	`S_«me
(
°m
->
u
.
CJUMP
.
åue
));

47 
	`Ârötf
(
out
, "%s", 
	`S_«me
(
°m
->
u
.
CJUMP
.
Ál£
)); fprintf(out, ")");

49 
T_MOVE
:

50 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "MOVE(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
MOVE
.
d°
,d+1);

51 
	`Ârötf
(
out
, ",\n");

52 
	`¥_åì_exp
(
out
, 
°m
->
u
.
MOVE
.
§c
,
d
+1); 
	`Ârötf
(out, ")");

54 
T_EXP
:

55 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "EXP(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
EXP
,d+1);

56 
	`Ârötf
(
out
, ")");

59 
	}
}

61 
	$¥_åì_exp
(
FILE
 *
out
, 
T_exp
 
exp
, 
d
)

63 
exp
->
köd
) {

64 
T_BINOP
:

65 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "BINOP(%s,\n", 
bö_›î
[
exp
->
u
.
BINOP
.
›
]);

66 
	`¥_åì_exp
(
out
, 
exp
->
u
.
BINOP
.
À·
,
d
+1); 
	`Ârötf
(out, ",\n");

67 
	`¥_åì_exp
(
out
, 
exp
->
u
.
BINOP
.
right
,
d
+1); 
	`Ârötf
(out, ")");

69 
T_MEM
:

70 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "MEM");

71 
	`Ârötf
(
out
, "(\n"); 
	`¥_åì_exp
(out, 
exp
->
u
.
MEM
,
d
+1); fprintf(out, ")");

73 
T_TEMP
:

74 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "TEMPÅ%s",

75 
	`Temp_look
(
	`Temp_«me
(), 
exp
->
u
.
TEMP
));

77 
T_ESEQ
:

78 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "ESEQ(\n"); 
	`¥_°m
(out, 
exp
->
u
.
ESEQ
.
°m
,d+1);

79 
	`Ârötf
(
out
, ",\n");

80 
	`¥_åì_exp
(
out
, 
exp
->
u
.
ESEQ
.exp,
d
+1); 
	`Ârötf
(out, ")");

82 
T_NAME
:

83 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "NAME %s", 
	`S_«me
(
exp
->
u
.
NAME
));

85 
T_CONST
:

86 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CONST %d", 
exp
->
u
.
CONST
);

88 
T_CALL
:

89 {
T_expLi°
 
¨gs
 = 
exp
->
u
.
CALL
.args;

90 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CALL(\n"); 
	`¥_åì_exp
(out, 
exp
->
u
.
CALL
.
fun
,d+1);

91 ;
¨gs
;árgs˜rgs->
èû
) {

92 
	`Ârötf
(
out
, ",\n"); 
	`¥_åì_exp
(out, 
¨gs
->
hód
,
d
+2);

94 
	`Ârötf
(
out
, ")");

98 
	}
}

100 
	$¥ötStmLi°
 (
FILE
 *
out
, 
T_°mLi°
 
°mLi°
)

102 ; 
°mLi°
; stmLi°=°mLi°->
èû
) {

103 
	`¥_°m
(
out
, 
°mLi°
->
hód
,0); 
	`Ârötf
(out, "\n");

105 
	}
}

	@printtree.h

1 #i‚de‡
PRINT_TREE_H


2 
	#PRINT_TREE_H


	)

5 
¥ötStmLi°
 (
FILE
 *
out
, 
T_°mLi°
 
°mLi°
) ;

	@regalloc.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

6 
	~"absyn.h
"

7 
	~"as£m.h
"

8 
	~"‰ame.h
"

9 
	~"gøph.h
"

10 
	~"livíess.h
"

11 
	~"cﬁ‹.h
"

12 
	~"ªgÆloc.h
"

13 
	~"èbÀ.h
"

14 
	~"Êowgøph.h
"

16 
	#K
 6

18 * 
ªg_«mes
[7] = {"unu£d", "%óx", "%ebx", "%ecx", "%edx", "%esi", "%edi"};

	)

22 
G_nodeLi°
 
	g¥ecﬁ‹ed
;

23 
G_nodeLi°
 
	göôül
;

24 
G_nodeLi°
 
	gsim∂ifyW‹kli°
;

25 
G_nodeLi°
 
	g‰ìzeW‹kli°
;

26 
G_nodeLi°
 
	g•ûlW‹kli°
;

27 
G_nodeLi°
 
	g•ûÀdNodes
;

28 
G_nodeLi°
 
	gcﬂÀs˚dNodes
;

29 
G_nodeLi°
 
	gcﬁ‹edNodes
;

30 
G_nodeLi°
 
	g£À˘Sèck
;

33 
Live_moveLi°
 
	gcﬂÀs˚dMoves
;

34 
Live_moveLi°
 
	gc⁄°øöedMoves
;

35 
Live_moveLi°
 
	g‰ozíMoves
;

36 
Live_moveLi°
 
	gw‹kli°Moves
;

37 
Live_moveLi°
 
	ga˘iveMoves
;

39 
boﬁ
 * 
	gadjSë
;

40 
G_èbÀ
 
	gadjLi°
;

41 
G_èbÀ
 
	gdegªe
;

42 
G_èbÀ
 
	gmoveLi°
;

43 
G_èbÀ
 
	gÆüs
;

44 
G_èbÀ
 
	gcﬁ‹
;

47 
G_èbÀ
 
	g•ûl_¥i‹ôy
;

50 
G_gøph
 
	gc⁄Êi˘_gøph
;

53 
	$Buûd
(
Live_gøph
 
lg
){

55 
adjSë
 = 
lg
.
adj_m≠
;

56 
•ûl_¥i‹ôy
 = 
lg
.spill_priority;

57 
c⁄Êi˘_gøph
 = 
lg
.
gøph
;

60 
degªe
 = 
	`G_em±y
();

61 
Æüs
 = 
	`G_em±y
();

62 
cﬁ‹
 = 
	`G_em±y
();

63 
adjLi°
 = 
	`G_em±y
();

66 
G_nodeLi°
 
Æl_nodes
 = 
	`G_nodes
(
lg
.
gøph
);

67 ; 
Æl_nodes
 !
NULL
;áŒ_node†Æl_nodes->
èû
){

69 
G_node
 
cur_node
 = 
Æl_nodes
->
hód
;

71 *
d
 = (*)
	`checked_mÆloc
(());

72 
G_nodeLi°
 
succ_li°
 = 
	`G_succ
(
cur_node
);

73 
G_nodeLi°
 
adj_nodes
 = 
succ_li°
;

74 
	`G_íãr
(
adjLi°
, 
cur_node
, 
adj_nodes
);

76 ; 
succ_li°
; succ_li° = succ_li°->
èû
){

77 *
d
 = *d + 1;

79 
	`G_íãr
(
degªe
, 
cur_node
, 
d
);

83 *
c
 = (*Ë
	`checked_mÆloc
(());

84 
Temp_ãmp
 
ãmp
 = 
	`Live_gãmp
(
cur_node
);

85 if(
ãmp
 =
	`F_óx
()){

86 *
c
 = 1;

87 
¥ecﬁ‹ed
 = 
	`G_NodeLi°
(
cur_node
,Örecolored);

88 }if(
ãmp
 =
	`F_ebx
()){

89 *
c
 = 2;

90 
¥ecﬁ‹ed
 = 
	`G_NodeLi°
(
cur_node
,Örecolored);

91 }if(
ãmp
 =
	`F_ecx
()){

92 *
c
 = 3;

93 
¥ecﬁ‹ed
 = 
	`G_NodeLi°
(
cur_node
,Örecolored);

94 }if(
ãmp
 =
	`F_edx
()){

95 *
c
 = 4;

96 
¥ecﬁ‹ed
 = 
	`G_NodeLi°
(
cur_node
,Örecolored);

97 }if(
ãmp
 =
	`F_esi
()){

98 *
c
 = 5;

99 
¥ecﬁ‹ed
 = 
	`G_NodeLi°
(
cur_node
,Örecolored);

100 }if(
ãmp
 =
	`F_edi
()){

101 *
c
 = 6;

102 
¥ecﬁ‹ed
 = 
	`G_NodeLi°
(
cur_node
,Örecolored);

104 *
c
 = 0;

105 
öôül
 = 
	`G_NodeLi°
(
cur_node
, initial);

107 
	`G_íãr
(
cﬁ‹
, 
cur_node
, 
c
);

110 
	`G_íãr
(
Æüs
, 
cur_node
, cur_node);

113 
Live_moveLi°
 
moves
 = 
lg
.moves;

114 
moveLi°
 = 
	`G_em±y
();

115 
Live_moveLi°
 
ªœã_move
 = 
NULL
;

116 
moves
){

117 if((
moves
->
§c
 =
cur_node
Ë|| (moves->
d°
 == cur_node)){

119 
ªœã_move
 = 
	`Live_MoveLi°
(
moves
->
§c
, moves->
d°
,Ñelate_move);

121 
moves
 = moves->
èû
;

123 
	`G_íãr
(
moveLi°
, 
cur_node
, 
ªœã_move
);

126 
G_nodeLi°
 
•ûlW‹kli°
 = 
NULL
;

127 
G_nodeLi°
 
•ûÀdNodes
 = 
NULL
;

128 
G_nodeLi°
 
cﬂÀs˚dNodes
 = 
NULL
;

129 
G_nodeLi°
 
cﬁ‹edNodes
 = 
NULL
;

130 
G_nodeLi°
 
£À˘Sèck
 = 
NULL
;

132 
Live_moveLi°
 
cﬂÀs˚dMoves
 = 
NULL
;

133 
Live_moveLi°
 
c⁄°øöedMoves
 = 
NULL
;

134 
Live_moveLi°
 
‰ozíMoves
 = 
NULL
;

135 
Live_moveLi°
 
w‹kli°Moves
 = 
NULL
;

136 
Live_moveLi°
 
a˘iveMoves
 = 
NULL
;

137 
	}
}

139 
Live_moveLi°
 
	$NodeMoves
(
G_node
 
n
){

140 
Live_moveLi°
 
ªsu…
 = 
NULL
;

141 
Live_moveLi°
 
moves_uni⁄
 = 
	`Live_Uni⁄_moveLi°
(
a˘iveMoves
, 
w‹kli°Moves
);

142 
Live_moveLi°
 
moveLi°_n
 = (Live_moveLi°Ë
	`G_look
(
moveLi°
, 
n
);

143 
ªsu…
 = 
	`Live_I¡î£˘_moveLi°
(
moveLi°_n
, 
moves_uni⁄
);

144  
ªsu…
;

145 
	}
}

147 
boﬁ
 
	$MoveRñ©ed
(
G_node
 
n
){

148  (
	`NodeMoves
(
n
Ë!
NULL
);

149 
	}
}

151 
	$MakeW‹kli°
(){

152 ; 
öôül
 !
NULL
; inôü»öôül->
èû
){

153 
G_node
 
n
 = 
öôül
->
hód
;

154 
d_n
 = *(*)
	`G_look
(
degªe
, 
n
);

155 if(
d_n
 >
K
){

156 
•ûlW‹kli°
 = 
	`G_NodeLi°
(
n
, spillWorklist);

157 }if(
	`MoveRñ©ed
(
n
)){

158 
‰ìzeW‹kli°
 = 
	`G_NodeLi°
(
n
, freezeWorklist);

160 
sim∂ifyW‹kli°
 = 
	`G_NodeLi°
(
n
, simplifyWorklist);

164 
	}
}

166 
	$E«bÀMoves
(
G_nodeLi°
 
nodes
){

167 ; 
nodes
 !
NULL
;Çode†nodes->
èû
){

168 
G_node
 
n
 = 
nodes
->
hód
;

169 
Live_moveLi°
 
nodeMoves
 = 
	`NodeMoves
(
n
);

170 ; 
nodeMoves
 !
NULL
;ÇodeMove†nodeMoves->
èû
){

171 if(
	`Live_In_moveLi°
(
nodeMoves
->
§c
,ÇodeMoves->
d°
, 
a˘iveMoves
)){

172 
a˘iveMoves
 = 
	`Live_Sub_moveLi°
(activeMoves,

173 
	`Live_MoveLi°
(
nodeMoves
->
§c
,ÇodeMoves->
d°
, 
NULL
)

175 
w‹kli°Moves
 = 
	`Live_MoveLi°
(
nodeMoves
->
§c
,ÇodeMoves->
d°
, worklistMoves);

179 
	}
}

182 
G_nodeLi°
 
	$Adja˚¡
(
G_node
 
n
){

183 
G_nodeLi°
 
u
 = 
	`G_Uni⁄_nodeLi°
(
£À˘Sèck
, 
cﬂÀs˚dNodes
);

184 
G_nodeLi°
 
adjLi°_n
 = (G_nodeLi°Ë
	`G_look
(
adjLi°
, 
n
);

185  
	`G_Sub_nodeLi°
(
adjLi°_n
, 
u
);

186 
	}
}

188 
	$De¸emítDegªe
(
G_node
 
n
){

189 *
d_n
 = (*Ë
	`G_look
(
degªe
, 
n
);

190 
deg
 = *
d_n
;

191 *
d_n
 = 
deg
 -1;

192 if(
deg
 =
K
){

193 
	`E«bÀMoves
(
	`G_NodeLi°
(
n
, 
	`Adja˚¡
(n)));

194 
•ûlW‹kli°
 = 
	`G_Sub_nodeLi°
(•ûlW‹kli°, 
	`G_NodeLi°
(
n
, 
NULL
));

195 if(
	`MoveRñ©ed
(
n
)){

196 
‰ìzeW‹kli°
 = 
	`G_NodeLi°
(
n
, freezeWorklist);

198 
sim∂ifyW‹kli°
 = 
	`G_NodeLi°
(
n
, simplifyWorklist);

202 
	}
}

206 
	$Sim∂ify
(){

207 
G_node
 
n
 = 
sim∂ifyW‹kli°
->
hód
;

208 
sim∂ifyW‹kli°
 = sim∂ifyW‹kli°->
èû
;

209 
£À˘Sèck
 = 
	`G_NodeLi°
(
n
, selectStack);

210 
G_nodeLi°
 
adj_n
 = 
	`Adja˚¡
(
n
);

211 ; 
adj_n
 !
NULL
;ádj_¿adj_n->
èû
){

212 
G_node
 
m
 = 
adj_n
->
hód
;

213 
	`De¸emítDegªe
(
m
);

216 
	}
}

219 
boﬁ
 
	$if_adj
(
node_key_a
, 
node_key_b
){

220 
boﬁ
 * 
adj
 = (
adjSë
 + 
	`G_gøph_nodecou¡
(
c⁄Êi˘_gøph
Ë* 
node_key_a
 + 
node_key_b
);

221  *
adj
;

222 
	}
}

224 
boﬁ
 * 
	$adj_˚Œ
(
node_key_a
, 
node_key_b
){

225 
boﬁ
 * 
˚Œ
 = (
adjSë
 + 
	`G_gøph_nodecou¡
(
c⁄Êi˘_gøph
Ë* 
node_key_a
 + 
node_key_b
);

226  
˚Œ
;

227 
	}
}

229 
	$AddEdge
(
G_node
 
u
, G_nodê
v
){

230 
boﬁ
 
adj_uv
 = 
	`if_adj
(
	`G_node_key
(
u
), G_node_key(
v
));

231 if((!
adj_uv
Ë&& (
u
 !
v
)){

232 
boﬁ
 * 
˚Œ_uv
 = 
	`adj_˚Œ
(
	`G_node_key
(
u
), G_node_key(
v
));

233 
boﬁ
 * 
˚Œ_vu
 = 
	`adj_˚Œ
(
	`G_node_key
(
v
), G_node_key(
u
));

234 *
˚Œ_uv
 = 
TRUE
;

235 *
˚Œ_vu
 = 
TRUE
;

237 
G_nodeLi°
 
adj_li°_u
 = (G_nodeLi°Ë
	`G_look
(
adjLi°
, 
u
);

238 
G_nodeLi°
 
adj_li°_v
 = (G_nodeLi°Ë
	`G_look
(
adjLi°
, 
v
);

239 *
degªe_u
 = (*Ë
	`G_look
(
degªe
, 
u
);

240 *
degªe_v
 = (*Ë
	`G_look
(
degªe
, 
v
);

241 if(!
	`G_In_nodeLi°
(
u
, 
¥ecﬁ‹ed
)){

242 
	`G_íãr
(
adjLi°
, 
u
, 
	`G_NodeLi°
(
v
, 
adj_li°_u
));

243 *
degªe_u
 = *degree_u + 1;

245 if(!
	`G_In_nodeLi°
(
v
, 
¥ecﬁ‹ed
)){

246 
	`G_íãr
(
adjLi°
, 
v
, 
	`G_NodeLi°
(
u
, 
adj_li°_v
));

247 *
degªe_v
 = *degree_v + 1;

251 
	}
}

253 
	$Comböe
(
G_node
 
u
, G_nodê
v
){

254 if(
	`G_In_nodeLi°
(
v
, 
‰ìzeW‹kli°
)){

255 
‰ìzeW‹kli°
 = 
	`G_Sub_nodeLi°
(‰ìzeW‹kli°, 
	`G_NodeLi°
(
v
, 
NULL
));

257 
•ûlW‹kli°
 = 
	`G_Sub_nodeLi°
(•ûlW‹kli°, 
	`G_NodeLi°
(
v
, 
NULL
));

259 
cﬂÀs˚dNodes
 = 
	`G_NodeLi°
(
v
, coalescedNodes);

260 
	`G_íãr
(
Æüs
, 
v
, 
u
);

261 
Live_moveLi°
 
u_moveLi°
 = (Live_moveLi°Ë
	`G_look
(
moveLi°
, 
u
);

262 
Live_moveLi°
 
v_moveLi°
 = (Live_moveLi°Ë
	`G_look
(
moveLi°
, 
v
);

263 
	`G_íãr
(
moveLi°
, 
u
, 
	`Live_Uni⁄_moveLi°
(
u_moveLi°
, 
v_moveLi°
));

264 
	`E«bÀMoves
(
	`G_NodeLi°
(
v
, 
NULL
));

266 
G_nodeLi°
 
v_adj_li°
 = 
	`Adja˚¡
(
v
);

267 ; 
v_adj_li°
 !
NULL
; v_adj_li° = v_adj_li°->
èû
){

268 
G_node
 
t
 = 
v_adj_li°
->
hód
;

269 
	`AddEdge
(
t
, 
u
);

270 
	`De¸emítDegªe
(
t
);

272 
d_u
 = *(*)
	`G_look
(
degªe
, 
u
);

273 if(
d_u
 >
K
 && 
	`G_In_nodeLi°
(
u
, 
‰ìzeW‹kli°
)){

274 
‰ìzeW‹kli°
 = 
	`G_Sub_nodeLi°
(‰ìzeW‹kli°, 
	`G_NodeLi°
(
u
, 
NULL
));

275 
•ûlW‹kli°
 = 
	`G_NodeLi°
(
u
, spillWorklist);

277 
	}
}

279 
boﬁ
 
	$C⁄£rv©ive
(
G_nodeLi°
 
li°
){

280 
k
 = 0;

281 ; 
li°
 !
NULL
;Üi° =Üi°->
èû
){

282 
G_node
 
node
 = 
li°
->
hód
;

283 
d_n
 = *(*Ë
	`G_look
(
degªe
, 
node
);

284 if(
d_n
 >
K
)

285 
k
 ++;

287  (
k
 < 
K
);

288 
	}
}

290 
boﬁ
 
	$OK
(
G_node
 
l
, G_nodê
r
){

291 
d_l
 = *(*Ë
	`G_look
(
degªe
, 
l
);

292 
boﬁ
 
adj_Ã
 = 
	`if_adj
(
	`G_node_key
(
l
), G_node_key(
r
));

293  (
d_l
 < 
K
 || 
	`G_In_nodeLi°
(
l
, 
¥ecﬁ‹ed
Ë|| 
adj_Ã
);

294 
	}
}

296 
	$AddW‹kLi°
(
G_node
 
n
){

297 
degªe_n
 = *(*)
	`G_look
(
degªe
, 
n
);

298 if(!
	`G_In_nodeLi°
(
n
, 
¥ecﬁ‹ed
Ë&& !
	`MoveRñ©ed
“Ë&& (
degªe_n
 < 
K
)){

299 
‰ìzeW‹kli°
 = 
	`G_Sub_nodeLi°
(‰ìzeW‹kli°, 
	`G_NodeLi°
(
n
, 
NULL
));

300 
sim∂ifyW‹kli°
 = 
	`G_NodeLi°
(
n
, simplifyWorklist);

302 
	}
}

304 
G_node
 
	$GëAlüs
(
G_node
 
n
)

306 
G_node
 
a
 = (G_nodeË
	`G_look
(
Æüs
, 
n
);

307 i‡(
a
 !
n
) {

308 
a
 = 
	`GëAlüs
(a);

310  
a
;

311 
	}
}

313 
	$CﬂÀs˚
(){

315 
G_node
 
§c
 = 
w‹kli°Moves
->src;

316 
G_node
 
d°
 = 
w‹kli°Moves
->dst;

317 
G_node
 
x
 = 
	`GëAlüs
(
§c
);

318 
G_node
 
y
 = 
	`GëAlüs
(
d°
);

319 
G_node
 
u
, 
v
;

320 if(
	`G_In_nodeLi°
(
y
, 
¥ecﬁ‹ed
)){

321 
u
 = 
y
;

322 
v
 = 
x
;

324 
u
 = 
x
;

325 
v
 = 
y
;

327 
w‹kli°Moves
 = w‹kli°Moves->
èû
;

329 
boﬁ
 
adj_uv
 = 
	`if_adj
(
	`G_node_key
(
u
), G_node_key(
v
));

330 if(
u
 =
v
){

331 
cﬂÀs˚dMoves
 = 
	`Live_MoveLi°
(
§c
, 
d°
, coalescedMoves);

332 
	`AddW‹kLi°
(
u
);

333 }if(
	`G_In_nodeLi°
(
v
, 
¥ecﬁ‹ed
Ë|| 
adj_uv
){

334 
c⁄°øöedMoves
 = 
	`Live_MoveLi°
(
§c
, 
d°
, constrainedMoves);

335 
	`AddW‹kLi°
(
u
);

336 
	`AddW‹kLi°
(
v
);

338 
boﬁ
 
ok_tu
 = 
TRUE
;

339 
G_nodeLi°
 
adj_li°
 = 
	`Adja˚¡
(
v
);

340 
ok_tu
 && 
adj_li°
 !
NULL
){

341 if(!
	`OK
(
adj_li°
->
hód
, 
u
))

342 
ok_tu
 = 
FALSE
;

343 
adj_li°
 =ádj_li°->
èû
;

345 
G_nodeLi°
 
adj_uni⁄
 = 
	`G_Uni⁄_nodeLi°
(
	`Adja˚¡
(
u
), Adja˚¡(
v
));

346 if((
	`G_In_nodeLi°
(
u
, 
¥ecﬁ‹ed
Ë&& 
ok_tu
)

347 || (!
	`G_In_nodeLi°
(
u
, 
¥ecﬁ‹ed
Ë&& 
	`C⁄£rv©ive
(
adj_uni⁄
))

349 
cﬂÀs˚dMoves
 = 
	`Live_MoveLi°
(
§c
, 
d°
, coalescedMoves);

350 
	`Comböe
(
u
, 
v
);

351 
	`AddW‹kLi°
(
u
);

354 
a˘iveMoves
 = 
	`Live_MoveLi°
(
§c
, 
d°
,áctiveMoves);

357 
	}
}

359 
	$FªezeMoves
(
G_node
 
u
){

360 
Live_moveLi°
 
moves
 = 
	`NodeMoves
(
u
);

361 ; 
moves
; move†moves->
èû
){

362 
G_node
 
x
 = 
moves
->
§c
;

363 
G_node
 
y
 = 
moves
->
d°
;

364 
G_node
 
v
;

365 if(
	`GëAlüs
(
y
Ë=GëAlüs(
u
)){

366 
v
 = 
	`GëAlüs
(
x
);

368 
v
 = 
	`GëAlüs
(
y
);

370 
a˘iveMoves
 = 
	`Live_Sub_moveLi°
◊˘iveMoves, 
	`Live_MoveLi°
(
x
, 
y
, 
NULL
));

371 
‰ozíMoves
 = 
	`Live_MoveLi°
(
x
, 
y
, frozenMoves);

373 
degªe_v
 = *(*)
	`G_look
(
degªe
, 
v
);

374 if(
	`NodeMoves
(
v
Ë=
NULL
 && 
degªe_v
 < 
K
){

375 
‰ìzeW‹kli°
 = 
	`G_Sub_nodeLi°
(‰ìzeW‹kli°, 
	`G_NodeLi°
(
v
, 
NULL
));

376 
sim∂ifyW‹kli°
 = 
	`G_NodeLi°
(
v
, simplifyWorklist);

379 
	}
}

381 
	$Fªeze
(){

382 
G_node
 
u
 = 
‰ìzeW‹kli°
->
hód
;

383 
‰ìzeW‹kli°
 = fªezeW‹kli°->
èû
;

384 
sim∂ifyW‹kli°
 = 
	`G_NodeLi°
(
u
, simplifyWorklist);

385 
	`FªezeMoves
(
u
);

386 
	}
}

388 
	$Sñe˘Spûl
(){

389 
G_node
 
m
 = 
•ûlW‹kli°
->
hód
;

390 
max
 = *(*Ë
	`G_look
(
•ûl_¥i‹ôy
, 
m
);

391 
G_nodeLi°
 
li°
 = 
•ûlW‹kli°
->
èû
;Üist;Üist =Üist->tail){

392 
¥i‹ôy
 = *(*Ë
	`G_look
(
•ûl_¥i‹ôy
, 
li°
->
hód
);

393 if(
¥i‹ôy
 > 
max
){

394 
max
 = 
¥i‹ôy
;

395 
m
 = 
li°
->
hód
;

399 
•ûlW‹kli°
 = 
	`G_Sub_nodeLi°
(•ûlW‹kli°, 
	`G_NodeLi°
(
m
, 
NULL
));

400 
sim∂ifyW‹kli°
 = 
	`G_NodeLi°
(
m
, simplifyWorklist);

401 
	`FªezeMoves
(
m
);

402 
	}
}

404 
	$AssignCﬁ‹s
(){

405 
£À˘Sèck
 !
NULL
){

406 
G_node
 
cur
 = 
£À˘Sèck
->
hód
;

407 
£À˘Sèck
 = sñe˘Sèck->
èû
;

409 
boﬁ
 
u£d
 [
K
 + 1];

410 
i
 = 1; i < 
K
 + 1; i ++){

411 
u£d
[
i
] = 
FALSE
;

413 
G_nodeLi°
 
cur_adj
 = 
	`G_succ
(
cur
);

414 ; 
cur_adj
 !
NULL
; cur_adj = cur_adj->
èû
){

415 
c
 = *(*)
	`G_look
(
cﬁ‹
, 
cur_adj
->
hód
);

416 
u£d
[
c
] = 
TRUE
;

418 
boﬁ
 
assig√d
 = 
FALSE
;

419 
i
 = 1; i < 
K
 + 1; i++){

420 if(!
u£d
[
i
]){

421 *
assign_cﬁ‹
 = (*)
	`G_look
(
cﬁ‹
, 
cur
);

422 *
assign_cﬁ‹
 = 
i
;

423 
assig√d
 = 
TRUE
;

424 
cﬁ‹edNodes
 = 
	`G_NodeLi°
(
cur
, coloredNodes);

427 if(!
assig√d
){

428 
•ûÀdNodes
 = 
	`G_NodeLi°
(
cur
, spilledNodes);

432 
G_nodeLi°
 
cﬂÀs˚d_li°
 = 
cﬂÀs˚dNodes
;

433 ; 
cﬂÀs˚d_li°
 !
NULL
; cﬂÀs˚d_li° = cﬂÀs˚d_li°->
èû
){

434 
G_node
 
Æüs_node
 = (G_node)
	`G_look
(
Æüs
, 
cﬂÀs˚d_li°
->
hód
);

435 
Æüs_cﬁ‹
 = *(*)
	`G_look
(
cﬁ‹
, 
Æüs_node
);

436 *
c
 = (*)
	`G_look
(
cﬁ‹
, 
cﬂÀs˚d_li°
->
hód
);

437 *
c
 = 
Æüs_cﬁ‹
;

440 
	}
}

442 
Temp_ãmpLi°
 * 
	$ö°r_u£
(
AS_ö°r
 
ö°r
){

443 
ö°r
->
köd
){

444 
I_OPER
:

445  &
ö°r
->
u
.
OPER
.
§c
;

446 
I_LABEL
:

447  
NULL
;

448 
I_MOVE
:

449  &
ö°r
->
u
.
MOVE
.
§c
;

451 
	`as£π
(0);

453  
NULL
;

454 
	}
}

456 
Temp_ãmpLi°
 * 
	$ö°r_def
(
AS_ö°r
 
ö°r
){

457 
ö°r
->
köd
){

458 
I_OPER
:

459  &
ö°r
->
u
.
OPER
.
d°
;

460 
I_LABEL
:

461  
NULL
;

462 
I_MOVE
:

463  &
ö°r
->
u
.
MOVE
.
d°
;

465 
	`as£π
(0);

467  
NULL
;

469 
	}
}

471 
	$RewrôeProgøm
(
F_‰ame
 
f
, 
AS_ö°rLi°
 *
ö°r_li°
){

472 
AS_ö°rLi°
 
ªsu…
 = *
ö°r_li°
;

473 
•ûÀdNodes
){

474 
G_node
 
cur
 = 
•ûÀdNodes
->
hód
;

475 
•ûÀdNodes
 = spûÀdNodes->
èû
;

476 
Temp_ãmp
 
•ûl_ãmp
 = 
	`Live_gãmp
(
cur
);

478 
off£t_ö_‰ame
 = 
	`F_Spûl
(
f
);

479 
AS_ö°rLi°
 
œ°_ö°r
 = 
NULL
;

480 
AS_ö°rLi°
 
√xt_ö°r
 = 
NULL
;

481 
AS_ö°rLi°
 
li°
 = 
ªsu…
;

483 
li°
){

484 
√xt_ö°r
 = 
li°
->
èû
;

485 
Temp_ãmpLi°
 *
u£_li°
 = 
	`ö°r_u£
(
li°
->
hód
);

486 
Temp_ãmpLi°
 *
def_li°
 = 
	`ö°r_def
(
li°
->
hód
);

488 if(
u£_li°
 && 
	`Temp_In_ãmpLi°
(
•ûl_ãmp
, *use_list)){

491 
Temp_ãmp
 
t2
 = 
	`Temp_√wãmp
();

492 *
u£_li°
 = 
	`Temp_Rïœ˚_ãmpLi°
(*u£_li°, 
•ûl_ãmp
, 
t2
);

493 *
buf
 = 
	`checked_mÆloc
(()*40);

494 
	`•rötf
(
buf
, "mov»%d(%%ebp), `d0\n", 
off£t_ö_‰ame
);

496 
AS_ö°r
 
lﬂd_ö°r
 = 
	`AS_O≥r
(
buf
, 
	`Temp_TempLi°
(
t2
, 
NULL
), NULL, NULL);

497 
AS_ö°rLi°
 
√w_ö°r
 = 
	`AS_In°rLi°
(
lﬂd_ö°r
, 
li°
);

498 if(
œ°_ö°r
){

499 
œ°_ö°r
->
èû
 = 
√w_ö°r
;

501 
ªsu…
 = 
√w_ö°r
;

505 
œ°_ö°r
 = 
li°
;

507 if(
def_li°
 && 
	`Temp_In_ãmpLi°
(
•ûl_ãmp
, *def_list)){

508 
Temp_ãmp
 
t1
 = 
	`Temp_√wãmp
();

509 *
def_li°
 = 
	`Temp_Rïœ˚_ãmpLi°
(*def_li°, 
•ûl_ãmp
, 
t1
);

511 *
buf
 = 
	`checked_mÆloc
(()*40);

512 
	`•rötf
(
buf
, "mov»`s0, %d(%%ebp)\n", 
off£t_ö_‰ame
);

513 
AS_ö°r
 
°‹e_ö°r
 = 
	`AS_O≥r
(
buf
, 
NULL
, 
	`Temp_TempLi°
(
t1
, NULL), NULL);

514 
AS_ö°rLi°
 
√w_ö°r
 = 
	`AS_In°rLi°
(
°‹e_ö°r
, 
√xt_ö°r
);

515 
li°
->
èû
 = 
√w_ö°r
;

516 
œ°_ö°r
 = 
√w_ö°r
;

519 
li°
 = 
√xt_ö°r
;

523 *
ö°r_li°
 = 
ªsu…
;

525 
	}
}

527 
Temp_m≠
 
	$m≠_ãmps
(){

528 
Temp_m≠
 
ªsu…
 = 
	`Temp_em±y
();

529 
G_nodeLi°
 
node_li°
 = 
	`G_nodes
(
c⁄Êi˘_gøph
);

530 ; 
node_li°
 !
NULL
;Çode_li° =Çode_li°->
èû
){

531 
c
 = *(*Ë
	`G_look
(
cﬁ‹
, 
node_li°
->
hód
);

532 
	`Temp_íãr
(
ªsu…
, 
	`Live_gãmp
(
node_li°
->
hód
), 
ªg_«mes
[
c
]);

535 
	`Temp_íãr
(
ªsu…
, 
	`F_FP
(), "%ebp");

536 
	`Temp_íãr
(
ªsu…
, 
	`F_SP
(), "%esp");

537  
ªsu…
;

538 
	}
}

541 
RA_ªsu…
 
	$RA_ªgAŒoc
(
F_‰ame
 
f
, 
AS_ö°rLi°
 
û
) {

543 
Live_gøph
 
lg
;

544 
boﬁ
 
•ûl
 = 
TRUE
;

545 
AS_ö°rLi°
 
ö°r_li°
 = 
û
;

546 
•ûl
){

548 
G_gøph
 
Êow_gøph
 = 
	`FG_As£mFlowGøph
(
ö°r_li°
, 
f
);

550 
lg
 = 
	`Live_livíess
(
Êow_gøph
);

551 
	`Buûd
(
lg
);

552 
	`MakeW‹kli°
();

553 
sim∂ifyW‹kli°
 || 
•ûlW‹kli°
 || 
w‹kli°Moves
 || 
‰ìzeW‹kli°
){

554 if(
sim∂ifyW‹kli°
){

555 
	`Sim∂ify
();

556 }if(
w‹kli°Moves
){

557 
	`CﬂÀs˚
();

558 }if(
‰ìzeW‹kli°
){

559 
	`Fªeze
();

560 }if(
•ûlW‹kli°
){

561 
	`Sñe˘Spûl
();

564 
	`AssignCﬁ‹s
();

565 if(
•ûÀdNodes
){

566 
	`RewrôeProgøm
(
f
, &
ö°r_li°
);

568 
•ûl
 = 
FALSE
;

572 
RA_ªsu…
 
ªt
;

573 
ªt
.
û
 = 
ö°r_li°
;

574 
ªt
.
cﬁ‹ög
 = 
	`m≠_ãmps
();

575  
ªt
;

576 
	}
}

	@regalloc.h

3 #i‚de‡
REGALLOC_H


4 
	#REGALLOC_H


	)

6 
	sRA_ªsu…
 {
Temp_m≠
 
	mcﬁ‹ög
; 
AS_ö°rLi°
 
	mû
;};

7 
RA_ªsu…
 
RA_ªgAŒoc
(
F_‰ame
 
f
, 
AS_ö°rLi°
 
û
);

9 
Buûd
(
Live_gøph
 
lg
);

10 
MakeW‹dli°
();

11 
sim∂ify
();

12 
CﬂÀs˚
();

13 
Fªeze
();

14 
Sñe˘Spûl
();

15 
RewrôeProgøm
();

	@runtime.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

7 *
	$öôAºay
(
size
, 
öô
)

8 {
i
;

9 *
a
 = (*)
	`mÆloc
(
size
*());

10 
i
=0;i<
size
;i++Ë
a
[i]=
öô
;

11  
a
;

12 
	}
}

14 *
	$ÆlocRec‹d
(
size
)

15 {
i
;

16 *
p
, *
a
;

17 
p
 = 
a
 = (*)
	`mÆloc
(
size
);

18 
i
=0;i<
size
;i+=()Ë*
p
++ = 0;

19  
a
;

20 
	}
}

22 
	s°rög
 {
	mÀngth
; 
	mch¨s
[1];};

24 
	$°rögEquÆ
(
°rög
 *
s
, °rög *
t
)

25 {
i
;

26 i‡(
s
==
t
)  1;

27 i‡(
s
->
Àngth
!=
t
->length)  0;

28 
i
=0;i<
s
->
Àngth
;i++Ëi‡(s->
ch¨s
[i]!=
t
->chars[i])  0;

30 
	}
}

32 
	$¥öt
(
°rög
 *
s
)

33 {
i
; *
p
=
s
->
ch¨s
;

34 
i
=0;i<
s
->
Àngth
;i++,
p
++Ë
	`putch¨
(*p);

35 
	}
}

37 
	$¥öti
(
k
)

39 
	`¥ötf
("%d", 
k
);

40 
	}
}

42 
	$Êush
()

44 
	`fÊush
(
°dout
);

45 
	}
}

47 
°rög
 
	gc⁄°s
[256];

48 
°rög
 
	gem±y
={0,""};

50 
	$maö
()

51 {
i
;

52 
i
=0;i<256;i++)

53 {
c⁄°s
[
i
].
Àngth
=1;

54 
c⁄°s
[
i
].
ch¨s
[0]=i;

56  
	`tigîmaö
(0 );

57 
	}
}

59 
	$‹d
(
°rög
 *
s
)

61 i‡(
s
->
Àngth
==0)  -1;

62  
s
->
ch¨s
[0];

63 
	}
}

65 
°rög
 *
	$chr
(
i
)

67 i‡(
i
<0 || i>=256)

68 {
	`¥ötf
("chr(%dËouào‡ønge\n",
i
); 
	`exô
(1);}

69  
c⁄°s
+
i
;

70 
	}
}

72 
	$size
(
°rög
 *
s
)

74  
s
->
Àngth
;

75 
	}
}

77 
°rög
 *
	$sub°rög
(
°rög
 *
s
, 
fú°
, 
n
)

79 i‡(
fú°
<0 || fú°+
n
>
s
->
Àngth
)

80 {
	`¥ötf
("sub°rög([%d],%d,%dËouào‡ønge\n",
s
->
Àngth
,
fú°
,
n
);

81 
	`exô
(1);}

82 i‡(
n
==1Ë 
c⁄°s
+
s
->
ch¨s
[
fú°
];

83 {
°rög
 *
t
 = (°rög *)
	`mÆloc
(()+
n
);

84 
i
;

85 
t
->
Àngth
=
n
;

86 
i
=0;i<
n
;i++Ë
t
->
ch¨s
[i]=
s
->ch¨s[
fú°
+i];

87  
t
;

89 
	}
}

91 
°rög
 *
	$c⁄ˇt
(
°rög
 *
a
, °rög *
b
)

93 i‡(
a
->
Àngth
==0Ë 
b
;

94 i‡(
b
->
Àngth
==0Ë 
a
;

95 {
i
, 
n
=
a
->
Àngth
+
b
->length;

96 
°rög
 *
t
 = (°rög *)
	`mÆloc
(()+
n
);

97 
t
->
Àngth
=
n
;

98 
i
=0;i<
a
->
Àngth
;i++)

99 
t
->
ch¨s
[
i
]=
a
->chars[i];

100 
i
=0;i<
b
->
Àngth
;i++)

101 
t
->
ch¨s
[
i
+
a
->
Àngth
]=
b
->chars[i];

102  
t
;

104 
	}
}

106 
	$nŸ
(
i
)

107 {  !
i
;

108 
	}
}

110 #unde‡
gëch¨


112 
°rög
 *
	$__wøp_gëch¨
()

113 {
i
=
	`gëc
(
°dö
);

114 i‡(
i
==
EOF
Ë &
em±y
;

115  
c⁄°s
+
i
;

116 
	}
}

	@semant.c

1 
	~<°dio.h
>

2 
	~<as£π.h
>

3 
	~<°rög.h
>

4 
	~"utû.h
"

5 
	~"îr‹msg.h
"

6 
	~"symbﬁ.h
"

7 
	~"absyn.h
"

8 
	~"ty≥s.h
"

9 
	~"ív.h
"

10 
	~"£m™t.h
"

11 
	~"hñ≥r.h
"

12 
	~"å™¶©e.h
"

16 
	sex±y


18 
Tr_exp
 
	mexp
;

19 
Ty_ty
 
	mty
;

23 
ex±y
 
	$expTy
(
Tr_exp
 
exp
, 
Ty_ty
 
ty
)

25 
ex±y
 
e
;

26 
e
.
exp
 =Éxp;

27 
e
.
ty
 =Åy;

28  
e
;

29 
	}
}

31 
F_‰agLi°
 
	$SEM_å™sProg
(
A_exp
 
exp
){

33 
Tr_Àvñ
 
ouãrmo°
 = 
	`Tr_ouãrmo°
();

34 
ex±y
 
e
 = 
	`å™sExp
(
	`E_ba£_vív
(), 
	`E_ba£_ãnv
(), 
exp
, 
ouãrmo°
, 
NULL
);

35 
	`Tr_Func
(
e
.
exp
, 
ouãrmo°
);

36  
	`Tr_gëResu…
();

37 
	}
}

41 
boﬁ
 
	$ty≥Eq
(
Ty_ty
 
a
, Ty_ty 
b
)

44 
köd
 = 
a
->kind;

45 if(
a
->
köd
 =
Ty_¨øy
){

46  
a
 =
b
;

47 }if(
a
->
köd
 =
Ty_ªc‹d
){

48  
a
 =
b
 || b->
köd
 =
Ty_nû
;

49 }if(
b
->
köd
 =
Ty_ªc‹d
){

50  
a
 =
b
 ||á->
köd
 =
Ty_nû
;

52  
a
->
köd
 =
b
->kind;

54 
	}
}

64 
Ty_ty
 
	$a˘uÆ_ty
(
Ty_ty
 
ty
){

66 if(
ty
->
köd
 =
Ty_«me
){

67  
ty
->
u
.
«me
.ty;

69  
ty
;

71 
	}
}

73 
Ty_fõldLi°
 
	$a˘uÆ_tys
(
Ty_fõldLi°
 
fs_ty
)

75 if(
fs_ty
){

76  
	`Ty_FõldLi°
(
	`Ty_Fõld
(
fs_ty
->
hód
->
«me
, 
	`a˘uÆ_ty
(fs_ty->hód->
ty
)), 
	`a˘uÆ_tys
(fs_ty->
èû
));

78  
NULL
;

80 
	}
}

84 
Ty_ty
 
	$checked_S_look_ty≥
(
S_èbÀ
 
ãnv
, 
S_symbﬁ
 
«me
, 
A_pos
 
pos
){

85 
Ty_ty
 
ªt
 = 
	`S_look
(
ãnv
, 
«me
);

86 if(!
ªt
){

87 
	`EM_îr‹
(
pos
, "undeföedÅy≥ %s", 
	`S_«me
(
«me
));

88 
ªt
 = 
	`Ty_I¡
();

90  
ªt
;

91 
	}
}

95 
ex±y
 
	$å™sExp
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_exp
 
a
, 
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
)

97 
a
->
köd
) {

98 
A_v¨Exp
:

99  
	`å™sV¨
(
vív
, 
ãnv
, 
a
->
u
.
v¨
, 
Àvñ
, 
œbñ
);

101 
A_nûExp
:

102  
	`expTy
(
	`Tr_Nû
(), 
	`Ty_Nû
());

104 
A_ötExp
:

105  
	`expTy
(
	`Tr_I¡
(
a
->
u
.
öâ
), 
	`Ty_I¡
());

107 
A_°rögExp
:

108  
	`expTy
(
	`Tr_Såög
(
a
->
u
.
°rögg
), 
	`Ty_Såög
());

112 
A_ˇŒExp
:{

113 
E_ívíåy
 
íåy
 = 
	`S_look
(
vív
, 
a
->
u
.
ˇŒ
.
func
);

114 
A_expLi°
 
¨gs
;

115 
Ty_tyLi°
 
f‹mÆs
;

116 
Tr_expLi°
 
∑øms_å
 = 
NULL
;

117 
ex±y
 
¨g_ex±y
;

118 if(
íåy
 &&É¡ry->
köd
 =
E_funE¡ry
){

120 
¨gs
 = 
a
->
u
.
ˇŒ
.¨gs, 
f‹mÆs
 = 
íåy
->u.
fun
.f‹mÆs;árgs&& f‹mÆs;árg†¨gs->
èû
, formals = formals->tail)

122 
¨g_ex±y
 = 
	`å™sExp
(
vív
, 
ãnv
, 
¨gs
->
hód
, 
Àvñ
, 
NULL
);

123 if(!
	`ty≥Eq
(
¨g_ex±y
.
ty
, 
f‹mÆs
->
hód
)){

124 
	`EM_îr‹
(
¨gs
->
hód
->
pos
, "∑øÅy≥ mism©˝¨®ty≥ mism©chh", 
	`S_«me
(
a
->
u
.
ˇŒ
.
func
));

126 
∑øms_å
 = 
	`Tr_ExpLi°
(
¨g_ex±y
.
exp
,Öarams_tr);

129 if(
¨gs
 !
NULL
){

130 
	`EM_îr‹
(
a
->
pos
, "toÿm™yÖ¨am†ö fun˘i⁄ %s", 
	`S_«me
◊->
u
.
ˇŒ
.
func
));

132 if(
f‹mÆs
 !
NULL
){

133 
	`EM_îr‹
(
a
->
pos
, "toÿÀs†∑øm†ö fu¡i⁄ %s", 
	`S_«me
◊->
u
.
ˇŒ
.
func
));

137 
Tr_exp
 
ˇŒ_å
 = 
	`Tr_CÆl
(
íåy
->
u
.
fun
.
Àvñ
,É¡ry->u.fun.
œbñ
, 
∑øms_å
,Üevel);

138  
	`expTy
(
ˇŒ_å
, 
íåy
->
u
.
fun
.
ªsu…
);

141 
	`EM_îr‹
(
a
->
pos
, "undeföed fun˘i⁄ %s", 
	`S_«me
◊->
u
.
ˇŒ
.
func
));

142  
	`expTy
(
	`Tr_N›
(), 
	`Ty_I¡
());

151 
A_›Exp
:{

152 
A_›î
 
›î
 = 
a
->
u
.
›
.oper;

153 
ex±y
 
À·
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
›
.À·, 
Àvñ
, 
œbñ
);

154 
ex±y
 
right
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
›
.right, 
Àvñ
, 
œbñ
);

155 
is_°r
 = (
À·
.
ty
->
köd
 =
Ty_°rög
);

157 if(
›î
 =
A_∂usOp
 || o≥∏=
A_möusOp
 || o≥∏=
A_timesOp
 || o≥∏=
A_divideOp
){

158 if(
À·
.
ty
->
köd
 !
Ty_öt
)

159 
	`EM_îr‹
(
a
->
u
.
›
.
À·
->
pos
, "integerÑequired");

160 if(
right
.
ty
->
köd
 !
Ty_öt
)

161 
	`EM_îr‹
(
a
->
u
.
›
.
right
->
pos
, "integerÑequired");

162  
	`expTy
(
	`Tr_OpArôhm
(
›î
, 
À·
.
exp
, 
right
.exp), 
	`Ty_I¡
());

165 if(
›î
 =
A_eqOp
 || o≥∏=
A_√qOp
){

166 if(!
	`ty≥Eq
(
À·
.
ty
, 
right
.tyË||Üe·.ty->
köd
 =
Ty_void
)

167 
	`EM_îr‹
(
a
->
pos
, "sameÅypeÑequired");

169  
	`expTy
(
	`Tr_OpCmp
(
›î
, 
À·
.
exp
, 
right
.exp, 
is_°r
), 
	`Ty_I¡
());

171 if(
›î
 =
A_…Op
 || o≥∏=
A_ÀOp
 || o≥∏=
A_gtOp
 || o≥∏=
A_geOp
){

172 if(!–(
À·
.
ty
->
köd
 =
Ty_öt
 && 
right
.ty->köd =Ty_ötË|| (À·.ty->köd =
Ty_°rög
 &&Ñight.ty->kind == Ty_string) ))

173 
	`EM_îr‹
(
a
->
pos
, "sameÅypeÑequired");

174  
	`expTy
(
	`Tr_OpCmp
(
›î
, 
À·
.
exp
, 
right
.exp, 
is_°r
), 
	`Ty_I¡
());

179 
	`as£π
(0);

182 
A_ªc‹dExp
:{

183 
Ty_ty
 
öô_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
a
->
u
.
ªc‹d
.
typ
,á->
pos
);

184 
Ty_ty
 
ty
 = 
	`a˘uÆ_ty
(
öô_ty
);

185 
A_efõldLi°
 
efs
;

186 
Ty_fõldLi°
 
fs
;

187 
fõlds_˙t
 = 0;

188 
Tr_expLi°
 
fõlds
 = 
NULL
;

190 
ex±y
 
efõld_exp_expTy
;

192 if(
ty
->
köd
 !
Ty_ªc‹d
){

193 
	`EM_îr‹
(
a
->
pos
, "recordÅypeÑequired");

194  
	`expTy
(
	`Tr_N›
(), 
	`Ty_I¡
());

199 
efs
 = 
a
->
u
.
ªc‹d
.
fõlds
, 
fs
 = 
ty
->u.ªc‹d;Éf†&& fs;Éf†efs->
èû
, fs = fs->tail){

200 
efõld_exp_expTy
 = 
	`å™sExp
(
vív
, 
ãnv
, 
efs
->
hód
->
exp
, 
Àvñ
, 
œbñ
);

202 if(!(
efs
->
hód
->
«me
 =
fs
->hód->«meË|| !(
	`ty≥Eq
(
efõld_exp_expTy
.
ty
, fs->head->ty))){

203 
	`EM_îr‹
(
a
->
pos
, "typeÇame orÉxpressionÑeturnÅype mismatch");

206 
fõlds_˙t
 ++;

207 
fõlds
 = 
	`Tr_ExpLi°
(
efõld_exp_expTy
.
exp
, fields);

210 if(
fs
 || 
efs
){

211 
	`EM_îr‹
(
a
->
pos
, "type count mismatch");

215 
Tr_exp
 
ªc‹d_å
 = 
	`Tr_Rec‹d
(
fõlds_˙t
, 
fõlds
);

216  
	`expTy
(
ªc‹d_å
, 
ty
);

220 
A_£qExp
:{

222 
A_expLi°
 
curExp
;

223 
ex±y
 
exp
 = 
	`expTy
(
NULL
, 
	`Ty_Void
());

224 
Tr_exp
 
exp_å
 = 
	`Tr_N›
();

225 
curExp
 = 
a
->
u
.
£q
; curExp; curEx∞curExp->
èû
){

226 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
curExp
->
hód
, 
Àvñ
, 
œbñ
);

227 
exp_å
 = 
	`Tr_Seq
”xp_å, 
exp
.exp);

229 
ex±y
 
ªsu…
 = 
	`expTy
(
exp_å
, 
exp
.
ty
);

230  
ªsu…
;

235 
A_assignExp
:{

236 
ex±y
 
v¨
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
a
->
u
.
assign
.v¨, 
Àvñ
, 
œbñ
);

237 
ex±y
 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
assign
.exp, 
Àvñ
, 
œbñ
);

240 if(
v¨
.
ty
->
köd
 =
Ty_öt
 && (v¨.ty->
u
.
öâ
.
lo›_v¨
 == 1)){

241 
	`EM_îr‹
(
a
->
pos
, "loop variable can't beássigned");

244 if(!
	`ty≥Eq
(
v¨
.
ty
, 
exp
.ty))

245 
	`EM_îr‹
(
a
->
pos
, "unmatchedássignÉxp");

247 
Tr_exp
 
assign_å
 = 
	`Tr_Assign
(
v¨
.
exp
,Éxp.exp);

248  
	`expTy
(
assign_å
, 
	`Ty_Void
());

250 
A_ifExp
:{

254 
ex±y
 
if_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
ã°
, 
Àvñ
, 
œbñ
);

255 if(
if_ty
.
ty
->
köd
 !
Ty_öt
){

256 
	`EM_îr‹
(
a
->
u
.
iff
.
ã°
->
pos
, "integerÑequired");

258 
ex±y
 
thí_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
thí
, 
Àvñ
, 
œbñ
);

259 if(
a
->
u
.
iff
.
ñ£e
){

260 
ex±y
 
ñ£_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
iff
.
ñ£e
, 
Àvñ
, 
œbñ
);

261 if(!
	`ty≥Eq
(
ñ£_ty
.
ty
, 
thí_ty
.ty)){

262 
	`EM_îr‹
(
a
->
pos
, "thenÉxpándÉlseÉxpÅype mismatch");

264 
Tr_exp
 
if_thí_ñ£_å
 = 
	`Tr_IfThíEl£
(
if_ty
.
exp
, 
thí_ty
.exp, 
ñ£_ty
.exp);

265  
	`expTy
(
if_thí_ñ£_å
, 
thí_ty
.
ty
);

267 if(
thí_ty
.
ty
->
köd
 !
Ty_void
){

268 
	`EM_îr‹
(
a
->
pos
, "if-thenÉxp's body mustÖroduceÇo value");

271 
Tr_exp
 
if_thí_å
 = 
	`Tr_IfThí
(
if_ty
.
exp
, 
thí_ty
.exp);

272  
	`expTy
(
if_thí_å
, 
	`Ty_Void
());

275 
A_whûeExp
:{

276 
Temp_œbñ
 
d⁄e
 = 
	`Temp_√wœbñ
();

277 
ex±y
 
ã°_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
whûì
.
ã°
, 
Àvñ
, 
œbñ
);

278 
ex±y
 
body_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
whûì
.
body
, 
Àvñ
, 
d⁄e
);

282 if(
ã°_ty
.
ty
->
köd
 !
Ty_öt
){

283 
	`EM_îr‹
(
a
->
u
.
whûì
.
ã°
->
pos
, "integerÑequired");

285 if(
body_ty
.
ty
->
köd
 !
Ty_void
){

286 
	`EM_îr‹
(
a
->
u
.
whûì
.
body
->
pos
, "while body mustÖroduceÇo value");

290 
Tr_exp
 
whûe_å
 = 
	`Tr_Whûe
(
ã°_ty
.
exp
, 
body_ty
.exp, 
d⁄e
);

291  
	`expTy
(
whûe_å
, 
	`Ty_Void
());

293 
A_f‹Exp
:{

297 
	`S_begöSc›e
(
vív
);

298 
Tr_ac˚ss
 
ac˚ss_å
 = 
	`Tr_ÆlocLoˇl
(
Àvñ
, 
a
->
u
.
f‹r
.
esˇ≥
);

299 
	`S_íãr
(
vív
, 
a
->
u
.
f‹r
.
v¨
, 
	`E_V¨E¡ry
(
ac˚ss_å
, 
	`Ty_I¡
()));

301 
ex±y
 
lo_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
f‹r
.
lo
, 
Àvñ
, 
œbñ
);

302 
ex±y
 
hi_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
f‹r
.
hi
, 
Àvñ
, 
œbñ
);

303 
ex±y
 
body_ty
;

305 if(
lo_ty
.
ty
->
köd
 !
Ty_öt
){

306 
	`EM_îr‹
(
a
->
u
.
f‹r
.
lo
->
pos
, "forÉxp'sÑangeÅype isÇot integer");

308 if(
hi_ty
.
ty
->
köd
 !
Ty_öt
){

309 
	`EM_îr‹
(
a
->
u
.
f‹r
.
hi
->
pos
, "forÉxp'sÑangeÅype isÇot integer");

313 
E_ívíåy
 
íåy
 = 
	`S_look
(
vív
, 
a
->
u
.
f‹r
.
v¨
);

314 
Ty_ty
 
f‹_ty
 = 
íåy
->
u
.
v¨
.
ty
;

315 
f‹_ty
->
u
.
öâ
.
lo›_v¨
 = 1;

317 
Temp_œbñ
 
d⁄e
 = 
	`Temp_√wœbñ
();

318 
body_ty
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
f‹r
.
body
, 
Àvñ
, 
d⁄e
);

319 if(
body_ty
.
ty
->
köd
 !
Ty_void
){

320 
	`EM_îr‹
(
a
->
u
.
f‹r
.
body
->
pos
, "for body mustÖroduceÇo value");

322 
	`S_ídSc›e
(
vív
);

324 
Tr_exp
 
f‹_å
 = 
	`Tr_F‹
(
ac˚ss_å
, 
Àvñ
, 
lo_ty
.
exp
, 
hi_ty
.exp, 
body_ty
.exp, 
d⁄e
);

325  
	`expTy
(
f‹_å
, 
	`Ty_Void
());

327 
A_bªakExp
:

331 if(
œbñ
)

332  
	`expTy
(
	`Tr_Jump
(
œbñ
), 
	`Ty_Void
());

334 
	`EM_îr‹
(
a
->
pos
, "break isÇot insideáÜoop");

335  
	`expTy
(
	`Tr_N›
(), 
	`Ty_Void
());

338 
A_ÀtExp
:{

339 
ex±y
 
body_expTy
;

340 
A_decLi°
 
decs
;

341 
	`S_begöSc›e
(
vív
);

342 
	`S_begöSc›e
(
ãnv
);

344 
decs
 = 
a
->
u
.
Àt
.decs; decs; dec†decs->
èû
){

345 
	`å™sDec
(
vív
, 
ãnv
, 
decs
->
hód
, 
Àvñ
, 
œbñ
);

347 
body_expTy
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
Àt
.
body
, 
Àvñ
, 
œbñ
);

349 
	`S_ídSc›e
(
ãnv
);

350 
	`S_ídSc›e
(
vív
);

352  
body_expTy
;

356 
A_¨øyExp
:{

358 
Ty_ty
 
ty
 = 
	`a˘uÆ_ty
(
	`checked_S_look_ty≥
(
ãnv
, 
a
->
u
.
¨øy
.
typ
,á->
pos
));

359 
ex±y
 
size
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
¨øy
.size, 
Àvñ
, 
œbñ
);

360 
ex±y
 
öô
 = 
	`å™sExp
(
vív
, 
ãnv
, 
a
->
u
.
¨øy
.öô, 
Àvñ
, 
œbñ
);

362 if(
size
.
ty
->
köd
 !
Ty_öt
){

363 
	`EM_îr‹
(
a
->
u
.
¨øy
.
size
->
pos
, "integerÑequired");

365 if(!
	`ty≥Eq
(
ty
->
u
.
¨øy
, 
öô
.ty)){

366 
	`EM_îr‹
(
a
->
u
.
¨øy
.
öô
->
pos
, "arrayÅype mismatch");

369 
Tr_exp
 
¨øy_å
 = 
	`Tr_Aºay
(
size
.
exp
, 
öô
.exp);

370  
	`expTy
(
¨øy_å
, 
ty
);

374 
	}
}

379 
	$föd_ßme_«me
(
A_«mëyLi°
 
fﬁlow_li°
, 
S_symbﬁ
 
«me
){

381 if(!
fﬁlow_li°
){

386 if(
fﬁlow_li°
->
hód
->
«me
 ==Çame){

389  
	`föd_ßme_«me
(
fﬁlow_li°
->
èû
, 
«me
);

392 
	}
}

395 
	$föd_ßme_funcName
(
A_fundecLi°
 
fﬁlow_li°
, 
S_symbﬁ
 
«me
){

397 if(!
fﬁlow_li°
){

402 if(
fﬁlow_li°
->
hód
->
«me
 ==Çame){

405  
	`föd_ßme_funcName
(
fﬁlow_li°
->
èû
, 
«me
);

408 
	}
}

412 
Ty_tyLi°
 
	$makeF‹mÆTyLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
fõlds
){

413 if(
fõlds
){

414 
Ty_ty
 
ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
fõlds
->
hód
->
typ
, fõlds->hód->
pos
);

415  
	`Ty_TyLi°
(
	`a˘uÆ_ty
(
ty
), 
	`makeF‹mÆTyLi°
(
ãnv
, 
fõlds
->
èû
));

417  
NULL
;

419 
	}
}

424 
Ty_fõldLi°
 
	$makeFõldTyLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
fõlds
){

425 if(
fõlds
){

426 
Ty_ty
 
ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
fõlds
->
hód
->
typ
, fõlds->hód->
pos
);

427  
	`Ty_FõldLi°
(
	`Ty_Fõld
(
fõlds
->
hód
->
«me
, 
ty
Ë, 
	`makeFõldTyLi°
(
ãnv
, fõlds->
èû
));

429  
NULL
;

431 
	}
}

433 
U_boﬁLi°
 
	$makeF‹mÆBoﬁLi°
(
A_fõldLi°
 
fõlds
){

434 i‡(
fõlds
) {

435 
U_boﬁLi°
 
ªsu…
 = 
	`U_BoﬁLi°
(
fõlds
->
hód
->
esˇ≥
, 
	`makeF‹mÆBoﬁLi°
(fõlds->
èû
));

436  
ªsu…
;

438  
NULL
;

440 
	}
}

444 
Tr_exp
 
	$å™sDec
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_dec
 
d
, 
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
){

445 
d
->
köd
){

447 
A_fun˘i⁄Dec
:{

451 
A_fundecLi°
 
funcs
;

452 
Ty_ty
 
ªsu…_ty
;

453 
funcs
 = 
d
->
u
.
fun˘i⁄
; funcs; func†funcs->
èû
){

454 
A_fundec
 
cur_func
 = 
funcs
->
hód
;

456 if(
	`°rcmp
(
	`S_«me
(
cur_func
->
ªsu…
), "")){

457 
ªsu…_ty
 = 
	`a˘uÆ_ty
(
	`checked_S_look_ty≥
(
ãnv
, 
cur_func
->
ªsu…
, cur_func->
pos
));

459 
ªsu…_ty
 = 
	`Ty_Void
();

462 if(
	`föd_ßme_funcName
(
funcs
->
èû
, funcs->
hód
->
«me
)){

463 
	`EM_îr‹
(
d
->
pos
, "two functions haveÅhe sameÇame");

466 
Ty_tyLi°
 
f‹mÆTyLi°
 = 
	`makeF‹mÆTyLi°
(
ãnv
, 
cur_func
->
∑øms
);

468 
U_boﬁLi°
 
f‹mÆs_esˇ≥
 = 
	`makeF‹mÆBoﬁLi°
(
funcs
->
hód
->
∑øms
);

470 
Temp_œbñ
 
√w_œbñ
 = 
	`Temp_√wœbñ
();

471 
Tr_Àvñ
 
√w_Àvñ
 = 
	`Tr_√wLevñ
(
Àvñ
, 
√w_œbñ
, 
f‹mÆs_esˇ≥
);

472 
	`S_íãr
(
vív
, 
cur_func
->
«me
, 
	`E_FunE¡ry
(
√w_Àvñ
, 
√w_œbñ
, 
f‹mÆTyLi°
, 
ªsu…_ty
));

475 
Tr_ac˚ssLi°
 
∑øms_å
;

477 
funcs
 = 
d
->
u
.
fun˘i⁄
; funcs; func†funcs->
èû
){

479 
	`S_begöSc›e
(
vív
);

480 
A_fundec
 
cur_func
 = 
funcs
->
hód
;

481 
E_ívíåy
 
funE¡ry
 = 
	`S_look
(
vív
, 
cur_func
->
«me
);

482 
A_fõldLi°
 
∑øms
;

483 
Ty_tyLi°
 
∑øm_tys
 = 
funE¡ry
->
u
.
fun
.
f‹mÆs
;

485 
∑øms_å
 = 
	`Tr_f‹mÆs
(
funE¡ry
->
u
.
fun
.
Àvñ
);

487 
∑øms
 = 
cur_func
->∑øm†;Ö¨am†&& 
∑øm_tys
;Ö¨am†∑øms->
èû
,Öaram_tys =Öaram_tys->tail){

488 
	`S_íãr
(
vív
, 
∑øms
->
hód
->
«me
, 
	`E_V¨E¡ry
(
∑øms_å
->hód, 
∑øm_tys
->head));

492 
ªsu…_ty
 = 
funE¡ry
->
u
.
fun
.
ªsu…
;

493 
ex±y
 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
cur_func
->
body
, 
funE¡ry
->
u
.
fun
.
Àvñ
, 
NULL
);

494 if(!
	`ty≥Eq
(
exp
.
ty
, 
ªsu…_ty
)){

495 if(
ªsu…_ty
->
köd
 =
Ty_void
){

496 
	`EM_îr‹
(
cur_func
->
body
->
pos
, "procedureÑeturns value");

498 
	`EM_îr‹
(
cur_func
->
body
->
pos
, "type mismatch");

501 
	`S_ídSc›e
(
vív
);

503 
	`Tr_Func
(
exp
.exp, 
funE¡ry
->
u
.
fun
.
Àvñ
);

506  
	`Tr_N›
();

509 
A_v¨Dec
:{

512 
ex±y
 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
d
->
u
.
v¨
.
öô
, 
Àvñ
, 
œbñ
);

513 
Tr_ac˚ss
 
ac˚ss_å
 = 
	`Tr_ÆlocLoˇl
(
Àvñ
, 
d
->
u
.
v¨
.
esˇ≥
);

515 if(
	`°rcmp
(
	`S_«me
(
d
->
u
.
v¨
.
typ
), "")){

516 
Ty_ty
 
öô_giví_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
d
->
u
.
v¨
.
typ
, d->
pos
);

517 
Ty_ty
 
a˘uÆ_giví_ty
 = 
	`a˘uÆ_ty
(
öô_giví_ty
);

519 if(!
	`ty≥Eq
(
exp
.
ty
, 
a˘uÆ_giví_ty
)){

520 
	`EM_îr‹
(
d
->
pos
, "type mismatch");

522 
	`S_íãr
(
vív
, 
d
->
u
.
v¨
.v¨, 
	`E_V¨E¡ry
(
ac˚ss_å
, 
a˘uÆ_giví_ty
));

527 if(
exp
.
ty
->
köd
 =
Ty_nû
){

528 
	`EM_îr‹
(
d
->
u
.
v¨
.
öô
->
pos
, "init shouldÇot beÇil withoutÅype specified");

531 
	`S_íãr
(
vív
, 
d
->
u
.
v¨
.v¨, 
	`E_V¨E¡ry
(
ac˚ss_å
, 
exp
.
ty
));

534  
	`Tr_Assign
(
	`Tr_sim∂eV¨
(
ac˚ss_å
, 
Àvñ
), 
exp
.exp);

537 
A_ty≥Dec
:{

544 
A_«mëyLi°
 
«mëy_li°
;

545 
«mëy_li°
 = 
d
->
u
.
ty≥
;Çamëy_li°;Çamëy_li° =Çamëy_li°->
èû
){

546 
A_«mëy
 
cur_«mëy
 = 
«mëy_li°
->
hód
;

547 if(
	`föd_ßme_«me
(
«mëy_li°
->
èû
, 
cur_«mëy
->
«me
)){

548 
	`EM_îr‹
(
cur_«mëy
->
ty
->
pos
, "twoÅypes haveÅhe sameÇame");

551 
	`S_íãr
(
ãnv
, 
cur_«mëy
->
«me
, 
	`Ty_Name
(cur_«mëy->«me, 
NULL
));

556 
«meTy_˙t
 = 0;

558 
«mëy_li°
 = 
d
->
u
.
ty≥
;Çamëy_li°;Çamëy_li° =Çamëy_li°->
èû
){

559 
A_«mëy
 
cur_«mëy
 = 
«mëy_li°
->
hód
;

560 
cur_«mëy
->
ty
->
köd
)

562 
A_«meTy
:{

567 
«meTy_˙t
 ++;

568 
Ty_ty
 
«me_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

569 
«me_ty
->
köd
 = 
Ty_«me
;

571 
«me_ty
->
u
.
«me
.
sym
 = 
cur_«mëy
->
ty
->u.name;

574 
A_ªc‹dTy
:{

575 
Ty_ty
 
ªc‹d_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

576 
ªc‹d_ty
->
köd
 = 
Ty_ªc‹d
;

577 
ªc‹d_ty
->
u
.
ªc‹d
 = 
	`makeFõldTyLi°
(
ãnv
, 
cur_«mëy
->
ty
->u.record);

581 
A_¨øyTy
:{

582 
Ty_ty
 
¨øy_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

583 
¨øy_ty
->
köd
 = 
Ty_¨øy
;

584 
¨øy_ty
->
u
.
¨øy
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
ty
->u.¨øy, 
d
->
pos
);

594 
ªcursive_dïth
;

595 
«meTy_˙t
 != 0){

596 
«meTy2NULL_˙t
 = 0;

597 
«mëy_li°
 = 
d
->
u
.
ty≥
;Çamëy_li°;Çamëy_li° =Çamëy_li°->
èû
){

598 
A_«mëy
 
cur_«mëy
 = 
«mëy_li°
->
hód
;

599 if(
cur_«mëy
->
ty
->
köd
 =
A_«meTy
){

600 
Ty_ty
 
«me_ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

601 if(!
«me_ty
->
u
.
«me
.
ty
){

602 
Ty_ty
 
«me_ty_to
 = 
	`checked_S_look_ty≥
(
ãnv
, 
«me_ty
->
u
.
«me
.
sym
, 
d
->
pos
);

603 if(
«me_ty_to
->
köd
 =
Ty_«me
){

605 if(
«me_ty_to
->
u
.
«me
.
ty
){

606 
«me_ty
->
u
.
«me
.
ty
 = 
«me_ty_to
->u.name.ty;

609 
«meTy2NULL_˙t
 ++;

612 
«me_ty
->
u
.
«me
.
ty
 = 
«me_ty_to
;

618 if(
«meTy2NULL_˙t
 =
«meTy_˙t
){

620 
	`EM_îr‹
(
d
->
pos
, "illegalÅype cycle");

623 
«meTy_˙t
 = 
«meTy2NULL_˙t
;

628 
«mëy_li°
 = 
d
->
u
.
ty≥
;Çamëy_li°;Çamëy_li° =Çamëy_li°->
èû
){

629 
A_«mëy
 
cur_«mëy
 = 
«mëy_li°
->
hód
;

630 
cur_«mëy
->
ty
->
köd
){

631 
A_«meTy
:

633 
A_ªc‹dTy
:{

634 
Ty_ty
 
ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

635 
ty
->
u
.
ªc‹d
 = 
	`a˘uÆ_tys
(ty->u.record);

639 
A_¨øyTy
:{

640 
Ty_ty
 
ty
 = 
	`checked_S_look_ty≥
(
ãnv
, 
cur_«mëy
->
«me
, 
d
->
pos
);

641 
ty
->
u
.
¨øy
 = 
	`a˘uÆ_ty
(ty->u.array);

648  
	`Tr_N›
();

651 
	}
}

653 
ex±y
 
	$å™sV¨
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_v¨
 
v
, 
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
){

654 
v
->
köd
)

656 
A_sim∂eV¨
:{

657 
E_ívíåy
 
íåy
 = 
	`S_look
(
vív
, 
v
->
u
.
sim∂e
);

658 if(
íåy
 &&É¡ry->
köd
 =
E_v¨E¡ry
){

659  
	`expTy
(
	`Tr_sim∂eV¨
(
íåy
->
u
.
v¨
.
ac˚ss
, 
Àvñ
),É¡ry->u.v¨.
ty
);

661 
	`EM_îr‹
(
v
->
pos
, "undeföed v¨übÀ %s", 
	`S_«me
(v->
u
.
sim∂e
));

662  
	`expTy
(
	`Tr_N›
(), 
	`Ty_I¡
());

665 
A_fõldV¨
:{

667 
ex±y
 
v¨_ty
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
v
->
u
.
fõld
.
v¨
, 
Àvñ
, 
œbñ
);

668 if(
	`a˘uÆ_ty
(
v¨_ty
.
ty
)->
köd
 !
Ty_ªc‹d
){

669 
	`EM_îr‹
(
v
->
u
.
fõld
.
v¨
->
pos
, "notáÑecordÅype");

670  
	`expTy
(
	`Tr_N›
(), 
	`Ty_I¡
());

673 
ödex
 = 0;

674 
Ty_fõldLi°
 
ªc‹d_fõlds
;

675 
ªc‹d_fõlds
 = 
v¨_ty
.
ty
->
u
.
ªc‹d
;Ñec‹d_fõlds;Ñec‹d_fõld†ªc‹d_fõlds->
èû
){

676 
Ty_fõld
 
a_fõld
 = 
ªc‹d_fõlds
->
hód
;

677 if(
a_fõld
->
«me
 =
v
->
u
.
fõld
.
sym
){

678 
Tr_exp
 
fõldV¨_å
 = 
	`Tr_fõldV¨
(
v¨_ty
.
exp
, 
ödex
);

679  
	`expTy
(
fõldV¨_å
, 
a_fõld
->
ty
);

681 
ödex
 ++;

684 
	`EM_îr‹
(
v
->
u
.
fõld
.
v¨
->
pos
, "fõld %†d€¢'àexi°", 
	`S_«me
(v->u.fõld.
sym
));

685  
	`expTy
(
	`Tr_N›
(), 
	`Ty_I¡
());

690 
A_subs¸ùtV¨
:{

692 
ex±y
 
v¨_ty
 = 
	`å™sV¨
(
vív
, 
ãnv
, 
v
->
u
.
subs¸ùt
.
v¨
, 
Àvñ
, 
œbñ
);

693 if(
	`a˘uÆ_ty
(
v¨_ty
.
ty
)->
köd
 !
Ty_¨øy
){

694 
	`EM_îr‹
(
v
->
u
.
subs¸ùt
.
v¨
->
pos
, "arrayÅypeÑequired");

695  
	`expTy
(
	`Tr_N›
(), 
	`Ty_I¡
());

698 
ex±y
 
exp
 = 
	`å™sExp
(
vív
, 
ãnv
, 
v
->
u
.
subs¸ùt
.exp, 
Àvñ
, 
œbñ
);

699 if(
exp
.
ty
->
köd
 !
Ty_öt
){

700 
	`EM_îr‹
(
v
->
u
.
subs¸ùt
.
exp
->
pos
, "integerÑequired");

703 
Tr_exp
 
subs¸ùtV¨_å
 = 
	`Tr_subs¸ùtV¨
(
v¨_ty
.
exp
,Éxp.exp);

704  
	`expTy
(
subs¸ùtV¨_å
, 
v¨_ty
.
ty
->
u
.
¨øy
);

708 
	}
}

	@semant.h

1 #i‚de‡
__SEMANT_H_


2 
	#__SEMANT_H_


	)

4 
	~"absyn.h
"

5 
	~"symbﬁ.h
"

6 
	~"ãmp.h
"

7 
	~"‰ame.h
"

8 
	~"å™¶©e.h
"

10 
	gex±y
;

12 
ex±y
 
å™sV¨
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_v¨
 
v
, 
Tr_Àvñ
 
l
, 
Temp_œbñ
);

13 
ex±y
 
å™sExp
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_exp
 
a
, 
Tr_Àvñ
 
l
, 
Temp_œbñ
);

14 
Tr_exp
 
å™sDec
(
S_èbÀ
 
vív
, S_èbÀ 
ãnv
, 
A_dec
 
d
, 
Tr_Àvñ
 
l
, 
Temp_œbñ
);

15 
Ty_ty
 
å™sTy
 ( 
S_èbÀ
 
ãnv
, 
A_ty
 
a
);

18 
F_‰agLi°
 
SEM_å™sProg
(
A_exp
 
exp
);

	@symbol.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"èbÀ.h
"

7 
	sS_symbﬁ_
 {
°rög
 
	m«me
; 
S_symbﬁ
 
	m√xt
;};

9 
S_symbﬁ
 
	$mksymbﬁ
(
°rög
 
«me
, 
S_symbﬁ
 
√xt
)

10 {
S_symbﬁ
 
s
=
	`checked_mÆloc
((*s));

11 
s
->
«me
=name;

12 
s
->
√xt
=next;

13  
s
;

14 
	}
}

16 
	#SIZE
 109

	)

18 
S_symbﬁ
 
	ghashèbÀ
[
SIZE
];

20 
	$hash
(*
s0
)

21 {
h
=0; *
s
;

22 
s
=
s0
; *s; s++)

23 
h
 = h*65599 + *
s
;

24  
h
;

25 
	}
}

27 
	$°ªq
(
°rög
 
a
, såög 
b
)

29  !
	`°rcmp
(
a
,
b
);

30 
	}
}

32 
S_symbﬁ
 
	$S_Symbﬁ
(
°rög
 
«me
)

33 {
ödex

	`hash
(
«me
Ë% 
SIZE
;

34 
S_symbﬁ
 
syms
 = 
hashèbÀ
[
ödex
], 
sym
;

35 
sym
=
syms
; sym; sym=sym->
√xt
)

36 i‡(
	`°ªq
(
sym
->
«me
,name))  sym;

37 
sym
 = 
	`mksymbﬁ
(
«me
,
syms
);

38 
hashèbÀ
[
ödex
]=
sym
;

39  
sym
;

40 
	}
}

42 
°rög
 
	$S_«me
(
S_symbﬁ
 
sym
)

44  
sym
->
«me
;

45 
	}
}

47 
S_èbÀ
 
	$S_em±y
()

49  
	`TAB_em±y
();

50 
	}
}

52 
	$S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
) {

53 
	`TAB_íãr
(
t
,
sym
,
vÆue
);

54 
	}
}

56 *
	$S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
) {

57  
	`TAB_look
(
t
,
sym
);

58 
	}
}

60 
S_symbﬁ_
 
	gm¨ksym
 = {"<mark>",0};

62 
	$S_begöSc›e
(
S_èbÀ
 
t
)

63 { 
	`S_íãr
(
t
,&
m¨ksym
,
NULL
);

64 
	}
}

66 
	$S_ídSc›e
(
S_èbÀ
 
t
)

67 {
S_symbﬁ
 
s
;

68 dÿ
s
=
	`TAB_p›
(
t
);

69 
s
 !&
m¨ksym
);

70 
	}
}

72 
	$S_dump
(
S_èbÀ
 
t
, (*
show
)(
S_symbﬁ
 
sym
, *
bödög
)) {

73 
	`TAB_dump
(
t
, ((*)(*, *)Ë
show
);

74 
	}
}

	@symbol.h

1 #i‚de‡
SYMBOL_H


2 
	#SYMBOL_H


	)

8 
S_symbﬁ_
 *
	tS_symbﬁ
;

13 
S_symbﬁ
 
S_Symbﬁ
(
°rög
);

16 
°rög
 
S_«me
(
S_symbﬁ
);

20 
TAB_èbÀ_
 *
	tS_èbÀ
;

23 
S_èbÀ
 
S_em±y
();

27 
S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
);

31 *
S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
);

34 
S_begöSc›e
(
S_èbÀ
 
t
);

38 
S_ídSc›e
(
S_èbÀ
 
t
);

	@table.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"èbÀ.h
"

10 
	#TABSIZE
 127

	)

12 
bödî_
 *
	tbödî
;

13 
	sbödî_
 {*
	mkey
; *
	mvÆue
; 
bödî
 
	m√xt
; *
	m¥evt›
;};

14 
	sTAB_èbÀ_
 {

15 
bödî
 
	mèbÀ
[
TABSIZE
];

16 *
	mt›
;

20 
bödî
 
	$Bödî
(*
key
, *
vÆue
, 
bödî
 
√xt
, *
¥evt›
)

21 {
bödî
 
b
 = 
	`checked_mÆloc
((*b));

22 
b
->
key
 = key; b->
vÆue
=vÆue; b->
√xt
Úext; b->
¥evt›
 =Örevtop;

23  
b
;

24 
	}
}

26 
TAB_èbÀ
 
	$TAB_em±y
()

28 
TAB_èbÀ
 
t
 = 
	`checked_mÆloc
((*t));

29 
i
;

30 
t
->
t›
 = 
NULL
;

31 
i
 = 0; i < 
TABSIZE
; i++)

32 
t
->
èbÀ
[
i
] = 
NULL
;

33  
t
;

34 
	}
}

45 
	$TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
)

46 {
ödex
;

47 
	`as£π
(
t
 && 
key
);

48 
ödex
 = (()
key
Ë% 
TABSIZE
;

49 
t
->
èbÀ
[
ödex
] = 
	`Bödî
(
key
, 
vÆue
,t->èbÀ[ödex],Å->
t›
);

50 
t
->
t›
 = 
key
;

51 
	}
}

53 *
	$TAB_look
(
TAB_èbÀ
 
t
, *
key
)

54 {
ödex
;

55 
bödî
 
b
;

56 
	`as£π
(
t
 && 
key
);

57 
ödex
=(()
key
Ë% 
TABSIZE
;

58 
b
=
t
->
èbÀ
[
ödex
]; b; b=b->
√xt
)

59 i‡(
b
->
key
==keyË b->
vÆue
;

60  
NULL
;

61 
	}
}

63 *
	$TAB_p›
(
TAB_èbÀ
 
t
) {

64 *
k
; 
bödî
 
b
; 
ödex
;

65 
	`as£π
 (
t
);

66 
k
 = 
t
->
t›
;

67 
	`as£π
 (
k
);

68 
ödex
 = (()
k
Ë% 
TABSIZE
;

69 
b
 = 
t
->
èbÀ
[
ödex
];

70 
	`as£π
(
b
);

71 
t
->
èbÀ
[
ödex
] = 
b
->
√xt
;

72 
t
->
t›
=
b
->
¥evt›
;

73  
b
->
key
;

74 
	}
}

76 
	$TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
)) {

77 *
k
 = 
t
->
t›
;

78 
ödex
 = (()
k
Ë% 
TABSIZE
;

79 
bödî
 
b
 = 
t
->
èbÀ
[
ödex
];

80 i‡(
b
==
NULL
) ;

81 
t
->
èbÀ
[
ödex
]=
b
->
√xt
;

82 
t
->
t›
=
b
->
¥evt›
;

83 
	`show
(
b
->
key
,b->
vÆue
);

84 
	`TAB_dump
(
t
,
show
);

85 
	`as£π
(
t
->
t›
 =
b
->
¥evt›
 &&Å->
èbÀ
[
ödex
]==b->
√xt
);

86 
t
->
t›
=
k
;

87 
t
->
èbÀ
[
ödex
]=
b
;

88 
	}
}

	@table.h

1 #i‚de‡
TABLE_H


2 
	#TABLE_H


	)

12 
TAB_èbÀ_
 *
	tTAB_èbÀ
;

15 
TAB_èbÀ
 
TAB_em±y
();

19 
TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
);

22 *
TAB_look
(
TAB_èbÀ
 
t
, *
key
);

26 *
TAB_p›
(
TAB_èbÀ
 
t
);

32 
TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
));

	@temp.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~"utû.h
"

12 
	~"symbﬁ.h
"

13 
	~"ãmp.h
"

14 
	~"èbÀ.h
"

16 
	sTemp_ãmp_
 {
	mnum
; 
boﬁ
 
	m•ûÀd
;};

18 
	$Temp_öt
(
Temp_ãmp
 
t
)

20  
t
->
num
;

21 
	}
}

23 
°rög
 
	$Temp_œbñ°rög
(
Temp_œbñ
 
s
)

24 { 
	`S_«me
(
s
);

25 
	}
}

27 
	gœbñs
 = 0;

29 
Temp_œbñ
 
	$Temp_√wœbñ
()

30 {
buf
[100];

31 
	`•rötf
(
buf
,"L%d",
œbñs
++);

32  
	`Temp_«medœbñ
(
	`Såög
(
buf
));

33 
	}
}

36 
Temp_œbñ
 
	$Temp_«medœbñ
(
°rög
 
s
)

37 { 
	`S_Symbﬁ
(
s
);

38 
	}
}

40 
	gãmps
 = 100;

42 
Temp_ãmp
 
	$Temp_√wãmp
()

43 {
Temp_ãmp
 
p
 = (Temp_ãmpË
	`checked_mÆloc
( (*p));

44 
p
->
num
=
ãmps
++;

45 {
r
[16];

46 
	`•rötf
(
r
, "%d", 
p
->
num
);

47 
	`Temp_íãr
(
	`Temp_«me
(), 
p
, 
	`Såög
(
r
));

49  
p
;

50 
	}
}

54 
	sTemp_m≠_
 {
TAB_èbÀ
 
	mèb
; 
Temp_m≠
 
	mundî
;};

57 
Temp_m≠
 
	$Temp_«me
() {

58 
Temp_m≠
 
m
 = 
NULL
;

59 i‡(!
m
Ëm=
	`Temp_em±y
();

60  
m
;

61 
	}
}

63 
Temp_m≠
 
	$√wM≠
(
TAB_èbÀ
 
èb
, 
Temp_m≠
 
undî
) {

64 
Temp_m≠
 
m
 = 
	`checked_mÆloc
((*m));

65 
m
->
èb
=tab;

66 
m
->
undî
=under;

67  
m
;

68 
	}
}

70 
Temp_m≠
 
	$Temp_em±y
() {

71  
	`√wM≠
(
	`TAB_em±y
(), 
NULL
);

72 
	}
}

74 
Temp_m≠
 
	$Temp_œyîM≠
(
Temp_m≠
 
ovî
, Temp_m≠ 
undî
) {

75 i‡(
ovî
==
NULL
)

76  
undî
;

77  
	`√wM≠
(
ovî
->
èb
, 
	`Temp_œyîM≠
(ovî->
undî
, under));

78 
	}
}

80 
	$Temp_íãr
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
, 
°rög
 
s
) {

81 
	`as£π
(
m
 && m->
èb
);

82 
	`TAB_íãr
(
m
->
èb
,
t
,
s
);

83 
	}
}

85 
°rög
 
	$Temp_look
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
) {

86 
°rög
 
s
;

87 
	`as£π
(
m
 && m->
èb
);

88 
s
 = 
	`TAB_look
(
m
->
èb
, 
t
);

89 i‡(
s
)  s;

90 i‡(
m
->
undî
Ë 
	`Temp_look
(m->undî, 
t
);

91  
NULL
;

92 
	}
}

94 
Temp_ãmpLi°
 
	$Temp_TempLi°
(
Temp_ãmp
 
h
, 
Temp_ãmpLi°
 
t
)

95 {
Temp_ãmpLi°
 
p
 = (Temp_ãmpLi°Ë
	`checked_mÆloc
( (*p));

96 
p
->
hód
=
h
;Ö->
èû
=
t
;

97  
p
;

98 
	}
}

100 
boﬁ
 
	$Temp_In_ãmpLi°
(
Temp_ãmp
 
t
, 
Temp_ãmpLi°
 
li°
){

101 ; 
li°
 !
NULL
;Üi° =Üi°->
èû
){

102 if(
t
 =
li°
->
hód
)

103  
TRUE
;

105  
FALSE
;

106 
	}
}

108 
Temp_ãmpLi°
 
	$Temp_Uni⁄_ãmpLi°
(
Temp_ãmpLi°
 
l
, Temp_ãmpLi° 
r
){

109 
Temp_ãmpLi°
 
ªsu…
 = 
l
;

110 
r
){

111 if(!
	`Temp_In_ãmpLi°
(
r
->
hód
, 
l
))

112 
ªsu…
 = 
	`Temp_TempLi°
(
r
->
hód
,Ñesult);

113 
r
 =Ñ->
èû
;

115  
ªsu…
;

116 
	}
}

118 
Temp_ãmpLi°
 
	$Temp_Sub_ãmpLi°
(
Temp_ãmpLi°
 
l
, Temp_ãmpLi° 
r
){

119 
Temp_ãmpLi°
 
ªsu…
 = 
NULL
;

120 
l
){

121 if(!
	`Temp_In_ãmpLi°
(
l
->
hód
, 
r
))

122 
ªsu…
 = 
	`Temp_TempLi°
(
l
->
hód
,Ñesult);

123 
l
 =Ü->
èû
;

125  
ªsu…
;

126 
	}
}

128 
boﬁ
 
	$Temp_EquÆ_ãmpLi°
(
Temp_ãmpLi°
 
l
, Temp_ãmpLi° 
r
){

129 
Temp_ãmpLi°
 
li°
;

130 
li°
 = 
l
;Üi° !
NULL
;Üi° =Üi°->
èû
){

131 if(!
	`Temp_In_ãmpLi°
(
li°
->
hód
, 
r
))

132  
FALSE
;

134 
li°
 = 
r
;Üi° !
NULL
;Üi° =Üi°->
èû
){

135 if(!
	`Temp_In_ãmpLi°
(
li°
->
hód
, 
l
))

136  
FALSE
;

138  
TRUE
;

139 
	}
}

141 
Temp_ãmpLi°
 
	$Temp_Rïœ˚_ãmpLi°
(
Temp_ãmpLi°
 
li°
, 
Temp_ãmp
 
ﬁd
, Temp_ãm∞
√w
){

142 if(
li°
 !
NULL
){

143 if(
li°
->
hód
 =
ﬁd
)

145  
	`Temp_TempLi°
(
√w
, 
	`Temp_Rïœ˚_ãmpLi°
(
li°
->
èû
, 
ﬁd
,Çew));

147  
	`Temp_TempLi°
(
li°
->
hód
, 
	`Temp_Rïœ˚_ãmpLi°
÷i°->
èû
, 
ﬁd
, 
√w
));

149  
NULL
;

151 
	}
}

154 
Temp_œbñLi°
 
	$Temp_LabñLi°
(
Temp_œbñ
 
h
, 
Temp_œbñLi°
 
t
)

155 {
Temp_œbñLi°
 
p
 = (Temp_œbñLi°Ë
	`checked_mÆloc
( (*p));

156 
p
->
hód
=
h
;Ö->
èû
=
t
;

157  
p
;

158 
	}
}

161 
FILE
 *
	goutfûe
;

162 
	$showô
(
Temp_ãmp
 
t
, 
°rög
 
r
) {

163 
	`Ârötf
(
outfûe
, "t%d -> %s\n", 
t
->
num
, 
r
);

164 
	}
}

166 
	$Temp_dumpM≠
(
FILE
 *
out
, 
Temp_m≠
 
m
) {

167 
outfûe
=
out
;

168 
	`TAB_dump
(
m
->
èb
,((*)(*, *))
showô
);

169 i‡(
m
->
undî
) {

170 
	`Ârötf
(
out
,"---------\n");

171 
	`Temp_dumpM≠
(
out
,
m
->
undî
);

173 
	}
}

	@temp.h

6 #i‚de‡
TEMP_H


7 
	#TEMP_H


	)

9 
Temp_ãmp_
 *
	tTemp_ãmp
;

10 
Temp_ãmp
 
Temp_√wãmp
();

11 
Temp_öt
(
Temp_ãmp
);

13 
Temp_ãmpLi°_
 *
	tTemp_ãmpLi°
;

14 
	sTemp_ãmpLi°_
 { 
Temp_ãmp
 
	mhód
; 
Temp_ãmpLi°
 
	mèû
;};

15 
Temp_ãmpLi°
 
Temp_TempLi°
(
Temp_ãmp
 
h
, Temp_ãmpLi° 
t
);

16 
Temp_ãmpLi°
 
Temp_Uni⁄_ãmpLi°
(Temp_ãmpLi° 
l
, Temp_ãmpLi° 
r
);

17 
Temp_ãmpLi°
 
Temp_Sub_ãmpLi°
(Temp_ãmpLi° 
l
, Temp_ãmpLi° 
r
);

18 
boﬁ
 
Temp_EquÆ_ãmpLi°
(
Temp_ãmpLi°
 
l
, Temp_ãmpLi° 
r
);

19 
boﬁ
 
Temp_In_ãmpLi°
(
Temp_ãmp
 
t
, 
Temp_ãmpLi°
 
li°
);

20 
Temp_ãmpLi°
 
Temp_Rïœ˚_ãmpLi°
(Temp_ãmpLi° 
li°
, 
Temp_ãmp
 
ﬁd
, Temp_ãm∞
√w
);

24 
S_symbﬁ
 
	tTemp_œbñ
;

25 
Temp_œbñ
 
Temp_√wœbñ
();

26 
Temp_œbñ
 
Temp_«medœbñ
(
°rög
 
«me
);

27 
°rög
 
Temp_œbñ°rög
(
Temp_œbñ
 
s
);

29 
Temp_œbñLi°_
 *
	tTemp_œbñLi°
;

30 
	sTemp_œbñLi°_
 { 
Temp_œbñ
 
	mhód
; 
Temp_œbñLi°
 
	mèû
;};

31 
Temp_œbñLi°
 
Temp_LabñLi°
(
Temp_œbñ
 
h
, Temp_œbñLi° 
t
);

33 
Temp_m≠_
 *
	tTemp_m≠
;

34 
Temp_m≠
 
Temp_em±y
();

35 
Temp_m≠
 
Temp_œyîM≠
(Temp_m≠ 
ovî
, Temp_m≠ 
undî
);

36 
Temp_íãr
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
, 
°rög
 
s
);

37 
°rög
 
Temp_look
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
);

38 
Temp_dumpM≠
(
FILE
 *
out
, 
Temp_m≠
 
m
);

40 
Temp_m≠
 
Temp_«me
();

	@tiger.y

2 
	~<°dio.h
>

3 
	~"utû.h
"

4 
	~"îr‹msg.h
"

5 
	~"symbﬁ.h
"

6 
	~"absyn.h
"

8 
yyÀx
();

10 
A_exp
 
	gabsyn_roŸ
;

12 
	$yyîr‹
(*
s
)

14 
	`EM_îr‹
(
EM_tokPos
, "%s", 
s
);

15 
	}
}

20 
pos
;

21 
ivÆ
;

22 
°rög
 
svÆ
;

23 
A_exp
 
exp
;

24 
A_expLi°
 
ex∂i°
;

25 
A_v¨
 
v¨
;

26 
A_decLi°
 
de˛i°
;

27 
A_dec
 
dec
;

28 
A_efõldLi°
 
efõldli°
;

29 
A_efõld
 
efõld
;

30 
A_«mëy
 
«mëy
;

31 
A_«mëyLi°
 
«mëyli°
;

32 
A_fõldLi°
 
fõldli°
;

33 
A_fõld
 
fõld
;

34 
A_fundecLi°
 
funde˛i°
;

35 
A_fundec
 
fundec
;

36 
A_ty
 
ty
;

39 %
tokí
 <
svÆ
> 
ID
 
STRING


40 %
tokí
 <
ivÆ
> 
INT


42 %
tokí


43 
COMMA
 
COLON
 
SEMICOLON
 
LPAREN
 
RPAREN
 
LBRACK
 
RBRACK


44 
LBRACE
 
RBRACE
 
DOT


45 
PLUS
 
MINUS
 
TIMES
 
DIVIDE
 
EQ
 
NEQ
 
LT
 
LE
 
GT
 
GE
 
UMINUS


46 
AND
 
OR
 
ASSIGN


47 
ARRAY
 
IF
 
THEN
 
ELSE
 
WHILE
 
FOR
 
TO
 
DO
 
LET
 
IN
 
END
 
OF


48 
BREAK
 
NIL


49 
FUNCTION
 
VAR
 
TYPE


51 %
ty≥
 <
exp
>Éxp

52 %
ty≥
 <
ex∂i°
> 
∑øms
 
∑øm
 
£quícög_exps
 
£quícög
 
exp£q


53 %
ty≥
 <
v¨
> 
lvÆue


54 %
ty≥
 <
de˛i°
> 
decs


55 %
ty≥
 <
dec
> de¯
v¨dec


56 %
ty≥
 <
efõldli°
> 
ªc‹ds
 
ªc‹d


58 %
ty≥
 <
«mëyli°
> 
ty≥decs


59 %
ty≥
 <
«mëy
> 
ty≥dec


60 %
ty≥
 <
fõldli°
> 
ty≥fõlds
 
ty≥fõld


61 %
ty≥
 <
ty
>Åy

62 %
ty≥
 <
funde˛i°
> 
funcdecs


63 %
ty≥
 <
fundec
> 
funcdec


65 %
°¨t
 
¥ogøm


67 %
n⁄assoc
 
DO


68 %
n⁄assoc
 
THEN


69 %
n⁄assoc
 
ELSE


70 %
n⁄assoc
 
OF


71 %
n⁄assoc
 
ASSIGN


73 %
À·
 
OR


74 %
À·
 
AND


75 %
n⁄assoc
 
EQ
 
NEQ
 
LT
 
GT
 
LE
 
GE


76 %
À·
 
PLUS
 
MINUS


77 %
À·
 
TIMES
 
DIVIDE


78 %
À·
 
UMINUS


81 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

83 
¥ogøm
: 
exp
 {
absyn_roŸ
 = 
$1
;};

85 
exp
: 
lvÆue
 {
$$
=
	`A_V¨Exp
(
EM_tokPos
, 
$1
);}

86 | 
NIL
 {
$$
=
	`A_NûExp
(
EM_tokPos
);}

88 | 
LPAREN
 
RPAREN
 {
$$
=
	`A_SeqExp
(
EM_tokPos
, 
NULL
);}

90 | 
INT
 {
$$
=
	`A_I¡Exp
(
EM_tokPos
, 
$1
);}

91 | 
STRING
 {
$$
=
	`A_SåögExp
(
EM_tokPos
, 
$1
);}

92 | 
ID
 
LPAREN
 
∑øms
 
RPAREN
 {
$$
=
	`A_CÆlExp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), 
$3
);}

95 | 
exp
 
PLUS
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_∂usOp
, 
$1
, 
$3
);}

96 | 
exp
 
MINUS
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, 
$1
, 
$3
);}

97 | 
exp
 
TIMES
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_timesOp
, 
$1
, 
$3
);}

98 | 
exp
 
DIVIDE
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_divideOp
, 
$1
, 
$3
);}

99 | 
exp
 
EQ
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_eqOp
, 
$1
, 
$3
);}

100 | 
exp
 
NEQ
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_√qOp
, 
$1
, 
$3
);}

101 | 
exp
 
LT
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_…Op
, 
$1
, 
$3
);}

102 | 
exp
 
LE
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_ÀOp
, 
$1
, 
$3
);}

103 | 
exp
 
GT
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_gtOp
, 
$1
, 
$3
);}

104 | 
exp
 
GE
Éx∞{
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_geOp
, 
$1
, 
$3
);}

107 | 
MINUS
 
exp
 %
¥ec
 
UMINUS
 {
$$
=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, 
	`A_I¡Exp
(EM_tokPos, 0), 
$2
);}

109 | 
ID
 
LBRACE
 
ªc‹ds
 
RBRACE
 {
$$
=
	`A_Rec‹dExp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), 
$3
);}

110 | 
LPAREN
 
exp
 
RPAREN
 {
$$
=
$2
;}

111 | 
LPAREN
 
exp£q
 
RPAREN
 {
$$
=
	`A_SeqExp
(
EM_tokPos
, 
$2
);}

112 | 
lvÆue
 
ASSIGN
 
exp
 {
$$
=
	`A_AssignExp
(
EM_tokPos
, 
$1
, 
$3
);}

114 | 
IF
 
exp
 
THEN
Éx∞
ELSE
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$2
, 
$4
, 
$6
);}

115 | 
IF
 
exp
 
THEN
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$2
, 
$4
, 
NULL
);}

117 | 
WHILE
 
exp
 
DO
Éx∞{
$$
=
	`A_WhûeExp
(
EM_tokPos
, 
$2
, 
$4
);}

118 | 
BREAK
 {
$$
=
	`A_BªakExp
(
EM_tokPos
);}

119 | 
FOR
 
ID
 
ASSIGN
 
exp
 
TO
Éx∞
DO
Éx∞{
$$
=
	`A_F‹Exp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$2
), 
$4
, 
$6
, 
$8
);}

120 | 
LET
 
decs
 
IN
 
£quícög_exps
 
END
 {
$$
=
	`A_LëExp
(
EM_tokPos
, 
$2
, 
	`A_SeqExp
(EM_tokPos, 
$4
));}

121 | 
ID
 
LBRACK
 
exp
 
RBRACK
 
OF
Éx∞{
$$
=
	`A_AºayExp
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), 
$3
, 
$6
);}

124 | 
exp
 
AND
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$1
, 
$3
, 
	`A_I¡Exp
(EM_tokPos, 0));}

125 | 
exp
 
OR
Éx∞{
$$
=
	`A_IfExp
(
EM_tokPos
, 
$1
, 
	`A_I¡Exp
(EM_tokPos, 1), 
$3
);}

128 
lvÆue
: 
ID
 {
$$
=
	`A_Sim∂eV¨
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
));}

129 | 
lvÆue
 
DOT
 
ID
 {
$$
=
	`A_FõldV¨
(
EM_tokPos
, 
$1
, 
	`S_Symbﬁ
(
$3
));}

130 | 
lvÆue
 
LBRACK
 
exp
 
RBRACK
 {
$$
=
	`A_Subs¸ùtV¨
(
EM_tokPos
, 
$1
, 
$3
);}

131 | 
ID
 
LBRACK
 
exp
 
RBRACK
 {
$$
=
	`A_Subs¸ùtV¨
(
EM_tokPos
, 
	`A_Sim∂eV¨
(EM_tokPos, 
	`S_Symbﬁ
(
$1
)), 
$3
);}

135 
∑øms
: {
$$
=
NULL
;}

136 | 
∑øm
 {
$$
=
$1
;}

139 
∑øm
: 
exp
 {
$$
=
	`A_ExpLi°
(
$1
, 
NULL
);}

140 | 
exp
 
COMMA
 
∑øm
 {
$$
=
	`A_ExpLi°
(
$1
, 
$3
);}

143 
ªc‹ds
: {
$$
=
NULL
;}

144 | 
ªc‹d
 {
$$
=
$1
;}

147 
ªc‹d
: 
ID
 
EQ
 
exp
 {
$$
=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
(
$1
), 
$3
), 
NULL
);}

148 | 
ID
 
EQ
 
exp
 
COMMA
 
ªc‹d
 {
$$
=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
(
$1
), 
$3
), 
$5
);}

151 
£quícög_exps
: {
$$
=
NULL
;}

152 | 
£quícög
 {
$$
=
$1
;}

155 
£quícög
: 
exp
 {
$$
=
	`A_ExpLi°
(
$1
, 
NULL
);}

156 | 
exp
 
SEMICOLON
 
£quícög
 {
$$
=
	`A_ExpLi°
(
$1
, 
$3
);}

158 
exp£q
: 
exp
 
SEMICOLON
Éx∞{
$$
=
	`A_ExpLi°
(
$1
, A_ExpLi°(
$3
, 
NULL
));}

159 | 
exp
 
SEMICOLON
Éx∞SEMICOLON 
£quícög
 {
$$
=
	`A_ExpLi°
(
$1
, A_ExpLi°(
$3
, 
$5
));}

161 
decs
: {
$$
=
NULL
;}

162 | 
dec
 
decs
 {
$$
=
	`A_DecLi°
(
$1
, 
$2
);}

165 
dec
: 
funcdecs
 {
$$
=
	`A_Fun˘i⁄Dec
(
EM_tokPos
, 
$1
);}

166 | 
v¨dec
 {
$$
=
$1
;}

167 | 
ty≥decs
 {
$$
=
	`A_Ty≥Dec
(
EM_tokPos
, 
$1
);}

170 
v¨dec
: 
VAR
 
ID
 
ASSIGN
 
exp
 {
$$
=
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
(
$2
),S_Symbﬁ(""),
$4
);}

171 | 
VAR
 
ID
 
COLON
 ID 
ASSIGN
 
exp
 {
$$
=
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
(
$2
),S_Symbﬁ(
$4
),
$6
);}

174 
funcdecs
: {
$$
=
NULL
;}

175 | 
funcdec
 
funcdecs
 {
$$
=
	`A_FundecLi°
(
$1
, 
$2
);}

178 
funcdec
: 
FUNCTION
 
ID
 
LPAREN
 
ty≥fõlds
 
RPAREN
 
EQ
 
exp
 {
$$
=
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
(
$2
), 
$4
, S_Symbﬁ(""), 
$7
);}

179 | 
FUNCTION
 
ID
 
LPAREN
 
ty≥fõlds
 
RPAREN
 
COLON
 ID 
EQ
 
exp
 {
$$
=
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
(
$2
), 
$4
, S_Symbﬁ(
$7
), 
$9
);}

182 
ty≥decs
: 
ty≥dec
 {
$$
=
	`A_NamëyLi°
(
$1
, 
NULL
);}

183 | 
ty≥dec
 
ty≥decs
 {
$$
=
	`A_NamëyLi°
(
$1
, 
$2
);}

186 
ty≥dec
: 
TYPE
 
ID
 
EQ
 
ty
 {
$$
=
	`A_Namëy
(
	`S_Symbﬁ
(
$2
), 
$4
);}

189 
ty
: 
ID
 {
$$
=
	`A_NameTy
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
));}

190 | 
LBRACE
 
ty≥fõlds
 
RBRACE
 {
$$
=
	`A_Rec‹dTy
(
EM_tokPos
, 
$2
);}

191 | 
ARRAY
 
OF
 
ID
 {
$$
=
	`A_AºayTy
(
EM_tokPos
, 
	`S_Symbﬁ
(
$3
));}

194 
ty≥fõlds
: {
$$
=
NULL
;}

195 | 
ty≥fõld
 {
$$
=
$1
;}

198 
ty≥fõld
: 
ID
 
COLON
 ID {
$$
=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), S_Symbﬁ(
$3
)), 
NULL
);}

199 | 
ID
 
COLON
 ID 
COMMA
 
ty≥fõld
 {
$$
=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
(
$1
), S_Symbﬁ(
$3
)), 
$5
);}

	@translate.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"èbÀ.h
"

4 
	~"symbﬁ.h
"

5 
	~"absyn.h
"

6 
	~"ãmp.h
"

7 
	~"åì.h
"

8 
	~"¥öâªe.h
"

9 
	~"‰ame.h
"

10 
	~"å™¶©e.h
"

15 
Tr_Àvñ
 
	gouãrmo°
 = 
NULL
;

17 
F_‰agLi°
 
	g‰ag_èbÀ
 = 
NULL
;

22 
Tr_ac˚ss
 
	$Tr_Ac˚ss
(
Tr_Àvñ
 
Àvñ
, 
F_ac˚ss
 
ac˚ss
){

23 
Tr_ac˚ss
 
a
 = (Tr_ac˚ssË
	`checked_mÆloc
((*a));

24 
a
->
Àvñ
 =Üevel;

25 
a
->
ac˚ss
 =áccess;

26  
a
;

27 
	}
}

30 
Tr_ac˚ssLi°
 
	$Tr_Ac˚ssLi°
(
Tr_ac˚ss
 
hód
, 
Tr_ac˚ssLi°
 
èû
){

31 
Tr_ac˚ssLi°
 
li°
 = (Tr_ac˚ssLi°)
	`checked_mÆloc
((*list));

32 
li°
->
hód
 = head;

33 
li°
->
èû
 =Åail;

34  
li°
;

35 
	}
}

37 
Tr_ac˚ssLi°
 
	$makeTr_f‹mÆs
(
Tr_Àvñ
 
Àvñ
, 
F_ac˚ssLi°
 
F_f‹mÆs
){

38 if(
F_f‹mÆs
){

39  
	`Tr_Ac˚ssLi°
(
	`Tr_Ac˚ss
(
Àvñ
, 
F_f‹mÆs
->
hód
), 
	`makeTr_f‹mÆs
÷evñ, F_f‹mÆs->
èû
));

41  
NULL
;

44 
	}
}

47 
Tr_ac˚ssLi°
 
	$Tr_f‹mÆs
(
Tr_Àvñ
 
Àvñ
)

49 
F_‰ame
 
‰ame
 = 
Àvñ
->frame;

50 
F_ac˚ssLi°
 
f‹mÆs
 = 
	`F_f‹mÆs
(
‰ame
)->
èû
;

51  
	`makeTr_f‹mÆs
(
Àvñ
, 
f‹mÆs
);

52 
	}
}

55 
Tr_ac˚ss
 
	$Tr_ÆlocLoˇl
(
Tr_Àvñ
 
Àvñ
, 
boﬁ
 
esˇ≥
)

57 
F_ac˚ss
 
F_a
 = 
	`F_ÆlocLoˇl
(
Àvñ
->
‰ame
, 
esˇ≥
);

58  
	`Tr_Ac˚ss
(
Àvñ
, 
F_a
);

59 
	}
}

62 
Tr_Àvñ
 
	$Tr_√wLevñ
(
Tr_Àvñ
 
∑ª¡
, 
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆ_esˇ≥
)

64 
Tr_Àvñ
 
Àvñ
 = (Tr_ÀvñË
	`checked_mÆloc
((*level));

65 
Àvñ
->
∑ª¡
 =Öarent;

67 
Àvñ
->
‰ame
 = 
	`F_√wFøme
(
«me
, 
	`U_BoﬁLi°
(
TRUE
, 
f‹mÆ_esˇ≥
));

69  
Àvñ
;

70 
	}
}

73 
Tr_Àvñ
 
	$Tr_ouãrmo°
(){

74 if(
ouãrmo°
 !
NULL
)

75  
ouãrmo°
;

77 
ouãrmo°
 = (
Tr_Àvñ
Ë
	`checked_mÆloc
((*outermost));

78 
ouãrmo°
->
∑ª¡
 = 
NULL
;

79 
ouãrmo°
->
‰ame
 = 
	`F_√wFøme
(
	`Temp_√wœbñ
(), 
NULL
);

81  
ouãrmo°
;

82 
	}
}

85 
Tr_expLi°
 
	$Tr_ExpLi°
(
Tr_exp
 
hód
, 
Tr_expLi°
 
èû
){

86 
Tr_expLi°
 
li°
 = (Tr_expLi°Ë
	`checked_mÆloc
((*list));

87 
li°
->
hód
 = head;

88 
li°
->
èû
 =Åail;

89  
li°
;

90 
	}
}

92 
∑tchLi°
 
	$P©chLi°
(
Temp_œbñ
 *
hód
, 
∑tchLi°
 
èû
)

94 
∑tchLi°
 
li°
;

96 
li°
 = (
∑tchLi°
)
	`checked_mÆloc
((
∑tchLi°_
));

97 
li°
->
hód
 = head;

98 
li°
->
èû
 =Åail;

99  
li°
;

100 
	}
}

102 
	$doP©ch
(
∑tchLi°
 
tLi°
, 
Temp_œbñ
 
œbñ
)

104 ; 
tLi°
;ÅLi° =ÅLi°->
èû
)

105 *(
tLi°
->
hód
Ë
œbñ
;

106 
	}
}

108 
∑tchLi°
 
	$joöP©ch
(
∑tchLi°
 
fú°
,Ö©chLi° 
£c⁄d
)

110 if(!
fú°
Ë 
£c⁄d
;

111 ; 
fú°
->
èû
; first = first->tail);

112 
fú°
->
èû
 = 
£c⁄d
;

113  
fú°
;

114 
	}
}

118 
	$Tr_¥ocE¡ryExô
(
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
body
, 
Tr_ac˚ssLi°
 
f‹mÆs
){

120 
	}
}

122 
F_‰agLi°
 
	$Tr_gëResu…
(){

123  
‰ag_èbÀ
;

124 
	}
}

128 
T_exp
 
	$èrgëFP
(
Tr_Àvñ
 
now_Àvñ
, Tr_Àvñ 
èrgë_Àvñ
){

129 
T_exp
 
Â
 = 
	`T_Temp
(
	`F_FP
());

130 
now_Àvñ
 &&Çow_Àvñ !
èrgë_Àvñ
){

131 
Â
 = 
	`F_Exp
(
	`F_f‹mÆs
(
now_Àvñ
->
‰ame
)->
hód
, fp);

132 
now_Àvñ
 =Çow_Àvñ->
∑ª¡
;

134  
Â
;

135 
	}
}

137 
Tr_exp
 
	$Tr_Ex
(
T_exp
 
ex
)

139 
Tr_exp
 
e
 = (Tr_expË
	`checked_mÆloc
((*É));

140 
e
->
köd
 = 
Tr_ex
;

141 
e
->
u
.
ex
 =Éx;

142  
e
;

143 
	}
}

145 
Tr_exp
 
	$Tr_Nx
(
T_°m
 
nx
){

146 
Tr_exp
 
e
 = (Tr_expË
	`checked_mÆloc
((*e));

147 
e
->
köd
 = 
Tr_nx
;

148 
e
->
u
.
nx
 =Çx;

149  
e
;

150 
	}
}

152 
Tr_exp
 
	$Tr_Cx
(
Cx
 
cx
){

153 
Tr_exp
 
e
 = (Tr_expË
	`checked_mÆloc
((*e));

154 
e
->
köd
 = 
Tr_cx
;

155 
e
->
u
.
cx
 = cx;

156  
e
;

157 
	}
}

159 
T_exp
 
	$unEx
(
Tr_exp
 
e
){

160 
e
->
köd
)

162 
Tr_ex
:

163  
e
->
u
.
ex
;

165 
Tr_cx
:

167 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

168 
Temp_œbñ
 
t
 = 
	`Temp_√wœbñ
(), 
f
 = Temp_newlabel();

169 
	`doP©ch
(
e
->
u
.
cx
.
åues
, 
t
);

170 
	`doP©ch
(
e
->
u
.
cx
.
Ál£s
, 
f
);

180  
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`T_C⁄°
(1)),

181 
	`T_E£q
(
e
->
u
.
cx
.
°m
,

182 
	`T_E£q
(
	`T_Labñ
(
f
),

183 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`T_C⁄°
(0)),

184 
	`T_E£q
(
	`T_Labñ
(
t
),

185 
	`T_Temp
(
r
)

193 
Tr_nx
:

194  
	`T_E£q
(
e
->
u
.
nx
, 
	`T_C⁄°
(0));

197 
	`as£π
(0);

198 
	}
}

200 
T_°m
 
	$unNx
(
Tr_exp
 
e
){

201 
e
->
köd
)

203 
Tr_ex
:

204  
	`T_Exp
(
e
->
u
.
ex
);

205 
Tr_nx
:

206  
e
->
u
.
nx
;

207 
Tr_cx
:

209 
Temp_œbñ
 
d⁄e
 = 
	`Temp_√wœbñ
();

210 
	`doP©ch
(
e
->
u
.
cx
.
åues
, 
d⁄e
);

211 
	`doP©ch
(
e
->
u
.
cx
.
Ál£s
, 
d⁄e
);

212  
	`T_Seq
(
e
->
u
.
cx
.
°m
, 
	`T_Labñ
(
d⁄e
));

215 
	`as£π
(0);

217 
	}
}

219 
Cx
 
	$unCx
(
Tr_exp
 
e
)

221 
e
->
köd
)

223 
Tr_ex
:

225 
Cx
 
cx
;

226 
cx
.
°m
 = 
	`T_Cjump
(
T_√
, 
e
->
u
.
ex
, 
	`T_C⁄°
(0), 
NULL
, NULL);

227 
cx
.
åues
 = 
	`P©chLi°
(&(cx.
°m
->
u
.
CJUMP
.
åue
), 
NULL
);

228 
cx
.
Ál£s
 = 
	`P©chLi°
(&(cx.
°m
->
u
.
CJUMP
.
Ál£
), 
NULL
);

229  
cx
;

231 
Tr_nx
:

232 
	`as£π
(0);

234 
Tr_cx
:

235  
e
->
u
.
cx
;

237 
	`as£π
(0);

238 
	}
}

241 
Tr_exp
 
	$Tr_N›
(){

242  
	`Tr_Ex
(
	`T_C⁄°
(0));

243 
	}
}

245 
Tr_exp
 
	$Tr_Nû
(){

246  
	`Tr_Ex
(
	`T_C⁄°
(0));

248 
	}
}

250 
Tr_exp
 
	$Tr_I¡
(
v
){

251  
	`Tr_Ex
(
	`T_C⁄°
(
v
));

252 
	}
}

254 
Tr_exp
 
	$Tr_Såög
(
°rög
 
s
){

255 
Temp_œbñ
 
œbñ
 = 
	`Temp_√wœbñ
();

256 
F_‰ag
 
‰ag
 = 
	`F_SåögFøg
(
œbñ
, 
s
);

257 
‰ag_èbÀ
 = 
	`F_FøgLi°
(
‰ag
, frag_table);

258  
	`Tr_Ex
(
	`T_Name
(
œbñ
));

260 
	}
}

261 
Tr_exp
 
	$Tr_Jump
(
Temp_œbñ
 
œbñ
){

262  
	`Tr_Nx
(
	`T_Jump
(
	`T_Name
(
œbñ
), 
	`Temp_LabñLi°
÷abñ, 
NULL
)));

263 
	}
}

264 
Tr_exp
 
	$Tr_CÆl
(
Tr_Àvñ
 
èrgë_Àvñ
, 
Temp_œbñ
 
œbñ
, 
Tr_expLi°
 
∑øms
, Tr_Àvñ 
cur_Àvñ
){

266 
T_expLi°
 
∑øms_t
 = 
NULL
;

267 
∑øms
){

268 
∑øms_t
 = 
	`T_ExpLi°
(
	`unEx
(
∑øms
->
hód
),Öarams_t);

269 
∑øms
 =Ö¨ams->
èû
;

272 if(
èrgë_Àvñ
 =
ouãrmo°
){

274  
	`Tr_Ex
(
	`T_CÆl
(
	`T_Name
(
œbñ
), 
∑øms_t
));

277  
	`Tr_Ex
(
	`T_CÆl
(
	`T_Name
(
œbñ
), 
	`T_ExpLi°
(
	`èrgëFP
(
cur_Àvñ
, 
èrgë_Àvñ
->
∑ª¡
), 
∑øms_t
)));

278 
	}
}

281 
Tr_exp
 
	$Tr_OpArôhm
(
A_›î
 
›î
, 
Tr_exp
 
À·
, Tr_ex∞
right
){

282 
T_exp
 
À·_t
 = 
	`unEx
(
À·
);

283 
T_exp
 
right_t
 = 
	`unEx
(
right
);

284 
T_exp
 
ªsu…
;

286 
›î
)

288 
A_∂usOp
:

289 
ªsu…
 = 
	`T_Bö›
(
T_∂us
, 
À·_t
, 
right_t
);

291 
A_möusOp
:

292 
ªsu…
 = 
	`T_Bö›
(
T_möus
, 
À·_t
, 
right_t
);

294 
A_timesOp
:

295 
ªsu…
 = 
	`T_Bö›
(
T_mul
, 
À·_t
, 
right_t
);

297 
A_divideOp
 :

298 
ªsu…
 = 
	`T_Bö›
(
T_div
, 
À·_t
, 
right_t
);

301 
	`as£π
(0);

304  
	`Tr_Ex
(
ªsu…
);

305 
	}
}

308 
Tr_exp
 
	$Tr_OpCmp
(
A_›î
 
›î
, 
Tr_exp
 
À·
, Tr_ex∞
right
, 
isSå
){

309 
T_exp
 
À·_t
;

310 
T_exp
 
right_t
;

311 
Cx
 
ªsu…
;

313 if(
isSå
){

314 
T_expLi°
 
∑øms_t
 = 
	`T_ExpLi°
(
	`unEx
(
À·
), T_ExpLi°(unEx(
right
), 
NULL
));

315 
À·_t
 = 
	`F_exã∫ÆCÆl
("SåCmp", 
∑øms_t
);

316 
right_t
 = 
	`T_C⁄°
(0);

318 
À·_t
 = 
	`unEx
(
À·
);

319 
right_t
 = 
	`unEx
(
right
);

322 
›î
)

324 
A_eqOp
:

325 
ªsu…
.
°m
 = 
	`T_Cjump
(
T_eq
, 
À·_t
, 
right_t
, 
NULL
, NULL);

327 
A_√qOp
:

328 
ªsu…
.
°m
 = 
	`T_Cjump
(
T_√
, 
À·_t
, 
right_t
, 
NULL
, NULL);

330 
A_…Op
:

331 
ªsu…
.
°m
 = 
	`T_Cjump
(
T_…
, 
À·_t
, 
right_t
, 
NULL
, NULL);

333 
A_ÀOp
:

334 
ªsu…
.
°m
 = 
	`T_Cjump
(
T_À
, 
À·_t
, 
right_t
, 
NULL
, NULL);

336 
A_gtOp
:

337 
ªsu…
.
°m
 = 
	`T_Cjump
(
T_gt
, 
À·_t
, 
right_t
, 
NULL
, NULL);

339 
A_geOp
:

340 
ªsu…
.
°m
 = 
	`T_Cjump
(
T_ge
, 
À·_t
, 
right_t
, 
NULL
, NULL);

343 
	`as£π
(0);

345 
ªsu…
.
åues
 = 
	`P©chLi°
(&‘esu….
°m
->
u
.
CJUMP
.
åue
), 
NULL
);

346 
ªsu…
.
Ál£s
 = 
	`P©chLi°
(&‘esu….
°m
->
u
.
CJUMP
.
Ál£
), 
NULL
);

347  
	`Tr_Cx
(
ªsu…
);

348 
	}
}

351 
Tr_exp
 
	$Tr_Assign
(
Tr_exp
 
v¨
, Tr_ex∞
vÆue
){

352  
	`Tr_Nx
(
	`T_Move
(
	`unEx
(
v¨
), unEx(
vÆue
)));

353 
	}
}

356 
Tr_exp
 
	$Tr_Seq
(
Tr_exp
 
À·
, Tr_ex∞
right
){

357  
	`Tr_Nx
(
	`T_Seq
(
	`unNx
(
À·
), unNx(
right
)));

358 
	}
}

360 
Tr_exp
 
	$Tr_IfThí
(
Tr_exp
 
ã°
, Tr_ex∞
thí
){

361 
Temp_œbñ
 
t
 = 
	`Temp_√wœbñ
();

362 
Temp_œbñ
 
f
 = 
	`Temp_√wœbñ
();

363 
Cx
 
cx
 = 
	`unCx
(
ã°
);

364 
	`doP©ch
(
cx
.
åues
, 
t
);

365 
	`doP©ch
(
cx
.
Ál£s
, 
f
);

374  
	`Tr_Nx
(
	`T_Seq
(
cx
.
°m
,

375 
	`T_Seq
(
	`T_Labñ
(
t
),

376 
	`T_Seq
(
	`unNx
(
thí
), 
	`T_Labñ
(
f
)

381 
	}
}

382 
Tr_exp
 
	$Tr_IfThíEl£
(
Tr_exp
 
ã°
, Tr_ex∞
thí
, Tr_ex∞
ñ£e
){

383 
Cx
 
cx
 = 
	`unCx
(
ã°
);

384 
Temp_œbñ
 
t
 = 
	`Temp_√wœbñ
();

385 
Temp_œbñ
 
f
 = 
	`Temp_√wœbñ
();

386 
Temp_œbñ
 
d⁄e
 = 
	`Temp_√wœbñ
();

387 
	`doP©ch
(
cx
.
åues
, 
t
);

388 
	`doP©ch
(
cx
.
Ál£s
, 
f
);

390 
Temp_ãmp
 
r
 = 
	`Temp_√wãmp
();

403  
	`Tr_Ex
(
	`T_E£q
(
cx
.
°m
,

404 
	`T_E£q
(
	`T_Labñ
(
t
),

405 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`unEx
(
thí
)),

406 
	`T_E£q
(
	`T_Jump
(
	`T_Name
(
d⁄e
), 
	`Temp_LabñLi°
(d⁄e, 
NULL
)),

407 
	`T_E£q
(
	`T_Labñ
(
f
),

408 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`unEx
(
ñ£e
)),

409 
	`T_E£q
(
	`T_Labñ
(
d⁄e
), 
	`T_Temp
(
r
)

419 
	}
}

422 
Tr_exp
 
	$Tr_Whûe
(
Tr_exp
 
ã°
, Tr_ex∞
body
, 
Temp_œbñ
 
d⁄e
){

423 
Cx
 
cx
 = 
	`unCx
(
ã°
);

424 
Temp_œbñ
 
ã°_œbñ
 = 
	`Temp_√wœbñ
();

425 
Temp_œbñ
 
body_œbñ
 = 
	`Temp_√wœbñ
();

426 
	`doP©ch
(
cx
.
åues
, 
body_œbñ
);

427 
	`doP©ch
(
cx
.
Ál£s
, 
d⁄e
);

438  
	`Tr_Nx
(
	`T_Seq
(
	`T_Labñ
(
ã°_œbñ
),

439 
	`T_Seq
(
cx
.
°m
,

440 
	`T_Seq
(
	`T_Labñ
(
body_œbñ
),

441 
	`T_Seq
(
	`unNx
(
body
),

442 
	`T_Seq
(
	`T_Jump
(
	`T_Name
(
ã°_œbñ
), 
	`Temp_LabñLi°
—e°_œbñ, 
NULL
)), 
	`T_Labñ
(
d⁄e
)

449 
	}
}

451 
Tr_exp
 
	$Tr_F‹
(
Tr_ac˚ss
 
ac˚ss
, 
Tr_Àvñ
 
Àvñ
, 
Tr_exp
 
lo
, Tr_ex∞
hi
, Tr_ex∞
body
, 
Temp_œbñ
 
d⁄e
){

452 
Tr_exp
 
i
 = 
	`Tr_sim∂eV¨
(
ac˚ss
, 
Àvñ
);

453 
Temp_ãmp
 
limô
 = 
	`Temp_√wãmp
();

454 
Temp_œbñ
 
lo›
 = 
	`Temp_√wœbñ
();

455 
Temp_œbñ
 
ö¸
 = 
	`Temp_√wœbñ
();

470  
	`Tr_Nx
(
	`T_Seq
(
	`T_Move
(
	`unEx
(
i
), unEx(
lo
)),

471 
	`T_Seq
(
	`T_Move
(
	`T_Temp
(
limô
), 
	`unEx
(
hi
)),

472 
	`T_Seq
(
	`T_Cjump
(
T_gt
, 
	`unEx
(
i
), 
	`T_Temp
(
limô
), 
d⁄e
, 
lo›
),

473 
	`T_Seq
(
	`T_Labñ
(
lo›
),

474 
	`T_Seq
(
	`unNx
(
body
),

475 
	`T_Seq
(
	`T_Cjump
(
T_ge
, 
	`unEx
(
i
), 
	`T_Temp
(
limô
), 
d⁄e
, 
ö¸
),

476 
	`T_Seq
(
	`T_Labñ
(
ö¸
),

477 
	`T_Seq
(
	`T_Move
(
	`unEx
(
i
), 
	`T_Bö›
(
T_∂us
, unEx(i), 
	`T_C⁄°
(1))),

478 
	`T_Seq
(
	`T_Jump
(
	`T_Name
(
lo›
), 
	`Temp_LabñLi°
÷o›, 
NULL
)), 
	`T_Labñ
(
d⁄e
)

489 
	}
}

491 
T_°m
 
	$assign_fõlds
(
Temp_ãmp
 
ba£_addr
, 
ödex
, 
Tr_expLi°
 
fõlds
){

492 if(
fõlds
){

496  
	`T_Seq
(
	`T_Move
(

497 
	`T_Mem
(

498 
	`T_Bö›
(

499 
T_∂us
, 
	`T_Temp
(
ba£_addr
), 
	`T_C⁄°
(
F_w‹dSize
 * 
ödex
)

502 
	`unEx
(
fõlds
->
hód
)

504 
	`assign_fõlds
(
ba£_addr
, 
ödex
 - 1, 
fõlds
->
èû
)

508  
	`T_Exp
(
	`T_C⁄°
(0));

510 
	}
}

512 
Tr_exp
 
	$Tr_Rec‹d
(
fõlds_˙t
, 
Tr_expLi°
 
fõlds
){

524 
Temp_ãmp
 
ba£_addr
 = 
	`Temp_√wãmp
();

525  
	`Tr_Ex
(

526 
	`T_E£q
(

527 
	`T_Move
(

528 
	`T_Temp
(
ba£_addr
), 
	`F_exã∫ÆCÆl
("MÆloc", 
	`T_ExpLi°
(
	`T_C⁄°
(
F_w‹dSize
 * 
fõlds_˙t
), 
NULL
))

530 
	`T_E£q
(
	`assign_fõlds
(
ba£_addr
, 
fõlds_˙t
 - 1, 
fõlds
), 
	`T_Temp
(base_addr)

536 
	}
}

538 
Tr_exp
 
	$Tr_Aºay
(
Tr_exp
 
size
, Tr_ex∞
öô
){

539 
Temp_ãmp
 
limô
 = 
	`Temp_√wãmp
();

540 
Temp_ãmp
 
öô_vÆue
 = 
	`Temp_√wãmp
();

541 
Temp_ãmp
 
ba£_addr
 = 
	`Temp_√wãmp
();

542 
Temp_ãmp
 
i
 = 
	`Temp_√wãmp
();

544 
Temp_œbñ
 
ã°
 = 
	`Temp_√wœbñ
();

545 
Temp_œbñ
 
body
 = 
	`Temp_√wœbñ
();

546 
Temp_œbñ
 
d⁄e
 = 
	`Temp_√wœbñ
();

565  
	`Tr_Ex
(
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
limô
), 
	`unEx
(
size
)),

566 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
öô_vÆue
), 
	`unEx
(
öô
)),

567 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
ba£_addr
), 
	`F_exã∫ÆCÆl
("MÆloc", 
	`T_ExpLi°
(
	`T_Bö›
(
T_mul
, T_Temp(
limô
), 
	`T_C⁄°
(
F_w‹dSize
)), 
NULL
))),

568 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
i
), 
	`T_C⁄°
(0)),

569 
	`T_E£q
(
	`T_Labñ
(
ã°
),

570 
	`T_E£q
(
	`T_Cjump
(
T_…
, 
	`T_Temp
(
i
), T_Temp(
limô
), 
body
, 
d⁄e
),

571 
	`T_E£q
(
	`T_Labñ
(
body
),

572 
	`T_E£q
(
	`T_Move
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
ba£_addr
), T_Bö›(
T_mul
, T_Temp(
i
), 
	`T_C⁄°
(
F_w‹dSize
)))), T_Temp(
öô_vÆue
)),

573 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
i
), 
	`T_Bö›
(
T_∂us
, T_Temp(i), 
	`T_C⁄°
(1))),

574 
	`T_E£q
(
	`T_Jump
(
	`T_Name
(
ã°
), 
	`Temp_LabñLi°
—e°, 
NULL
)),

575 
	`T_E£q
(
	`T_Labñ
(
d⁄e
),

576 
	`T_Temp
(
ba£_addr
)

589 
	}
}

593 
Tr_exp
 
	$Tr_sim∂eV¨
(
Tr_ac˚ss
 
ac˚ss
, 
Tr_Àvñ
 
Àvñ
){

594 
T_exp
 
Â
 = 
	`èrgëFP
(
Àvñ
, 
ac˚ss
->level);

595  
	`Tr_Ex
(
	`F_Exp
(
ac˚ss
->ac˚ss, 
Â
));

596 
	}
}

598 
Tr_exp
 
	$Tr_fõldV¨
(
Tr_exp
 
ba£_addr
, 
off£t
){

599  
	`Tr_Ex
(
	`T_Mem
(

600 
	`T_Bö›
(
T_∂us
, 
	`unEx
(
ba£_addr
), 
	`T_C⁄°
(
off£t
 * 
F_w‹dSize
))

604 
	}
}

606 
Tr_exp
 
	$Tr_subs¸ùtV¨
(
Tr_exp
 
ba£_addr
, Tr_ex∞
off£t
){

607  
	`Tr_Ex
(
	`T_Mem
(

608 
	`T_Bö›
(
T_∂us
, 
	`unEx
(
ba£_addr
), T_Bö›(
T_mul
, unEx(
off£t
), 
	`T_C⁄°
(
F_w‹dSize
)))

611 
	}
}

613 
	$Tr_Func
(
Tr_exp
 
body
, 
Tr_Àvñ
 
Àvñ
){

614 
F_‰ag
 
‰ag
 = 
	`F_ProcFøg
(
	`unNx
(
body
), 
Àvñ
->
‰ame
);

615 
‰ag_èbÀ
 = 
	`F_FøgLi°
(
‰ag
, frag_table);

616 
	}
}

	@translate.h

1 #i‚de‡
TRANSLATE_H


2 
	#TRANSLATE_H


	)

4 
	~"utû.h
"

5 
	~"absyn.h
"

6 
	~"ãmp.h
"

7 
	~"‰ame.h
"

12 
Tr_exp_
 *
	tTr_exp
;

13 
Tr_expLi°_
 *
	tTr_expLi°
;

17 
Tr_ac˚ss_
 *
	tTr_ac˚ss
;

19 
Tr_ac˚ssLi°_
 *
	tTr_ac˚ssLi°
;

23 
Tr_Àvñ_
 *
	tTr_Àvñ
;

25 
∑tchLi°_
 *
	t∑tchLi°
;

28 
	sCx


30 
∑tchLi°
 
	måues
;

31 
∑tchLi°
 
	mÁl£s
;

32 
T_°m
 
	m°m
;

35 
	sTr_exp_
 {

36 íum {
	mTr_ex
, 
	mTr_nx
, 
	mTr_cx
} 
	mköd
;

37 uni⁄ {
T_exp
 
	mex
; 
T_°m
 
	mnx
; 
Cx
 
	mcx
; } 
	mu
;

40 
	sTr_expLi°_
 {

41 
Tr_exp
 
	mhód
;

42 
Tr_expLi°
 
	mèû
;

45 
	sTr_ac˚ss_
 {

46 
Tr_Àvñ
 
	mÀvñ
;

47 
F_ac˚ss
 
	mac˚ss
;

50 
	sTr_ac˚ssLi°_
 {

51 
Tr_ac˚ss
 
	mhód
;

52 
Tr_ac˚ssLi°
 
	mèû
;

56 
	sTr_Àvñ_
 {

57 
F_‰ame
 
	m‰ame
;

58 
Tr_Àvñ
 
	m∑ª¡
;

61 
	s∑tchLi°_


63 
Temp_œbñ
 *
	mhód
;

64 
∑tchLi°
 
	mèû
;

69 
Tr_expLi°
 
Tr_ExpLi°
(
Tr_exp
 
hód
, Tr_expLi° 
èû
);

71 
Tr_ac˚ss
 
Tr_Ac˚ss
(
Tr_Àvñ
 
Àvñ
, 
F_ac˚ss
 
ac˚ss
);

72 
Tr_ac˚ss
 
Tr_ÆlocLoˇl
(
Tr_Àvñ
 
Àvñ
, 
boﬁ
 
esˇ≥
);

74 
Tr_ac˚ssLi°
 
Tr_Ac˚ssLi°
(
Tr_ac˚ss
 
hód
, Tr_ac˚ssLi° 
èû
);

75 
Tr_ac˚ssLi°
 
Tr_f‹mÆs
(
Tr_Àvñ
 
Àvñ
);

76 
Tr_ac˚ssLi°
 
Tr_Ac˚ssLi°
(
Tr_ac˚ss
 
hód
, Tr_ac˚ssLi° 
èû
);

78 
Tr_Àvñ
 
Tr_ouãrmo°
();

79 
Tr_Àvñ
 
Tr_√wLevñ
(Tr_Àvñ 
∑ª¡
, 
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
);

82 
doP©ch
(
∑tchLi°
 
tLi°
, 
Temp_œbñ
 
œbñ
);

83 
∑tchLi°
 
joöP©ch
’©chLi° 
fú°
,Ö©chLi° 
£c⁄d
);

87 
Tr_¥ocE¡ryExô
(
Tr_Àvñ
, 
Tr_exp
 
body
, 
Tr_ac˚ssLi°
 
f‹mÆs
);

89 
F_‰agLi°
 
Tr_gëResu…
();

92 
Tr_exp
 
Tr_N›
();

93 
Tr_exp
 
Tr_Nû
();

94 
Tr_exp
 
Tr_I¡
(
v
);

95 
Tr_exp
 
Tr_Såög
(
°rög
 
s
);

96 
Tr_exp
 
Tr_Jump
(
Temp_œbñ
 
œbñ
);

97 
Tr_exp
 
Tr_CÆl
(
Tr_Àvñ
 
èrgë_Àvñ
, 
Temp_œbñ
 
œbñ
, 
Tr_expLi°
 
∑øms
, Tr_Àvñ 
cur_Àvñ
);

98 
Tr_exp
 
Tr_OpArôhm
(
A_›î
 
›î
, Tr_ex∞
À·
, Tr_ex∞
right
);

99 
Tr_exp
 
Tr_OpCmp
(
A_›î
 
›î
, Tr_ex∞
À·
, Tr_ex∞
right
, 
isSå
);

100 
Tr_exp
 
Tr_Assign
(Tr_ex∞
v¨
, Tr_ex∞
vÆue
);

101 
Tr_exp
 
Tr_Seq
(Tr_ex∞
£q
, Tr_ex∞
e
);

102 
Tr_exp
 
Tr_IfThí
(Tr_ex∞
ã°
, Tr_ex∞
thí
);

103 
Tr_exp
 
Tr_IfThíEl£
(Tr_ex∞
ã°
, Tr_ex∞
thí
, Tr_ex∞
ñ£e
);

104 
Tr_exp
 
Tr_Whûe
(Tr_ex∞
ã°
, Tr_ex∞
body
, 
Temp_œbñ
 
d⁄e
);

105 
Tr_exp
 
Tr_F‹
(
Tr_ac˚ss
 
ac˚ss
, 
Tr_Àvñ
 
Àvñ
, Tr_ex∞
lo
, Tr_ex∞
hi
, Tr_ex∞
body
, 
Temp_œbñ
 
d⁄e
);

106 
Tr_exp
 
Tr_Rec‹d
(
fõlds_˙t
, 
Tr_expLi°
 
fõlds
);

107 
Tr_exp
 
Tr_Aºay
(Tr_ex∞
size
, Tr_ex∞
öô
);

109 
Tr_exp
 
Tr_sim∂eV¨
(
Tr_ac˚ss
 
ac˚ss
, 
Tr_Àvñ
 
Àvñ
);

110 
Tr_exp
 
Tr_fõldV¨
(Tr_ex∞
ba£_addr
, 
off£t
);

111 
Tr_exp
 
Tr_subs¸ùtV¨
(Tr_ex∞
ba£_addr
, Tr_ex∞
off£t
);

113 
Tr_Func
(
Tr_exp
 
body
, 
Tr_Àvñ
 
Àvñ
);

	@tree.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

7 
T_expLi°
 
	$T_ExpLi°
(
T_exp
 
hód
, 
T_expLi°
 
èû
)

8 {
T_expLi°
 
p
 = (T_expLi°Ë
	`checked_mÆloc
 ( *p);

9 
p
->
hód
=hód;Ö->
èû
=tail;

10  
p
;

11 
	}
}

13 
T_°mLi°
 
	$T_StmLi°
(
T_°m
 
hód
, 
T_°mLi°
 
èû
)

14 {
T_°mLi°
 
p
 = (T_°mLi°Ë
	`checked_mÆloc
 ( *p);

15 
p
->
hód
=hód;Ö->
èû
=tail;

16  
p
;

17 
	}
}

19 
T_°m
 
	$T_Seq
(
T_°m
 
À·
, T_°m 
right
)

20 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

21 
p
->
köd
=
T_SEQ
;

22 
p
->
u
.
SEQ
.
À·
=left;

23 
p
->
u
.
SEQ
.
right
=right;

24  
p
;

25 
	}
}

27 
T_°m
 
	$T_Labñ
(
Temp_œbñ
 
œbñ
)

28 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

29 
p
->
köd
=
T_LABEL
;

30 
p
->
u
.
LABEL
=
œbñ
;

31  
p
;

32 
	}
}

34 
T_°m
 
	$T_Jump
(
T_exp
 
exp
, 
Temp_œbñLi°
 
œbñs
)

35 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

36 
p
->
köd
=
T_JUMP
;

37 
p
->
u
.
JUMP
.
exp
=exp;

38 
p
->
u
.
JUMP
.
jumps
=
œbñs
;

39  
p
;

40 
	}
}

42 
T_°m
 
	$T_Cjump
(
T_ªlOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
,

43 
Temp_œbñ
 
åue
, Temp_œbñ 
Ál£
)

44 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

45 
p
->
köd
=
T_CJUMP
;

46 
p
->
u
.
CJUMP
.
›
=›;Ö->u.CJUMP.
À·
ˆe·;Ö->u.CJUMP.
right
=right;

47 
p
->
u
.
CJUMP
.
åue
=true;

48 
p
->
u
.
CJUMP
.
Ál£
=false;

49  
p
;

50 
	}
}

52 
T_°m
 
	$T_Move
(
T_exp
 
d°
, T_ex∞
§c
)

53 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

54 
p
->
köd
=
T_MOVE
;

55 
p
->
u
.
MOVE
.
d°
=dst;

56 
p
->
u
.
MOVE
.
§c
=src;

57  
p
;

58 
	}
}

60 
T_°m
 
	$T_Exp
(
T_exp
 
exp
)

61 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

62 
p
->
köd
=
T_EXP
;

63 
p
->
u
.
EXP
=
exp
;

64  
p
;

65 
	}
}

67 
T_exp
 
	$T_Bö›
(
T_böOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
)

68 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

69 
p
->
köd
=
T_BINOP
;

70 
p
->
u
.
BINOP
.
›
=op;

71 
p
->
u
.
BINOP
.
À·
=left;

72 
p
->
u
.
BINOP
.
right
=right;

73  
p
;

74 
	}
}

76 
T_exp
 
	$T_Mem
(
T_exp
 
exp
)

77 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

78 
p
->
köd
=
T_MEM
;

79 
p
->
u
.
MEM
=
exp
;

80  
p
;

81 
	}
}

83 
T_exp
 
	$T_Temp
(
Temp_ãmp
 
ãmp
)

84 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

85 
p
->
köd
=
T_TEMP
;

86 
p
->
u
.
TEMP
=
ãmp
;

87  
p
;

88 
	}
}

90 
T_exp
 
	$T_E£q
(
T_°m
 
°m
, 
T_exp
 
exp
)

91 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

92 
p
->
köd
=
T_ESEQ
;

93 
p
->
u
.
ESEQ
.
°m
=stm;

94 
p
->
u
.
ESEQ
.
exp
=exp;

95  
p
;

96 
	}
}

98 
T_exp
 
	$T_Name
(
Temp_œbñ
 
«me
)

99 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

100 
p
->
köd
=
T_NAME
;

101 
p
->
u
.
NAME
=
«me
;

102  
p
;

103 
	}
}

105 
T_exp
 
	$T_C⁄°
(
c⁄°i
)

106 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

107 
p
->
köd
=
T_CONST
;

108 
p
->
u
.
CONST
=
c⁄°i
;

109  
p
;

110 
	}
}

112 
T_exp
 
	$T_CÆl
(
T_exp
 
fun
, 
T_expLi°
 
¨gs
)

113 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

114 
p
->
köd
=
T_CALL
;

115 
p
->
u
.
CALL
.
fun
=fun;

116 
p
->
u
.
CALL
.
¨gs
=args;

117  
p
;

118 
	}
}

120 
T_ªlOp
 
	$T_nŸRñ
(
T_ªlOp
 
r
)

122 
r
)

123 {
T_eq
:  
T_√
;

124 
T_√
:  
T_eq
;

125 
T_…
:  
T_ge
;

126 
T_ge
:  
T_…
;

127 
T_gt
:  
T_À
;

128 
T_À
:  
T_gt
;

129 
T_u…
:  
T_uge
;

130 
T_uge
:  
T_u…
;

131 
T_uÀ
:  
T_ugt
 ;

132 
T_ugt
:  
T_uÀ
;

134 
	`as£π
(0);  0;

135 
	}
}

137 
T_ªlOp
 
	$T_commuã
(
T_ªlOp
 
r
)

138 {
r
) {

139 
T_eq
:  T_eq;

140 
T_√
:  T_ne;

141 
T_…
:  
T_gt
;

142 
T_ge
:  
T_À
;

143 
T_gt
:  
T_…
 ;

144 
T_À
:  
T_ge
;

145 
T_u…
:  
T_ugt
;

146 
T_uge
:  
T_uÀ
;

147 
T_uÀ
:  
T_uge
 ;

148 
T_ugt
:  
T_u…
;

150 
	`as£π
(0);  0;

151 
	}
}

	@tree.h

5 #i‚de‡
TREE_H


6 
	#TREE_H


	)

8 
T_°m_
 *
	tT_°m
;

9 
T_exp_
 *
	tT_exp
;

10 
T_expLi°_
 *
	tT_expLi°
;

11 
	sT_expLi°_
 {
T_exp
 
	mhód
; 
T_expLi°
 
	mèû
;};

12 
T_°mLi°_
 *
	tT_°mLi°
;

13 
	sT_°mLi°_
 {
T_°m
 
	mhód
; 
T_°mLi°
 
	mèû
;};

15 íum {
	mT_∂us
, 
	mT_möus
, 
	mT_mul
, 
	mT_div
,

16 
	mT_™d
, 
	mT_‹
, 
	mT_lshi·
, 
	mT_rshi·
, 
	mT_¨shi·
, 
	mT_x‹
} 
	tT_böOp
 ;

18 íum {
	mT_eq
, 
	mT_√
, 
	mT_…
, 
	mT_gt
, 
	mT_À
, 
	mT_ge
,

19 
	mT_u…
, 
	mT_uÀ
, 
	mT_ugt
, 
	mT_uge
} 
	tT_ªlOp
;

21 
	sT_°m_
 {íum {
	mT_SEQ
, 
	mT_LABEL
, 
	mT_JUMP
, 
	mT_CJUMP
, 
	mT_MOVE
,

22 
	mT_EXP
} 
	mköd
;

23 uni⁄ {°ru˘ {
T_°m
 
	mÀ·
, 
	mright
;} 
	mSEQ
;

24 
Temp_œbñ
 
	mLABEL
;

25 °ru˘ {
T_exp
 
	mexp
; 
Temp_œbñLi°
 
	mjumps
;} 
	mJUMP
;

26 °ru˘ {
T_ªlOp
 
	m›
; 
T_exp
 
	mÀ·
, 
	mright
;

27 
Temp_œbñ
 
	måue
, 
	mÁl£
;} 
	mCJUMP
;

28 °ru˘ {
T_exp
 
	md°
, 
	m§c
;} 
	mMOVE
;

29 
T_exp
 
	mEXP
;

30 } 
	mu
;

33 
	sT_exp_
 {íum {
	mT_BINOP
, 
	mT_MEM
, 
	mT_TEMP
, 
	mT_ESEQ
, 
	mT_NAME
,

34 
	mT_CONST
, 
	mT_CALL
} 
	mköd
;

35 uni⁄ {°ru˘ {
T_böOp
 
	m›
; 
T_exp
 
	mÀ·
, 
	mright
;} 
	mBINOP
;

36 
T_exp
 
	mMEM
;

37 
Temp_ãmp
 
	mTEMP
;

38 °ru˘ {
T_°m
 
	m°m
; 
T_exp
 
	mexp
;} 
	mESEQ
;

39 
Temp_œbñ
 
	mNAME
;

40 
	mCONST
;

41 °ru˘ {
T_exp
 
	mfun
; 
T_expLi°
 
	m¨gs
;} 
	mCALL
;

42 } 
	mu
;

45 
T_expLi°
 
T_ExpLi°
 (
T_exp
 
hód
, T_expLi° 
èû
);

46 
T_°mLi°
 
T_StmLi°
 (
T_°m
 
hód
, T_°mLi° 
èû
);

48 
T_°m
 
T_Seq
(T_°m 
À·
, T_°m 
right
);

49 
T_°m
 
T_Labñ
(
Temp_œbñ
);

50 
T_°m
 
T_Jump
(
T_exp
 
exp
, 
Temp_œbñLi°
 
œbñs
);

51 
T_°m
 
T_Cjump
(
T_ªlOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
,

52 
Temp_œbñ
 
åue
, Temp_œbñ 
Ál£
);

53 
T_°m
 
T_Move
(
T_exp
, T_exp);

54 
T_°m
 
T_Exp
(
T_exp
);

56 
T_exp
 
T_Bö›
(
T_böOp
, T_exp, T_exp);

57 
T_exp
 
T_Mem
(T_exp);

58 
T_exp
 
T_Temp
(
Temp_ãmp
);

59 
T_exp
 
T_E£q
(
T_°m
, T_exp);

60 
T_exp
 
T_Name
(
Temp_œbñ
);

61 
T_exp
 
T_C⁄°
();

62 
T_exp
 
T_CÆl
(T_exp, 
T_expLi°
);

64 
T_ªlOp
 
T_nŸRñ
(T_relOp);

65 
T_ªlOp
 
T_commuã
(T_relOp);

	@types.c

8 
	~<°dio.h
>

9 
	~"utû.h
"

10 
	~"symbﬁ.h
"

11 
	~"ty≥s.h
"

13 
Ty_ty_
 
	gtynû
 = {
Ty_nû
};

14 
Ty_ty
 
	$Ty_Nû
(Ë{ &
tynû
;
	}
}

16 
Ty_ty_
 
	gtyöt
 = {
Ty_öt
};

18 
Ty_ty
 
	$Ty_I¡
() {

19 
Ty_ty
 
öt_ty
 = 
	`checked_mÆloc
((*int_ty));

21 
öt_ty
->
köd
 = 
Ty_öt
;

22 
öt_ty
->
u
.
öâ
.
lo›_v¨
 = 0;

23  
öt_ty
;

24 
	}
}

27 
Ty_ty_
 
	gty°rög
 = {
Ty_°rög
};

28 
Ty_ty
 
	$Ty_Såög
(Ë{ &
ty°rög
;
	}
}

30 
Ty_ty_
 
	gtyvoid
 = {
Ty_void
};

31 
Ty_ty
 
	$Ty_Void
(Ë{ &
tyvoid
;
	}
}

33 
Ty_ty
 
	$Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
)

34 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

35 
p
->
köd
=
Ty_ªc‹d
;

36 
p
->
u
.
ªc‹d
=
fõlds
;

37  
p
;

38 
	}
}

40 
Ty_ty
 
	$Ty_Aºay
(
Ty_ty
 
ty
)

41 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

42 
p
->
köd
=
Ty_¨øy
;

43 
p
->
u
.
¨øy
=
ty
;

44  
p
;

45 
	}
}

47 
Ty_ty
 
	$Ty_Name
(
S_symbﬁ
 
sym
, 
Ty_ty
 
ty
)

48 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

49 
p
->
köd
=
Ty_«me
;

50 
p
->
u
.
«me
.
sym
=sym;

51 
p
->
u
.
«me
.
ty
=ty;

52  
p
;

53 
	}
}

56 
Ty_tyLi°
 
	$Ty_TyLi°
(
Ty_ty
 
hód
, 
Ty_tyLi°
 
èû
)

57 {
Ty_tyLi°
 
p
 = 
	`checked_mÆloc
((*p));

58 
p
->
hód
=head;

59 
p
->
èû
=tail;

60  
p
;

61 
	}
}

63 
Ty_fõld
 
	$Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
)

64 {
Ty_fõld
 
p
 = 
	`checked_mÆloc
((*p));

65 
p
->
«me
=name;

66 
p
->
ty
=ty;

67  
p
;

68 
	}
}

70 
Ty_fõldLi°
 
	$Ty_FõldLi°
(
Ty_fõld
 
hód
, 
Ty_fõldLi°
 
èû
)

71 {
Ty_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

72 
p
->
hód
=head;

73 
p
->
èû
=tail;

74  
p
;

75 
	}
}

78 
	g°r_ty
[][12] = {

83 
	$Ty_¥öt
(
Ty_ty
 
t
)

85 i‡(
t
 =
NULL
Ë
	`¥ötf
("null");

86 { 
	`¥ötf
("%s", 
°r_ty
[
t
->
köd
]);

87 i‡(
t
->
köd
 =
Ty_«me
) {

88 
	`¥ötf
(", %s", 
	`S_«me
(
t
->
u
.
«me
.
sym
)); }

90 
	}
}

92 
	$TyLi°_¥öt
(
Ty_tyLi°
 
li°
)

94 i‡(
li°
 =
NULL
Ë
	`¥ötf
("null");

96 
	`¥ötf
("TyList( ");

97 
	`Ty_¥öt
(
li°
->
hód
);

98 
	`¥ötf
(", ");

99 
	`TyLi°_¥öt
(
li°
->
èû
);

100 
	`¥ötf
(")");

102 
	}
}

	@types.h

1 #i‚de‡
TYPES_H


2 
	#TYPES_H


	)

10 
Ty_ty_
 *
	tTy_ty
;

11 
Ty_tyLi°_
 *
	tTy_tyLi°
;

12 
Ty_fõld_
 *
	tTy_fõld
;

13 
Ty_fõldLi°_
 *
	tTy_fõldLi°
;

15 
	sTy_ty_
 {íum {
	mTy_ªc‹d
, 
	mTy_nû
, 
	mTy_öt
, 
	mTy_°rög
, 
	mTy_¨øy
,

16 
	mTy_«me
, 
	mTy_void
} 
	mköd
;

17 uni⁄ {
Ty_fõldLi°
 
	mªc‹d
;

18 
Ty_ty
 
	m¨øy
;

19 °ru˘ {
S_symbﬁ
 
	msym
; 
Ty_ty
 
	mty
;} 
	m«me
;

20 °ru˘ {
	mlo›_v¨
;} 
	möâ
;

21 } 
	mu
;

24 
	sTy_tyLi°_
 {
Ty_ty
 
	mhód
; 
Ty_tyLi°
 
	mèû
;};

25 
	sTy_fõld_
 {
S_symbﬁ
 
	m«me
; 
Ty_ty
 
	mty
;};

26 
	sTy_fõldLi°_
 {
Ty_fõld
 
	mhód
; 
Ty_fõldLi°
 
	mèû
;};

28 
Ty_ty
 
Ty_Nû
();

29 
Ty_ty
 
Ty_I¡
();

30 
Ty_ty
 
Ty_Såög
();

31 
Ty_ty
 
Ty_Void
();

33 
Ty_ty
 
Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
);

34 
Ty_ty
 
Ty_Aºay
(Ty_ty 
ty
);

35 
Ty_ty
 
Ty_Name
(
S_symbﬁ
 
sym
, Ty_ty 
ty
);

37 
Ty_tyLi°
 
Ty_TyLi°
(
Ty_ty
 
hód
, Ty_tyLi° 
èû
);

38 
Ty_fõld
 
Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
);

39 
Ty_fõldLi°
 
Ty_FõldLi°
(
Ty_fõld
 
hód
, Ty_fõldLi° 
èû
);

41 
Ty_¥öt
(
Ty_ty
 
t
);

42 
TyLi°_¥öt
(
Ty_tyLi°
 
li°
);

	@util.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~"utû.h
"

9 *
	$checked_mÆloc
(
Àn
)

10 {*
p
 = 
	`mÆloc
(
Àn
);

11 i‡(!
p
) {

12 
	`Ârötf
(
°dîr
,"\nRan out of memory!\n");

13 
	`exô
(1);

15  
p
;

16 
	}
}

18 
°rög
 
	$Såög
(*
s
)

19 {
°rög
 
p
 = 
	`checked_mÆloc
(
	`°æí
(
s
)+1);

20 
	`°r˝y
(
p
,
s
);

21  
p
;

22 
	}
}

24 
U_boﬁLi°
 
	$U_BoﬁLi°
(
boﬁ
 
hód
, 
U_boﬁLi°
 
èû
)

25 { 
U_boﬁLi°
 
li°
 = 
	`checked_mÆloc
((*list));

26 
li°
->
hód
 = head;

27 
li°
->
èû
 =Åail;

28  
li°
;

29 
	}
}

	@util.h

1 #i‚de‡
UTIL_H


2 
	#UTIL_H


	)

3 
	~<as£π.h
>

5 *
	t°rög
;

6 
	tboﬁ
;

8 
	#TRUE
 1

	)

9 
	#FALSE
 0

	)

11 *
checked_mÆloc
();

12 
°rög
 
Såög
(*);

14 
U_boﬁLi°_
 *
	tU_boﬁLi°
;

15 
	sU_boﬁLi°_
 {
boﬁ
 
	mhód
; 
U_boﬁLi°
 
	mèû
;};

16 
U_boﬁLi°
 
U_BoﬁLi°
(
boﬁ
 
hód
, U_boﬁLi° 
èû
);

	@x86frame.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	~"utû.h
"

6 
	~"symbﬁ.h
"

7 
	~"ãmp.h
"

8 
	~"èbÀ.h
"

9 
	~"åì.h
"

10 
	~"‰ame.h
"

14 c⁄° 
	gF_w‹dSize
 = 4;

15 
Temp_ãmp
 
	góx
 = 
NULL
;

16 
Temp_ãmp
 
	gebx
 = 
NULL
;

17 
Temp_ãmp
 
	gecx
 = 
NULL
;

18 
Temp_ãmp
 
	gedx
 = 
NULL
;

19 
Temp_ãmp
 
	gesi
 = 
NULL
;

20 
Temp_ãmp
 
	gedi
 = 
NULL
;

21 
Temp_ãmp
 
	gebp
 = 
NULL
;

22 
Temp_ãmp
 
	ge•
 = 
NULL
;

24 
	$F_size
(
F_‰ame
 
f
){

25  
f
->
öFøme_˙t
;

26 
	}
}

28 
Temp_ãmp
 
	$F_FP
(){

30 if(!
ebp
)

31 
ebp
 = 
	`Temp_√wãmp
();

32  
ebp
;

33 
	}
}

35 
Temp_ãmp
 
	$F_SP
(){

36 if(!
e•
)

37 
e•
 = 
	`Temp_√wãmp
();

38  
e•
;

39 
	}
}

41 
Temp_ãmp
 
	$F_RV
(){

42 if(!
óx
)

43 
óx
 = 
	`Temp_√wãmp
();

44  
óx
;

45 
	}
}

47 
Temp_ãmp
 
	$F_óx
(){

48 if(!
óx
)

49 
óx
 = 
	`Temp_√wãmp
();

50  
óx
;

51 
	}
}

53 
Temp_ãmp
 
	$F_ebx
(){

54 if(!
ebx
)

55 
ebx
 = 
	`Temp_√wãmp
();

56  
ebx
;

57 
	}
}

59 
Temp_ãmp
 
	$F_ecx
(){

60 if(!
ecx
)

61 
ecx
 = 
	`Temp_√wãmp
();

62  
ecx
;

63 
	}
}

65 
Temp_ãmp
 
	$F_edx
(){

66 if(!
edx
)

67 
edx
 = 
	`Temp_√wãmp
();

68  
edx
;

69 
	}
}

71 
Temp_ãmp
 
	$F_esi
(){

72 if(!
esi
)

73 
esi
 = 
	`Temp_√wãmp
();

74  
esi
;

75 
	}
}

77 
Temp_ãmp
 
	$F_edi
(){

78 if(!
edi
)

79 
edi
 = 
	`Temp_√wãmp
();

80  
edi
;

81 
	}
}

85 
F_‰ag
 
	$F_SåögFøg
(
Temp_œbñ
 
œbñ
, 
°rög
 
°r
) {

86 
F_‰ag
 
‰ag
 = (F_‰agË
	`checked_mÆloc
((*frag));

87 
‰ag
->
köd
 = 
F_°rögFøg
;

88 
‰ag
->
u
.
°rögg
.
œbñ
 =Üabel;

89 
‰ag
->
u
.
°rögg
.
°r
 = str;

90  
‰ag
;

91 
	}
}

93 
F_‰ag
 
	$F_ProcFøg
(
T_°m
 
body
, 
F_‰ame
 
‰ame
) {

94 
F_‰ag
 
‰ag
 = (F_‰agË
	`checked_mÆloc
((*frag));

95 
‰ag
->
köd
 = 
F_¥ocFøg
;

96 
‰ag
->
u
.
¥oc
.
body
 = body;

97 
‰ag
->
u
.
¥oc
.
‰ame
 = frame;

98  
‰ag
;

99 
	}
}

101 
F_‰agLi°
 
	$F_FøgLi°
(
F_‰ag
 
hód
, 
F_‰agLi°
 
èû
) {

102 
F_‰agLi°
 
‰ags
 = (F_‰agLi°Ë
	`checked_mÆloc
((* frags));

103 
‰ags
->
hód
 = head;

104 
‰ags
->
èû
 =Åail;

105  
‰ags
;

106 
	}
}

109 
F_ac˚ss
 
	$InFøme
(
off£t
){

110 
F_ac˚ss
 
a
 = (F_ac˚ssË
	`checked_mÆloc
((*a));

111 
a
->
köd
 = 
öFøme
;

112 
a
->
u
.
off£t
 = offset;

113  
a
;

114 
	}
}

117 
F_ac˚ss
 
	$InReg
(
Temp_ãmp
 
t
){

118 
F_ac˚ss
 
a
 = (F_ac˚ssË
	`checked_mÆloc
((*a));

119 
a
->
köd
 = 
öReg
;

120 
a
->
u
.
ªg
 = 
t
;

121  
a
;

122 
	}
}

125 
F_ac˚ssLi°
 
	$F_Ac˚ssLi°
(
F_ac˚ss
 
hód
, 
F_ac˚ssLi°
 
èû
){

126 
F_ac˚ssLi°
 
li°
 = (F_ac˚ssLi°)
	`checked_mÆloc
((*Üist));

127 
li°
->
hód
 = head;

128 
li°
->
èû
 =Åail;

129  
li°
;

131 
	}
}

135 
F_ac˚ssLi°
 
	$F‹mÆ_ac˚ssLi°
(
off£t
, 
U_boﬁLi°
 
f‹mÆs
){

136 if(
f‹mÆs
 !
NULL
){

137  
	`F_Ac˚ssLi°
(
	`InFøme
(
off£t
), 
	`F‹mÆ_ac˚ssLi°
(off£à+ 4, 
f‹mÆs
->
èû
));

139  
NULL
;

141 
	}
}

145 
F_‰ame
 
	$F_√wFøme
(
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
){

146 
F_‰ame
 
f
 = (F_‰ameË
	`checked_mÆloc
((*f));

147 
f
->
«me
 =Çame;

148 
f
->
f‹mÆs
 = 
	`F‹mÆ_ac˚ssLi°
(4, formals);

149 
f
->
öFøme_˙t
 = 0;

150  
f
;

151 
	}
}

154 
Temp_œbñ
 
	$F_«me
(
F_‰ame
 
f
){

155  
f
->
«me
;

156 
	}
}

159 
F_ac˚ssLi°
 
	$F_f‹mÆs
(
F_‰ame
 
f
){

160  
f
->
f‹mÆs
;

161 
	}
}

164 
F_ac˚ss
 
	$F_ÆlocLoˇl
(
F_‰ame
 
f
, 
boﬁ
 
esˇ≥
){

165 if(
esˇ≥
){

166 
f
->
öFøme_˙t
 ++;

167  
	`InFøme
(-(
F_w‹dSize
 * 
f
->
öFøme_˙t
));

169  
	`InReg
(
	`Temp_√wãmp
());

171 
	}
}

173 
T_exp
 
	$F_Exp
(
F_ac˚ss
 
ac˚ss
, 
T_exp
 
Â
){

174 i‡(
ac˚ss
->
köd
 =
öFøme
)

176  
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
Â
, 
	`T_C⁄°
(
ac˚ss
->
u
.
off£t
)));

179  
	`T_Temp
(
ac˚ss
->
u
.
ªg
);

181 
	}
}

184 
T_exp
 
	$F_exã∫ÆCÆl
(
°rög
 
s
, 
T_expLi°
 
¨gs
){

185  
	`T_CÆl
(
	`T_Name
(
	`Temp_«medœbñ
(
s
)), 
¨gs
);

186 
	}
}

188 
	$F_Spûl
(
F_‰ame
 
f
){

189 
f
->
öFøme_˙t
 ++;

190  (- 
F_w‹dSize
 * 
f
->
öFøme_˙t
);

191 
	}
}

193 
T_°m
 
	$F_¥ocE¡ryExô1
(
F_‰ame
 
f
, 
T_°m
 
body
){

196 
Temp_ãmp
 
bak_ebx
 = 
	`Temp_√wãmp
();

197 
Temp_ãmp
 
bak_esi
 = 
	`Temp_√wãmp
();

198 
Temp_ãmp
 
bak_edi
 = 
	`Temp_√wãmp
();

200 
T_°m
 
°‹e_ebx
 = 
	`T_Move
(
	`T_Temp
(
bak_ebx
), T_Temp(
	`F_ebx
()));

201 
T_°m
 
°‹e_esi
 = 
	`T_Move
(
	`T_Temp
(
bak_esi
), T_Temp(
	`F_esi
()));

202 
T_°m
 
°‹e_edi
 = 
	`T_Move
(
	`T_Temp
(
bak_edi
), T_Temp(
	`F_edi
()));

203 
T_°m
 
°‹e
 = 
	`T_Seq
(
°‹e_ebx
, T_Seq(
°‹e_esi
, 
°‹e_edi
));

205 
T_°m
 
lﬂd_ebx
 = 
	`T_Move
(
	`T_Temp
(
	`F_ebx
()), T_Temp(
bak_ebx
));

206 
T_°m
 
lﬂd_esi
 = 
	`T_Move
(
	`T_Temp
(
	`F_esi
()), T_Temp(
bak_esi
));

207 
T_°m
 
lﬂd_edi
 = 
	`T_Move
(
	`T_Temp
(
	`F_edi
()), T_Temp(
bak_edi
));

208 
T_°m
 
lﬂd
 = 
	`T_Seq
(
lﬂd_ebx
, T_Seq(
lﬂd_esi
, 
lﬂd_edi
));

210  
	`T_Seq
(
°‹e
, T_Seq(
body
, 
lﬂd
));

211 
	}
}

213 
AS_¥oc
 
	$F_¥ocE¡ryExô3
(
F_‰ame
 
‰ame
, 
AS_ö°rLi°
 
body
){

217 
AS_¥oc
 
ªsu…
;

218 
¥ﬁog
[100];

219 
ïûog
[100];

220 
	`•rötf
(
¥ﬁog
, "\çush»%%ebp\n\tmov»%%e•, %%ebp\n\tsub»$%d, %%e•\n", 
	`F_size
(
‰ame
));

221 
	`•rötf
(
ïûog
, "\tleave\n\tret\n");

222 
ªsu…
 = 
	`AS_Proc
(
	`Såög
(
¥ﬁog
), 
body
, Såög(
ïûog
));

223  
ªsu…
;

224 
	}
}

227 
AS_ö°rLi°
 
	$F_¥ocE¡ryExô2
(
AS_ö°rLi°
 
body
){

230 
	}
}

233 
Temp_ãmpLi°
 
	$F_ˇŒîßves
() {

235 
	`Temp_TempLi°
(
	`F_edx
(),

236 
	`Temp_TempLi°
(
	`F_ecx
(), 
NULL
));

237 
	}
}

240 
Temp_ãmpLi°
 
	$F_backup_ˇŒîßves
(){

241 
Temp_ãmpLi°
 
ˇŒîßves
 = 
	`F_ˇŒîßves
();

242 
Temp_ãmpLi°
 
ªsu…
 = 
NULL
;

243 
ˇŒîßves
){

244 
ªsu…
 = 
	`Temp_TempLi°
(
	`Temp_√wãmp
(),Ñesult);

245 
ˇŒîßves
 = cÆÀrßves->
èû
;

247  
ªsu…
;

248 
	}
}

	@y.tab.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

67 
	~<°dio.h
>

68 
	~"utû.h
"

69 
	~"îr‹msg.h
"

70 
	~"symbﬁ.h
"

71 
	~"absyn.h
"

73 
yyÀx
();

75 
A_exp
 
	gabsyn_roŸ
;

77 
	$yyîr‹
(*
s
)

79 
	`EM_îr‹
(
EM_tokPos
, "%s", 
s
);

80 
	}
}

84 #i‚de‡
YY_NULLPTR


85 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

86 
	#YY_NULLPTR
 
nuŒ±r


	)

88 
	#YY_NULLPTR
 0

	)

93 #ifde‡
YYERROR_VERBOSE


94 #unde‡
YYERROR_VERBOSE


95 
	#YYERROR_VERBOSE
 1

	)

97 
	#YYERROR_VERBOSE
 0

	)

102 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


103 
	#YY_YY_Y_TAB_H_INCLUDED


	)

105 #i‚de‡
YYDEBUG


106 
	#YYDEBUG
 0

	)

108 #i‡
YYDEBUG


109 
yydebug
;

113 #i‚de‡
YYTOKENTYPE


114 
	#YYTOKENTYPE


	)

115 
	eyytokíty≥


117 
	mID
 = 258,

118 
	mSTRING
 = 259,

119 
	mINT
 = 260,

120 
	mCOMMA
 = 261,

121 
	mCOLON
 = 262,

122 
	mSEMICOLON
 = 263,

123 
	mLPAREN
 = 264,

124 
	mRPAREN
 = 265,

125 
	mLBRACK
 = 266,

126 
	mRBRACK
 = 267,

127 
	mLBRACE
 = 268,

128 
	mRBRACE
 = 269,

129 
	mDOT
 = 270,

130 
	mPLUS
 = 271,

131 
	mMINUS
 = 272,

132 
	mTIMES
 = 273,

133 
	mDIVIDE
 = 274,

134 
	mEQ
 = 275,

135 
	mNEQ
 = 276,

136 
	mLT
 = 277,

137 
	mLE
 = 278,

138 
	mGT
 = 279,

139 
	mGE
 = 280,

140 
	mUMINUS
 = 281,

141 
	mAND
 = 282,

142 
	mOR
 = 283,

143 
	mASSIGN
 = 284,

144 
	mARRAY
 = 285,

145 
	mIF
 = 286,

146 
	mTHEN
 = 287,

147 
	mELSE
 = 288,

148 
	mWHILE
 = 289,

149 
	mFOR
 = 290,

150 
	mTO
 = 291,

151 
	mDO
 = 292,

152 
	mLET
 = 293,

153 
	mIN
 = 294,

154 
	mEND
 = 295,

155 
	mOF
 = 296,

156 
	mBREAK
 = 297,

157 
	mNIL
 = 298,

158 
	mFUNCTION
 = 299,

159 
	mVAR
 = 300,

160 
	mTYPE
 = 301

164 
	#ID
 258

	)

165 
	#STRING
 259

	)

166 
	#INT
 260

	)

167 
	#COMMA
 261

	)

168 
	#COLON
 262

	)

169 
	#SEMICOLON
 263

	)

170 
	#LPAREN
 264

	)

171 
	#RPAREN
 265

	)

172 
	#LBRACK
 266

	)

173 
	#RBRACK
 267

	)

174 
	#LBRACE
 268

	)

175 
	#RBRACE
 269

	)

176 
	#DOT
 270

	)

177 
	#PLUS
 271

	)

178 
	#MINUS
 272

	)

179 
	#TIMES
 273

	)

180 
	#DIVIDE
 274

	)

181 
	#EQ
 275

	)

182 
	#NEQ
 276

	)

183 
	#LT
 277

	)

184 
	#LE
 278

	)

185 
	#GT
 279

	)

186 
	#GE
 280

	)

187 
	#UMINUS
 281

	)

188 
	#AND
 282

	)

189 
	#OR
 283

	)

190 
	#ASSIGN
 284

	)

191 
	#ARRAY
 285

	)

192 
	#IF
 286

	)

193 
	#THEN
 287

	)

194 
	#ELSE
 288

	)

195 
	#WHILE
 289

	)

196 
	#FOR
 290

	)

197 
	#TO
 291

	)

198 
	#DO
 292

	)

199 
	#LET
 293

	)

200 
	#IN
 294

	)

201 
	#END
 295

	)

202 
	#OF
 296

	)

203 
	#BREAK
 297

	)

204 
	#NIL
 298

	)

205 
	#FUNCTION
 299

	)

206 
	#VAR
 300

	)

207 
	#TYPE
 301

	)

210 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


212 
	uYYSTYPE


216 
	mpos
;

217 
	mivÆ
;

218 
°rög
 
	msvÆ
;

219 
A_exp
 
	mexp
;

220 
A_expLi°
 
	mex∂i°
;

221 
A_v¨
 
	mv¨
;

222 
A_decLi°
 
	mde˛i°
;

223 
A_dec
 
	mdec
;

224 
A_efõldLi°
 
	mefõldli°
;

225 
A_efõld
 
	mefõld
;

226 
A_«mëy
 
	m«mëy
;

227 
A_«mëyLi°
 
	m«mëyli°
;

228 
A_fõldLi°
 
	mfõldli°
;

229 
A_fõld
 
	mfõld
;

230 
A_fundecLi°
 
	mfunde˛i°
;

231 
A_fundec
 
	mfundec
;

232 
A_ty
 
	mty
;

238 
YYSTYPE
 
	tYYSTYPE
;

239 
	#YYSTYPE_IS_TRIVIAL
 1

	)

240 
	#YYSTYPE_IS_DECLARED
 1

	)

244 
YYSTYPE
 
yylvÆ
;

246 
yy∑r£
 ();

258 #ifde‡
YYTYPE_UINT8


259 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

261 
	tyyty≥_uöt8
;

264 #ifde‡
YYTYPE_INT8


265 
YYTYPE_INT8
 
	tyyty≥_öt8
;

267 sig√d 
	tyyty≥_öt8
;

270 #ifde‡
YYTYPE_UINT16


271 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

273 
	tyyty≥_uöt16
;

276 #ifde‡
YYTYPE_INT16


277 
YYTYPE_INT16
 
	tyyty≥_öt16
;

279 
	tyyty≥_öt16
;

282 #i‚de‡
YYSIZE_T


283 #ifde‡
__SIZE_TYPE__


284 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

285 #ñi‡
deföed
 
size_t


286 
	#YYSIZE_T
 
size_t


	)

287 #ñi‡! 
deföed
 
YYSIZE_T


288 
	~<°ddef.h
>

289 
	#YYSIZE_T
 
size_t


	)

291 
	#YYSIZE_T
 

	)

295 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

297 #i‚de‡
YY_


298 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

299 #i‡
ENABLE_NLS


300 
	~<liböé.h
>

301 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

304 #i‚de‡
YY_


305 
	#YY_
(
Msgid
Ë
	)
Msgid

309 #i‚de‡
YY_ATTRIBUTE


310 #i‡(
deföed
 
__GNUC__
 \

311 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

312 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

313 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

315 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

319 #i‚de‡
YY_ATTRIBUTE_PURE


320 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

323 #i‚de‡
YY_ATTRIBUTE_UNUSED


324 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

327 #i‡!
deföed
 
_N‹ëu∫
 \

328 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

329 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

330 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

332 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

337 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


338 
	#YYUSE
(
E
Ë((Ë(E))

	)

340 
	#YYUSE
(
E
Ë

	)

343 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


345 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

346 
	`_Pøgma
 ("GCC diagnosticÖush") \

347 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

348 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

349 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

350 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

352 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

354 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


355 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

356 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

358 #i‚de‡
YY_INITIAL_VALUE


359 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

363 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


367 #ifde‡
YYSTACK_USE_ALLOCA


368 #i‡
YYSTACK_USE_ALLOCA


369 #ifde‡
__GNUC__


370 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

371 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


372 
	~<Æloˇ.h
>

373 #ñi‡
deföed
 
_AIX


374 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

375 #ñi‡
deföed
 
_MSC_VER


376 
	~<mÆloc.h
>

377 
	#Æloˇ
 
_Æloˇ


	)

379 
	#YYSTACK_ALLOC
 
Æloˇ


	)

380 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


381 
	~<°dlib.h
>

383 #i‚de‡
EXIT_SUCCESS


384 
	#EXIT_SUCCESS
 0

	)

391 #ifde‡
YYSTACK_ALLOC


393 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

394 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


399 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

402 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

403 
	#YYSTACK_FREE
 
YYFREE


	)

404 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


405 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

407 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

408 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

409 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

410 
	~<°dlib.h
>

411 #i‚de‡
EXIT_SUCCESS


412 
	#EXIT_SUCCESS
 0

	)

415 #i‚de‡
YYMALLOC


416 
	#YYMALLOC
 
mÆloc


	)

417 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


418 *
mÆloc
 (
YYSIZE_T
);

421 #i‚de‡
YYFREE


422 
	#YYFREE
 
‰ì


	)

423 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


424 
‰ì
 (*);

431 #i‡(! 
deföed
 
yyovîÊow
 \

432 && (! 
deföed
 
	g__˝lu•lus
 \

433 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

436 
	uyyÆloc


438 
yyty≥_öt16
 
	myyss_Æloc
;

439 
YYSTYPE
 
	myyvs_Æloc
;

443 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

447 
	#YYSTACK_BYTES
(
N
) \

448 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

449 + 
YYSTACK_GAP_MAXIMUM
)

	)

451 
	#YYCOPY_NEEDED
 1

	)

458 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

461 
YYSIZE_T
 
yy√wbyãs
; \

462 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

463 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

464 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

465 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

467 0)

	)

471 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

474 #i‚de‡
YYCOPY


475 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

476 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

477 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

479 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

482 
YYSIZE_T
 
yyi
; \

483 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

484 (
D°
)[
yyi
] = (
Src
)[yyi]; \

486 0)

	)

492 
	#YYFINAL
 35

	)

494 
	#YYLAST
 365

	)

497 
	#YYNTOKENS
 47

	)

499 
	#YYNNTS
 21

	)

501 
	#YYNRULES
 71

	)

503 
	#YYNSTATES
 146

	)

507 
	#YYUNDEFTOK
 2

	)

508 
	#YYMAXUTOK
 301

	)

510 
	#YYTRANSLATE
(
YYX
) \

511 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

515 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

550 #i‡
YYDEBUG


552 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

565 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

568 c⁄° *c⁄° 
	gyyäame
[] =

578 "ty≥dec", "ty", "ty≥fõlds", "ty≥fõld", 
YY_NULLPTR


582 #ifde‡
YYPRINT


585 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

595 
	#YYPACT_NINF
 -105

	)

597 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

598 (!!((
Yy°©e
Ë=(-105)))

	)

600 
	#YYTABLE_NINF
 -1

	)

602 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

603 (!!((
YyèbÀ_vÆue
Ë=(-1)))

	)

607 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

629 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

649 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

657 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

667 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

708 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

751 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

771 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

784 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

797 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

798 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

799 
	#YYEMPTY
 (-2)

	)

800 
	#YYEOF
 0

	)

802 
	#YYACCEPT
 
yyac˚±œb


	)

803 
	#YYABORT
 
yyab‹éab


	)

804 
	#YYERROR
 
yyîr‹œb


	)

807 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

809 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

811 i‡(
yych¨
 =
YYEMPTY
) \

813 
yych¨
 = (
Tokí
); \

814 
yylvÆ
 = (
VÆue
); \

815 
	`YYPOPSTACK
 (
yyÀn
); \

816 
yy°©e
 = *
yys•
; \

817 
yybackup
; \

821 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

822 
YYERROR
; \

824 0)

	)

827 
	#YYTERROR
 1

	)

828 
	#YYERRCODE
 256

	)

833 #i‡
YYDEBUG


835 #i‚de‡
YYFPRINTF


836 
	~<°dio.h
>

837 
	#YYFPRINTF
 
Ârötf


	)

840 
	#YYDPRINTF
(
Args
) \

842 i‡(
yydebug
) \

843 
YYFPRINTF
 
Args
; \

844 } 0)

	)

847 #i‚de‡
YY_LOCATION_PRINT


848 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

852 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

854 i‡(
yydebug
) \

856 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

857 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

858 
Ty≥
, 
VÆue
); \

859 
	`YYFPRINTF
 (
°dîr
, "\n"); \

861 } 0)

	)

869 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

871 
FILE
 *
yyo
 = 
yyouçut
;

872 
	`YYUSE
 (
yyo
);

873 i‡(!
yyvÆuï
)

875 #ifde‡
YYPRINT


876 i‡(
yyty≥
 < 
YYNTOKENS
)

877 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

879 
	`YYUSE
 (
yyty≥
);

880 
	}
}

888 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

890 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

891 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

893 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

894 
	`YYFPRINTF
 (
yyouçut
, ")");

895 
	}
}

903 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

905 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

906 ; 
yybŸtom
 <
yyt›
; yybottom++)

908 
yybŸ
 = *
yybŸtom
;

909 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

911 
	`YYFPRINTF
 (
°dîr
, "\n");

912 
	}
}

914 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

916 i‡(
yydebug
) \

917 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

918 } 0)

	)

926 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

928 
yy o
 = 
yyæöe
[
yyruÀ
];

929 
yyƒhs
 = 
yyr2
[
yyruÀ
];

930 
yyi
;

931 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

932 
yyruÀ
 - 1, 
yy o
);

934 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

936 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

937 
	`yy_symbﬁ_¥öt
 (
°dîr
,

938 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

939 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

941 
	`YYFPRINTF
 (
°dîr
, "\n");

943 
	}
}

945 
	#YY_REDUCE_PRINT
(
RuÀ
) \

947 i‡(
yydebug
) \

948 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

949 } 0)

	)

953 
	gyydebug
;

955 
	#YYDPRINTF
(
Args
)

	)

956 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

957 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

958 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

963 #i‚de‡
YYINITDEPTH


964 
	#YYINITDEPTH
 200

	)

974 #i‚de‡
YYMAXDEPTH


975 
	#YYMAXDEPTH
 10000

	)

979 #i‡
YYERROR_VERBOSE


981 #i‚de‡
yy°æí


982 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


983 
	#yy°æí
 
°æí


	)

986 
YYSIZE_T


987 
	$yy°æí
 (c⁄° *
yy°r
)

989 
YYSIZE_T
 
yyÀn
;

990 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

992  
yyÀn
;

993 
	}
}

997 #i‚de‡
yy°p˝y


998 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


999 
	#yy°p˝y
 
°p˝y


	)

1004 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1006 *
yyd
 = 
yyde°
;

1007 c⁄° *
yys
 = 
yy§c
;

1009 (*
yyd
++ = *
yys
++) != '\0')

1012  
yyd
 - 1;

1013 
	}
}

1017 #i‚de‡
yyäamîr


1025 
YYSIZE_T


1026 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1028 i‡(*
yy°r
 == '"')

1030 
YYSIZE_T
 
yyn
 = 0;

1031 c⁄° *
yyp
 = 
yy°r
;

1034 *++
yyp
)

1038 
do_nŸ_°rù_quŸes
;

1041 i‡(*++
yyp
 != '\\')

1042 
do_nŸ_°rù_quŸes
;

1045 i‡(
yyªs
)

1046 
yyªs
[
yyn
] = *
yyp
;

1047 
yyn
++;

1051 i‡(
yyªs
)

1052 
yyªs
[
yyn
] = '\0';

1053  
yyn
;

1055 
do_nŸ_°rù_quŸes
: ;

1058 i‡(! 
yyªs
)

1059  
	`yy°æí
 (
yy°r
);

1061  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1062 
	}
}

1074 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1075 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1077 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1078 
YYSIZE_T
 
yysize
 = 
yysize0
;

1079 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1081 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1083 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1086 
yycou¡
 = 0;

1111 i‡(
yytokí
 !
YYEMPTY
)

1113 
yyn
 = 
yy∑˘
[*
yys•
];

1114 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1115 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1120 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1122 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1123 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1124 
yyx
;

1126 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1127 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1128 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1130 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1132 
yycou¡
 = 1;

1133 
yysize
 = 
yysize0
;

1136 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1138 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1139 i‡(! (
yysize
 <
yysize1


1140 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1142 
yysize
 = 
yysize1
;

1148 
yycou¡
)

1150 
	#YYCASE_
(
N
, 
S
) \

1151 
N
: \

1152 
yyf‹m©
 = 
S
; \

1153 

	)

1154 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1155 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1156 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1157 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1158 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1159 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1160 #unde‡
YYCASE_


1164 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1165 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1167 
yysize
 = 
yysize1
;

1170 i‡(*
yymsg_Æloc
 < 
yysize
)

1172 *
yymsg_Æloc
 = 2 * 
yysize
;

1173 i‡(! (
yysize
 <*
yymsg_Æloc


1174 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1175 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1183 *
yyp
 = *
yymsg
;

1184 
yyi
 = 0;

1185 (*
yyp
 = *
yyf‹m©
) != '\0')

1186 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1188 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1189 
yyf‹m©
 += 2;

1193 
yyp
++;

1194 
yyf‹m©
++;

1198 
	}
}

1206 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1208 
	`YYUSE
 (
yyvÆuï
);

1209 i‡(!
yymsg
)

1210 
yymsg
 = "Deleting";

1211 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1213 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1214 
	`YYUSE
 (
yyty≥
);

1215 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1216 
	}
}

1222 
	gyych¨
;

1225 
YYSTYPE
 
	gyylvÆ
;

1227 
	gyy√ºs
;

1235 
	$yy∑r£
 ()

1237 
yy°©e
;

1239 
yyîr°©us
;

1249 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1250 
yyty≥_öt16
 *
yyss
;

1251 
yyty≥_öt16
 *
yys•
;

1254 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1255 
YYSTYPE
 *
yyvs
;

1256 
YYSTYPE
 *
yyv•
;

1258 
YYSIZE_T
 
yy°acksize
;

1260 
yyn
;

1261 
yyªsu…
;

1263 
yytokí
 = 0;

1266 
YYSTYPE
 
yyvÆ
;

1268 #i‡
YYERROR_VERBOSE


1270 
yymsgbuf
[128];

1271 *
yymsg
 = 
yymsgbuf
;

1272 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1275 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1279 
yyÀn
 = 0;

1281 
yys•
 = 
yyss
 = 
yysß
;

1282 
yyv•
 = 
yyvs
 = 
yyvß
;

1283 
yy°acksize
 = 
YYINITDEPTH
;

1285 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1287 
yy°©e
 = 0;

1288 
yyîr°©us
 = 0;

1289 
yy√ºs
 = 0;

1290 
yych¨
 = 
YYEMPTY
;

1291 
yy£t°©e
;

1296 
yy√w°©e
:

1299 
yys•
++;

1301 
yy£t°©e
:

1302 *
yys•
 = 
yy°©e
;

1304 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1307 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1309 #ifde‡
yyovîÊow


1314 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1315 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1321 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1322 &
yyss1
, 
yysize
 *  (*
yys•
),

1323 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1324 &
yy°acksize
);

1326 
yyss
 = 
yyss1
;

1327 
yyvs
 = 
yyvs1
;

1330 #i‚de‡
YYSTACK_RELOCATE


1331 
yyexhau°edœb
;

1334 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1335 
yyexhau°edœb
;

1336 
yy°acksize
 *= 2;

1337 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1338 
yy°acksize
 = 
YYMAXDEPTH
;

1341 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1342 
yyÆloc
 *
yy±r
 =

1343 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1344 i‡(! 
yy±r
)

1345 
yyexhau°edœb
;

1346 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1347 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1348 #unde‡
YYSTACK_RELOCATE


1349 i‡(
yyss1
 !
yysß
)

1350 
	`YYSTACK_FREE
 (
yyss1
);

1355 
yys•
 = 
yyss
 + 
yysize
 - 1;

1356 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1358 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1359 (Ë
yy°acksize
));

1361 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1362 
YYABORT
;

1365 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1367 i‡(
yy°©e
 =
YYFINAL
)

1368 
YYACCEPT
;

1370 
yybackup
;

1375 
yybackup
:

1381 
yyn
 = 
yy∑˘
[
yy°©e
];

1382 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1383 
yydeÁu…
;

1388 i‡(
yych¨
 =
YYEMPTY
)

1390 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1391 
yych¨
 = 
	`yyÀx
 ();

1394 i‡(
yych¨
 <
YYEOF
)

1396 
yych¨
 = 
yytokí
 = 
YYEOF
;

1397 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1401 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1402 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1407 
yyn
 +
yytokí
;

1408 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1409 
yydeÁu…
;

1410 
yyn
 = 
yyèbÀ
[yyn];

1411 i‡(
yyn
 <= 0)

1413 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1414 
yyîæab
;

1415 
yyn
 = -yyn;

1416 
yyªdu˚
;

1421 i‡(
yyîr°©us
)

1422 
yyîr°©us
--;

1425 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1428 
yych¨
 = 
YYEMPTY
;

1430 
yy°©e
 = 
yyn
;

1431 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1432 *++
yyv•
 = 
yylvÆ
;

1433 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1435 
yy√w°©e
;

1441 
yydeÁu…
:

1442 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1443 i‡(
yyn
 == 0)

1444 
yyîæab
;

1445 
yyªdu˚
;

1451 
yyªdu˚
:

1453 
yyÀn
 = 
yyr2
[
yyn
];

1463 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1466 
	`YY_REDUCE_PRINT
 (
yyn
);

1467 
yyn
)

1471 {
absyn_roŸ
 = (
yyv•
[0].
exp
);}

1477 {(
yyvÆ
.
exp
)=
	`A_V¨Exp
(
EM_tokPos
, (
yyv•
[0].
v¨
));}

1483 {(
yyvÆ
.
exp
)=
	`A_NûExp
(
EM_tokPos
);}

1489 {(
yyvÆ
.
exp
)=
	`A_SeqExp
(
EM_tokPos
, 
NULL
);}

1495 {(
yyvÆ
.
exp
)=
	`A_I¡Exp
(
EM_tokPos
, (
yyv•
[0].
ivÆ
));}

1501 {(
yyvÆ
.
exp
)=
	`A_SåögExp
(
EM_tokPos
, (
yyv•
[0].
svÆ
));}

1507 {(
yyvÆ
.
exp
)=
	`A_CÆlExp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-3].
svÆ
)), (yyv•[-1].
ex∂i°
));}

1513 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_∂usOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1519 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1525 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_timesOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1531 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_divideOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1537 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_eqOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1543 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_√qOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1549 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_…Op
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1555 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_ÀOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1561 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_gtOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1567 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_geOp
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1573 {(
yyvÆ
.
exp
)=
	`A_OpExp
(
EM_tokPos
, 
A_möusOp
, 
	`A_I¡Exp
(EM_tokPos, 0), (
yyv•
[0].exp));}

1579 {(
yyvÆ
.
exp
)=
	`A_Rec‹dExp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-3].
svÆ
)), (yyv•[-1].
efõldli°
));}

1585 {(
yyvÆ
.
exp
)=(
yyv•
[-1].exp);}

1591 {(
yyvÆ
.
exp
)=
	`A_SeqExp
(
EM_tokPos
, (
yyv•
[-1].
ex∂i°
));}

1597 {(
yyvÆ
.
exp
)=
	`A_AssignExp
(
EM_tokPos
, (
yyv•
[-2].
v¨
), (yyvsp[0].exp));}

1603 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-4].exp), (yyvsp[-2].exp), (yyvsp[0].exp));}

1609 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-2].exp), (yyv•[0].exp), 
NULL
);}

1615 {(
yyvÆ
.
exp
)=
	`A_WhûeExp
(
EM_tokPos
, (
yyv•
[-2].exp), (yyvsp[0].exp));}

1621 {(
yyvÆ
.
exp
)=
	`A_BªakExp
(
EM_tokPos
);}

1627 {(
yyvÆ
.
exp
)=
	`A_F‹Exp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-6].
svÆ
)), (yyvsp[-4].exp), (yyvsp[-2].exp), (yyvsp[0].exp));}

1633 {(
yyvÆ
.
exp
)=
	`A_LëExp
(
EM_tokPos
, (
yyv•
[-3].
de˛i°
), 
	`A_SeqExp
(EM_tokPos, (yyv•[-1].
ex∂i°
)));}

1639 {(
yyvÆ
.
exp
)=
	`A_AºayExp
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-5].
svÆ
)), (yyvsp[-3].exp), (yyvsp[0].exp));}

1645 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-2].exp), (yyv•[0].exp), 
	`A_I¡Exp
(EM_tokPos, 0));}

1651 {(
yyvÆ
.
exp
)=
	`A_IfExp
(
EM_tokPos
, (
yyv•
[-2].exp), 
	`A_I¡Exp
(EM_tokPos, 1), (yyvsp[0].exp));}

1657 {(
yyvÆ
.
v¨
)=
	`A_Sim∂eV¨
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[0].
svÆ
)));}

1663 {(
yyvÆ
.
v¨
)=
	`A_FõldV¨
(
EM_tokPos
, (
yyv•
[-2].v¨), 
	`S_Symbﬁ
((yyv•[0].
svÆ
)));}

1669 {(
yyvÆ
.
v¨
)=
	`A_Subs¸ùtV¨
(
EM_tokPos
, (
yyv•
[-3].v¨), (yyv•[-1].
exp
));}

1675 {(
yyvÆ
.
v¨
)=
	`A_Subs¸ùtV¨
(
EM_tokPos
, 
	`A_Sim∂eV¨
(EM_tokPos, 
	`S_Symbﬁ
((
yyv•
[-3].
svÆ
))), (yyv•[-1].
exp
));}

1681 {(
yyvÆ
.
ex∂i°
)=
NULL
;}

1687 {(
yyvÆ
.
ex∂i°
)=(
yyv•
[0].explist);}

1693 {(
yyvÆ
.
ex∂i°
)=
	`A_ExpLi°
((
yyv•
[0].
exp
), 
NULL
);}

1699 {(
yyvÆ
.
ex∂i°
)=
	`A_ExpLi°
((
yyv•
[-2].
exp
), (yyvsp[0].explist));}

1705 {(
yyvÆ
.
efõldli°
)=
NULL
;}

1711 {(
yyvÆ
.
efõldli°
)=(
yyv•
[0].efieldlist);}

1717 {(
yyvÆ
.
efõldli°
)=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), (yyv•[0].
exp
)), 
NULL
);}

1723 {(
yyvÆ
.
efõldli°
)=
	`A_EfõldLi°
(
	`A_Efõld
(
	`S_Symbﬁ
((
yyv•
[-4].
svÆ
)), (yyv•[-2].
exp
)), (yyvsp[0].efieldlist));}

1729 {(
yyvÆ
.
ex∂i°
)=
NULL
;}

1735 {(
yyvÆ
.
ex∂i°
)=(
yyv•
[0].explist);}

1741 {(
yyvÆ
.
ex∂i°
)=
	`A_ExpLi°
((
yyv•
[0].
exp
), 
NULL
);}

1747 {(
yyvÆ
.
ex∂i°
)=
	`A_ExpLi°
((
yyv•
[-2].
exp
), (yyvsp[0].explist));}

1753 {(
yyvÆ
.
ex∂i°
)=
	`A_ExpLi°
((
yyv•
[-2].
exp
), A_ExpLi°((yyv•[0].exp), 
NULL
));}

1759 {(
yyvÆ
.
ex∂i°
)=
	`A_ExpLi°
((
yyv•
[-4].
exp
), A_ExpList((yyvsp[-2].exp), (yyvsp[0].explist)));}

1765 {(
yyvÆ
.
de˛i°
)=
NULL
;}

1771 {(
yyvÆ
.
de˛i°
)=
	`A_DecLi°
((
yyv•
[-1].
dec
), (yyvsp[0].declist));}

1777 {(
yyvÆ
.
dec
)=
	`A_Fun˘i⁄Dec
(
EM_tokPos
, (
yyv•
[0].
funde˛i°
));}

1783 {(
yyvÆ
.
dec
)=(
yyv•
[0].dec);}

1789 {(
yyvÆ
.
dec
)=
	`A_Ty≥Dec
(
EM_tokPos
, (
yyv•
[0].
«mëyli°
));}

1795 {(
yyvÆ
.
dec
)=
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)),S_Symbﬁ(""),(yyv•[0].
exp
));}

1801 {(
yyvÆ
.
dec
)=
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[-4].
svÆ
)),S_Symbﬁ((yyv•[-2].svÆ)),(yyv•[0].
exp
));}

1807 {(
yyvÆ
.
funde˛i°
)=
NULL
;}

1813 {(
yyvÆ
.
funde˛i°
)=
	`A_FundecLi°
((
yyv•
[-1].
fundec
), (yyvsp[0].fundeclist));}

1819 {(
yyvÆ
.
fundec
)=
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-5].
svÆ
)), (yyv•[-3].
fõldli°
), S_Symbﬁ(""), (yyv•[0].
exp
));}

1825 {(
yyvÆ
.
fundec
)=
	`A_Fundec
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-7].
svÆ
)), (yyv•[-5].
fõldli°
), S_Symbﬁ((yyv•[-2].svÆ)), (yyv•[0].
exp
));}

1831 {(
yyvÆ
.
«mëyli°
)=
	`A_NamëyLi°
((
yyv•
[0].
«mëy
), 
NULL
);}

1837 {(
yyvÆ
.
«mëyli°
)=
	`A_NamëyLi°
((
yyv•
[-1].
«mëy
), (yyvsp[0].nametylist));}

1843 {(
yyvÆ
.
«mëy
)=
	`A_Namëy
(
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), (yyv•[0].
ty
));}

1849 {(
yyvÆ
.
ty
)=
	`A_NameTy
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[0].
svÆ
)));}

1855 {(
yyvÆ
.
ty
)=
	`A_Rec‹dTy
(
EM_tokPos
, (
yyv•
[-1].
fõldli°
));}

1861 {(
yyvÆ
.
ty
)=
	`A_AºayTy
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[0].
svÆ
)));}

1867 {(
yyvÆ
.
fõldli°
)=
NULL
;}

1873 {(
yyvÆ
.
fõldli°
)=(
yyv•
[0].fieldlist);}

1879 {(
yyvÆ
.
fõldli°
)=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-2].
svÆ
)), S_Symbﬁ((yyv•[0].svÆ))), 
NULL
);}

1885 {(
yyvÆ
.
fõldli°
)=
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
, 
	`S_Symbﬁ
((
yyv•
[-4].
svÆ
)), S_Symbol((yyvsp[-2].sval))), (yyvsp[0].fieldlist));}

1904 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1906 
	`YYPOPSTACK
 (
yyÀn
);

1907 
yyÀn
 = 0;

1908 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1910 *++
yyv•
 = 
yyvÆ
;

1916 
yyn
 = 
yyr1
[yyn];

1918 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1919 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1920 
yy°©e
 = 
yyèbÀ
[yystate];

1922 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1924 
yy√w°©e
;

1930 
yyîæab
:

1933 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

1936 i‡(!
yyîr°©us
)

1938 ++
yy√ºs
;

1939 #i‡! 
YYERROR_VERBOSE


1940 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1942 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

1943 
yys•
, 
yytokí
)

	)

1945 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

1946 
yysy¡ax_îr‹_°©us
;

1947 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1948 i‡(
yysy¡ax_îr‹_°©us
 == 0)

1949 
yymsgp
 = 
yymsg
;

1950 i‡(
yysy¡ax_îr‹_°©us
 == 1)

1952 i‡(
yymsg
 !
yymsgbuf
)

1953 
	`YYSTACK_FREE
 (
yymsg
);

1954 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

1955 i‡(!
yymsg
)

1957 
yymsg
 = 
yymsgbuf
;

1958 
yymsg_Æloc
 =  
yymsgbuf
;

1959 
yysy¡ax_îr‹_°©us
 = 2;

1963 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1964 
yymsgp
 = 
yymsg
;

1967 
	`yyîr‹
 (
yymsgp
);

1968 i‡(
yysy¡ax_îr‹_°©us
 == 2)

1969 
yyexhau°edœb
;

1971 #unde‡
YYSYNTAX_ERROR


1977 i‡(
yyîr°©us
 == 3)

1982 i‡(
yych¨
 <
YYEOF
)

1985 i‡(
yych¨
 =
YYEOF
)

1986 
YYABORT
;

1990 
	`yyde°ru˘
 ("Error: discarding",

1991 
yytokí
, &
yylvÆ
);

1992 
yych¨
 = 
YYEMPTY
;

1998 
yyîæab1
;

2004 
yyîr‹œb
:

2010 
yyîr‹œb
;

2014 
	`YYPOPSTACK
 (
yyÀn
);

2015 
yyÀn
 = 0;

2016 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2017 
yy°©e
 = *
yys•
;

2018 
yyîæab1
;

2024 
yyîæab1
:

2025 
yyîr°©us
 = 3;

2029 
yyn
 = 
yy∑˘
[
yy°©e
];

2030 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2032 
yyn
 +
YYTERROR
;

2033 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2035 
yyn
 = 
yyèbÀ
[yyn];

2036 i‡(0 < 
yyn
)

2042 i‡(
yys•
 =
yyss
)

2043 
YYABORT
;

2046 
	`yyde°ru˘
 ("Error:Öopping",

2047 
yy°os
[
yy°©e
], 
yyv•
);

2048 
	`YYPOPSTACK
 (1);

2049 
yy°©e
 = *
yys•
;

2050 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2053 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2054 *++
yyv•
 = 
yylvÆ
;

2055 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2059 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2061 
yy°©e
 = 
yyn
;

2062 
yy√w°©e
;

2068 
yyac˚±œb
:

2069 
yyªsu…
 = 0;

2070 
yyªtu∫
;

2075 
yyab‹éab
:

2076 
yyªsu…
 = 1;

2077 
yyªtu∫
;

2079 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


2083 
yyexhau°edœb
:

2084 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2085 
yyªsu…
 = 2;

2089 
yyªtu∫
:

2090 i‡(
yych¨
 !
YYEMPTY
)

2094 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2095 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2096 
yytokí
, &
yylvÆ
);

2100 
	`YYPOPSTACK
 (
yyÀn
);

2101 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2102 
yys•
 !
yyss
)

2104 
	`yyde°ru˘
 ("Cleanup:Öopping",

2105 
yy°os
[*
yys•
], 
yyv•
);

2106 
	`YYPOPSTACK
 (1);

2108 #i‚de‡
yyovîÊow


2109 i‡(
yyss
 !
yysß
)

2110 
	`YYSTACK_FREE
 (
yyss
);

2112 #i‡
YYERROR_VERBOSE


2113 i‡(
yymsg
 !
yymsgbuf
)

2114 
	`YYSTACK_FREE
 (
yymsg
);

2116  
yyªsu…
;

2117 
	}
}

	@y.tab.h

33 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


34 
	#YY_YY_Y_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
yydebug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mID
 = 258,

49 
	mSTRING
 = 259,

50 
	mINT
 = 260,

51 
	mCOMMA
 = 261,

52 
	mCOLON
 = 262,

53 
	mSEMICOLON
 = 263,

54 
	mLPAREN
 = 264,

55 
	mRPAREN
 = 265,

56 
	mLBRACK
 = 266,

57 
	mRBRACK
 = 267,

58 
	mLBRACE
 = 268,

59 
	mRBRACE
 = 269,

60 
	mDOT
 = 270,

61 
	mPLUS
 = 271,

62 
	mMINUS
 = 272,

63 
	mTIMES
 = 273,

64 
	mDIVIDE
 = 274,

65 
	mEQ
 = 275,

66 
	mNEQ
 = 276,

67 
	mLT
 = 277,

68 
	mLE
 = 278,

69 
	mGT
 = 279,

70 
	mGE
 = 280,

71 
	mUMINUS
 = 281,

72 
	mAND
 = 282,

73 
	mOR
 = 283,

74 
	mASSIGN
 = 284,

75 
	mARRAY
 = 285,

76 
	mIF
 = 286,

77 
	mTHEN
 = 287,

78 
	mELSE
 = 288,

79 
	mWHILE
 = 289,

80 
	mFOR
 = 290,

81 
	mTO
 = 291,

82 
	mDO
 = 292,

83 
	mLET
 = 293,

84 
	mIN
 = 294,

85 
	mEND
 = 295,

86 
	mOF
 = 296,

87 
	mBREAK
 = 297,

88 
	mNIL
 = 298,

89 
	mFUNCTION
 = 299,

90 
	mVAR
 = 300,

91 
	mTYPE
 = 301

95 
	#ID
 258

	)

96 
	#STRING
 259

	)

97 
	#INT
 260

	)

98 
	#COMMA
 261

	)

99 
	#COLON
 262

	)

100 
	#SEMICOLON
 263

	)

101 
	#LPAREN
 264

	)

102 
	#RPAREN
 265

	)

103 
	#LBRACK
 266

	)

104 
	#RBRACK
 267

	)

105 
	#LBRACE
 268

	)

106 
	#RBRACE
 269

	)

107 
	#DOT
 270

	)

108 
	#PLUS
 271

	)

109 
	#MINUS
 272

	)

110 
	#TIMES
 273

	)

111 
	#DIVIDE
 274

	)

112 
	#EQ
 275

	)

113 
	#NEQ
 276

	)

114 
	#LT
 277

	)

115 
	#LE
 278

	)

116 
	#GT
 279

	)

117 
	#GE
 280

	)

118 
	#UMINUS
 281

	)

119 
	#AND
 282

	)

120 
	#OR
 283

	)

121 
	#ASSIGN
 284

	)

122 
	#ARRAY
 285

	)

123 
	#IF
 286

	)

124 
	#THEN
 287

	)

125 
	#ELSE
 288

	)

126 
	#WHILE
 289

	)

127 
	#FOR
 290

	)

128 
	#TO
 291

	)

129 
	#DO
 292

	)

130 
	#LET
 293

	)

131 
	#IN
 294

	)

132 
	#END
 295

	)

133 
	#OF
 296

	)

134 
	#BREAK
 297

	)

135 
	#NIL
 298

	)

136 
	#FUNCTION
 299

	)

137 
	#VAR
 300

	)

138 
	#TYPE
 301

	)

141 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


143 
	uYYSTYPE


147 
	mpos
;

148 
	mivÆ
;

149 
°rög
 
	msvÆ
;

150 
A_exp
 
	mexp
;

151 
A_expLi°
 
	mex∂i°
;

152 
A_v¨
 
	mv¨
;

153 
A_decLi°
 
	mde˛i°
;

154 
A_dec
 
	mdec
;

155 
A_efõldLi°
 
	mefõldli°
;

156 
A_efõld
 
	mefõld
;

157 
A_«mëy
 
	m«mëy
;

158 
A_«mëyLi°
 
	m«mëyli°
;

159 
A_fõldLi°
 
	mfõldli°
;

160 
A_fõld
 
	mfõld
;

161 
A_fundecLi°
 
	mfunde˛i°
;

162 
A_fundec
 
	mfundec
;

163 
A_ty
 
	mty
;

169 
YYSTYPE
 
	tYYSTYPE
;

170 
	#YYSTYPE_IS_TRIVIAL
 1

	)

171 
	#YYSTYPE_IS_DECLARED
 1

	)

175 
YYSTYPE
 
yylvÆ
;

177 
yy∑r£
 ();

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_INLINE_u«lig√d
 1

	)

27 
	#_HAVE_STRING_ARCH_memp˝y
 1

	)

31 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

32 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

33 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

34 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

35 || 
deföed
 
	g__ßndybridge__
 || deföed 
	g__haswñl__
 \

36 || 
deföed
 
	g__b⁄√Œ__
 || deföed 
	g__sûvîm⁄t__
 \

37 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

38 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

39 || 
deföed
 
	g__amdÁm10__
 || deföed 
	g__bdvî1__
 \

40 || 
deföed
 
	g__bdvî2__
 || deföed 
	g__bdvî3__
 \

41 || 
deföed
 
	g__bdvî4__
 || deföed 
	g__btvî1__
 \

42 || 
deföed
 
	g__btvî2__
)

46 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

47 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

49 #i‚de‡
__STRING_INLINE


50 #i‚de‡
__exã∫_ölöe


51 
	#__STRING_INLINE
 
ölöe


	)

53 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

58 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

59 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

60 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

62 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

63 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

64 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

65 | ((c⁄° *Ë(
§c
))[
idx
])

	)

69 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

70 
	#mem˝y
(
de°
, 
§c
, 
n
) \

71 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

72 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

73 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

74 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

75 ((
n
) == 0 \

76 ? (
de°
) \

77 : (((
n
) % 4 == 0) \

78 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

79 : (((
n
) % 2 == 0) \

80 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

81 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

83 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

84 
size_t
 
__n
);

86 
__STRING_INLINE
 *

87 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

89 
__d0
, 
__d1
;

90 *
__tmp
 = 
__de°
;

91 
__asm__
 
__vﬁ©ûe__


99 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

100 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

102  
__de°
;

103 
	}
}

105 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

106 
size_t
 
__n
);

108 
__STRING_INLINE
 *

109 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

111 
__d0
, 
__d1
;

112 *
__tmp
 = 
__de°
;

113 
__asm__
 
__vﬁ©ûe__


126 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

127 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

129  
__de°
;

130 
	}
}

132 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

134 
__STRING_INLINE
 *

135 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

137 
__d0
, 
__d1
, 
__d2
;

138 *
__tmp
 = 
__de°
;

139 
__asm__
 
__vﬁ©ûe__


150 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

151 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

152 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

153 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

155  
__de°
;

156 
	}
}

158 
	#_HAVE_STRING_ARCH_memmove
 1

	)

159 #i‚de‡
_FORCE_INLINES


162 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

164 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

165 
	`__asm__
 ("memmove");

167 
__STRING_INLINE
 *

168 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

170 
__d0
, 
__d1
, 
__d2
;

171 *
__tmp
 = 
__de°
;

172 i‡(
__de°
 < 
__§c
)

173 
__asm__
 
__vﬁ©ûe__


176 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

177 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

178 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

179 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

181 
__asm__
 
__vﬁ©ûe__


187 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

188 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

189 : "0" (
__n
), "1" (__¿+ (c⁄° *Ë
__§c
),

190 "2" (
__n
 + (*Ë
__tmp
),

191 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

192  
__de°
;

193 
	}
}

197 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

198 #i‚de‡
_FORCE_INLINES


199 #i‚de‡
__PIC__


201 
__STRING_INLINE
 

202 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

204 
__d0
, 
__d1
, 
__d2
;

205 
__ªs
;

206 
__asm__
 
__vﬁ©ûe__


214 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

215 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

216 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

217 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

219  
__ªs
;

220 
	}
}

225 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

226 
	#_USE_STRING_ARCH_mem£t
 1

	)

227 
	#mem£t
(
s
, 
c
, 
n
) \

228 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

229 ? ((
n
) == 1 \

230 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

231 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

232 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

233 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

234 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

235 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

236 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

237 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

238 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

240 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

241 *((*Ë
__s
Ë(Ë(
c
); \

242 
__s
; })

	)

244 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

245 ({ *
__s
 = (
s
); \

247 
__ui
; \

248 
__usi
; \

249 
__uc
; \

250 } *
__u
 = 
__s
; \

251 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

257 i‡((
n
) == 3 || (n) >= 5) \

258 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

261 
n
) \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__ui
 = 
__c
; \

268 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

270 
__u
->
__ui
 = 
__c
; \

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

273 
__u
->
__usi
 = (Ë
__c
; \

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

275 
__u
->
__uc
 = (Ë
__c
; \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__usi
 = (Ë
__c
; \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__uc
 = (Ë
__c
; \

305 
__u
->
__ui
 = 
__c
; \

306 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

308 
__u
->
__ui
 = 
__c
; \

309 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

311 
__u
->
__ui
 = 
__c
; \

312 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

314 
__u
->
__ui
 = 
__c
; \

319 
__s
; })

	)

321 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

322 (((
n
) % 4 == 0) \

323 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

324 
n
) \

325 : (((
n
) % 2 == 0) \

326 ? 
	`__mem£t_c˙_by2
 (
s
, \

327 ((Ë((Ë(
c
))) * 0x01010101,\

328 
n
) \

329 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

331 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

332 
size_t
 
__n
);

334 
__STRING_INLINE
 *

335 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

337 *
__tmp
 = 
__s
;

338 
__d0
;

339 #ifde‡
__i686__


340 
__asm__
 
__vﬁ©ûe__


343 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

344 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

345 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

348 
__asm__
 
__vﬁ©ûe__


354 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359  
__s
;

360 
	}
}

362 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

363 
size_t
 
__n
);

365 
__STRING_INLINE
 *

366 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

368 
__d0
, 
__d1
;

369 *
__tmp
 = 
__s
;

370 #ifde‡
__i686__


371 
__asm__
 
__vﬁ©ûe__


375 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

376 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

377 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

380 
__asm__
 
__vﬁ©ûe__


386 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

387 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

388 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

391  
__s
;

392 
	}
}

394 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

395 (((
n
) % 4 == 0) \

396 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

397 : (((
n
) % 2 == 0) \

398 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

399 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

401 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

403 
__STRING_INLINE
 *

404 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

406 *
__tmp
 = 
__s
;

407 
__d0
;

408 
__asm__
 
__vﬁ©ûe__


418 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

419 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

420 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

422  
__s
;

423 
	}
}

425 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

427 
__STRING_INLINE
 *

428 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

430 
__d0
, 
__d1
;

431 *
__tmp
 = 
__s
;

432 
__asm__
 
__vﬁ©ûe__


443 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

444 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

445 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

447  
__s
;

448 
	}
}

452 
	#_HAVE_STRING_ARCH_memchr
 1

	)

453 #i‚de‡
_FORCE_INLINES


454 
__STRING_INLINE
 *

455 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

457 
__d0
;

458 #ifde‡
__i686__


459 
__d1
;

461 *
__ªs
;

462 i‡(
__n
 == 0)

463  
NULL
;

464 #ifde‡
__i686__


465 
__asm__
 
__vﬁ©ûe__


469 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

470 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

471 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

474 
__asm__
 
__vﬁ©ûe__


480 : "=D" (
__ªs
), "=&c" (
__d0
)

481 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

482 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

485  
__ªs
 - 1;

486 
	}
}

489 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

490 #i‚de‡
_FORCE_INLINES


491 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

493 
__STRING_INLINE
 *

494 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

496 
__d0
;

497 #ifde‡
__i686__


498 
__d1
;

500 *
__ªs
;

501 i‡(
__n
 == 0)

502  
NULL
;

503 #ifde‡
__i686__


504 
__asm__
 
__vﬁ©ûe__


510 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

511 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

512 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

515 
__asm__
 
__vﬁ©ûe__


522 : "=D" (
__ªs
), "=&c" (
__d0
)

523 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

524 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

527  
__ªs
;

528 
	}
}

529 #ifde‡
__USE_GNU


530 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

535 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

536 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

538 #i‚de‡
_FORCE_INLINES


539 
__STRING_INLINE
 *

540 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

542 
__d0
;

543 *
__ªs
;

544 
__asm__
 
__vﬁ©ûe__


547 : "=D" (
__ªs
), "=&c" (
__d0
)

548 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

549 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

551  
__ªs
 - 1;

552 
	}
}

553 #ifde‡
__USE_GNU


554 
__STRING_INLINE
 *

555 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

557  
	`__øwmemchr
 (
__s
, 
__c
);

558 
	}
}

564 
	#_HAVE_STRING_ARCH_°æí
 1

	)

565 
	#°æí
(
°r
) \

566 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

567 ? 
	`__buûtö_°æí
 (
°r
) \

568 : 
	`__°æí_g
 (
°r
)))

	)

569 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

571 
__STRING_INLINE
 
size_t


572 
	$__°æí_g
 (c⁄° *
__°r
)

574 
__dummy
;

575 c⁄° *
__tmp
 = 
__°r
;

576 
__asm__
 
__vﬁ©ûe__


582 : "Ù" (
__tmp
), "=&q" (
__dummy
)

583 : "0" (
__°r
),

584 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

586  
__tmp
 - 
__°r
 - 1;

587 
	}
}

591 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

592 
	#°r˝y
(
de°
, 
§c
) \

593 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

594 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

595 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

596 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

597 (c⁄° *Ë(
§c
), \

598 
	`°æí
 (
§c
) + 1)) \

599 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

601 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

602 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

604 
__ui
; \

605 
__usi
; \

606 
__uc
; \

607 
__c
; \

608 } *
__u
 = (*Ë
__de°
; \

609 
§˛í
) \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

618 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

619 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

620 
__u
->
__uc
 = '\0'; \

623 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__uc
 = '\0'; \

631 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

633 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

636 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

637 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

638 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

640 
__u
->
__uc
 = '\0'; \

643 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

645 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

648 (*Ë
__de°
; }))

	)

650 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

652 
__STRING_INLINE
 *

653 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

655 *
__tmp
 = 
__de°
;

656 
__dummy
;

657 
__asm__
 
__vﬁ©ûe__


666 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

667 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

668 : "0" (
__§c
), "1" (
__tmp
),

669 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

671  
__de°
;

672 
	}
}

675 #ifde‡
__USE_GNU


676 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

678 
	#__°p˝y
(
de°
, 
§c
) \

679 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

680 ? (
	`°æí
 (
§c
) + 1 <= 8 \

681 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

682 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

683 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

684 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

685 ((
§˛í
) % 4 == 0 \

686 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

687 : ((
§˛í
) % 2 == 0 \

688 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

689 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

692 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

694 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

695 (
	`__exãnsi⁄__
 ({ union { \

696 
__ui
; \

697 
__usi
; \

698 
__uc
; \

699 
__c
; \

700 } *
__u
 = (*Ë(
de°
); \

701 
§˛í
) \

704 
__u
->
__uc
 = '\0'; \

707 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

708 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

713 
__u
->
__uc
 = '\0'; \

716 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

717 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

720 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

721 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

722 
__u
->
__uc
 = '\0'; \

725 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

726 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

727 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

728 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

731 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

732 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

733 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

734 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

735 
__u
->
__uc
 = '\0'; \

738 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

739 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

740 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

741 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

744 (*Ë
__u
; }))

	)

746 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

747 
size_t
 
__§˛í
);

749 
__STRING_INLINE
 *

750 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

752 *
__tmp
 = 
__de°
;

753 
__d0
, 
__d1
;

754 
__asm__
 
__vﬁ©ûe__


762 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

763 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

765  
__tmp
;

766 
	}
}

768 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

769 
size_t
 
__§˛í
);

771 
__STRING_INLINE
 *

772 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

774 *
__tmp
 = 
__de°
;

775 
__d0
, 
__d1
;

776 
__asm__
 
__vﬁ©ûe__


789 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

790 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

791 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

792 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

794  
__tmp
 + 2;

795 
	}
}

797 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

798 
size_t
 
__§˛í
);

800 
__STRING_INLINE
 *

801 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

803 
__d0
, 
__d1
;

804 *
__tmp
 = 
__de°
;

805 
__asm__
 
__vﬁ©ûe__


816 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

817 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

818 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

819 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

821  
__tmp
;

822 
	}
}

824 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

826 
__STRING_INLINE
 *

827 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

829 *
__tmp
 = 
__de°
;

830 
__dummy
;

831 
__asm__
 
__vﬁ©ûe__


840 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

841 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

842 : "0" (
__§c
), "1" (
__tmp
),

843 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

845  
__tmp
 - 1;

846 
	}
}

851 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

852 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

853 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

854 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

855 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

856 (c⁄° *Ë(
§c
), 
n
) \

857 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

858 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

859 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

860 (((
§˛í
) % 4 == 0) \

861 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

862 : (((
§˛í
) % 2 == 0) \

863 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

864 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

866 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

867 
size_t
 
__§˛í
, size_à
__n
);

869 
__STRING_INLINE
 *

870 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

872 *
__tmp
 = 
__de°
;

873 
__dummy1
, 
__dummy2
;

874 
__asm__
 
__vﬁ©ûe__


882 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

883 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

884 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

885 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

887 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

888  
__de°
;

889 
	}
}

891 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

892 
size_t
 
__§˛í
, size_à
__n
);

894 
__STRING_INLINE
 *

895 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

897 *
__tmp
 = 
__de°
;

898 
__dummy1
, 
__dummy2
;

899 
__asm__
 
__vﬁ©ûe__


912 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

913 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

914 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

915 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

917 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

918  
__de°
;

919 
	}
}

921 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

922 
size_t
 
__§˛í
, size_à
__n
);

924 
__STRING_INLINE
 *

925 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

927 
__d0
, 
__d1
;

928 *
__tmp
 = 
__de°
;

929 
__asm__
 
__vﬁ©ûe__


940 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

941 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

942 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

943 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

945 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

946  
__de°
;

947 
	}
}

949 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

950 
size_t
 
__n
);

952 
__STRING_INLINE
 *

953 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

955 *
__tmp
 = 
__de°
;

956 
__dummy
;

957 i‡(
__n
 > 0)

958 
__asm__
 
__vﬁ©ûe__


974 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

975 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

978  
__de°
;

979 
	}
}

983 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

984 
	#°rˇt
(
de°
, 
§c
) \

985 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

986 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

987 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

989 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

990 
size_t
 
__§˛í
);

992 
__STRING_INLINE
 *

993 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

995 #ifde‡
__i686__


996 
__d0
;

997 *
__tmp
;

998 
__asm__
 
__vﬁ©ûe__


1000 : "=D" (
__tmp
), "=&c" (
__d0
),

1001 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1002 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

1003 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1005 --
__tmp
;

1007 *
__tmp
 = 
__de°
;

1008 
__asm__
 
__vﬁ©ûe__


1014 : "Ù" (
__tmp
),

1015 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1016 : "0" (
__tmp
),

1017 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1020 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1021  
__de°
;

1022 
	}
}

1024 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1026 
__STRING_INLINE
 *

1027 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1029 *
__tmp
 = 
__de°
;

1030 
__dummy
;

1031 
__asm__
 
__vﬁ©ûe__


1044 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1045 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1046 : "1" (
__tmp
), "2" (
__§c
),

1047 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1049  
__de°
;

1050 
	}
}

1054 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1055 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1056 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1057 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1058 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1059 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1060 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1061 (c⁄° *Ë(
§c
), \

1062 (
n
)Ë0, 
__de°
)) \

1063 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1065 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1066 
size_t
 
__n
);

1068 
__STRING_INLINE
 *

1069 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1071 *
__tmp
 = 
__de°
;

1072 
__dummy
;

1073 #ifde‡
__i686__


1074 
__asm__
 
__vﬁ©ûe__


1088 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1089 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1092 --
__tmp
;

1093 
__asm__
 
__vﬁ©ûe__


1110 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1111 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1114  
__de°
;

1115 
	}
}

1119 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1120 
	#°rcmp
(
s1
, 
s2
) \

1121 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1122 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1123 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1124 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1125 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1126 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1127 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1128 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1129 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1130 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s1
)) \

1133 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1134 (c⁄° *Ë(
s2
), \

1135 
	`°æí
 (
s1
))) \

1136 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1137 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1138 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1139 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1140 (c⁄° *Ë(
s2
), \

1141 
	`°æí
 (
s2
)) \

1142 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1143 (c⁄° *Ë(
s2
), \

1144 
	`°æí
 (
s2
))) \

1145 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1147 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1148 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1149 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1151 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1152 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1155 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1156 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1159 
__ªsu…
; }))

	)

1161 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1162 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1163 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1164 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1166 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1167 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1170 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1171 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1174 
__ªsu…
; }))

	)

1176 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1177 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1178 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1179 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1181 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1182 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1184 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1185 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1186 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1189 
__ªsu…
; }))

	)

1191 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1193 
__STRING_INLINE
 

1194 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1196 
__ªs
;

1197 
__asm__
 
__vﬁ©ûe__


1213 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1214 : "1" (
__s1
), "2" (
__s2
),

1215 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1216 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1218  
__ªs
;

1219 
	}
}

1223 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1224 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1225 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1226 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1227 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1228 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1229 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1231 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1232 
size_t
 
__n
);

1234 
__STRING_INLINE
 

1235 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1237 
__ªs
;

1238 
__asm__
 
__vﬁ©ûe__


1257 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1258 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1259 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1260 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1262  
__ªs
;

1263 
	}
}

1267 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1268 
	#_USE_STRING_ARCH_°rchr
 1

	)

1269 
	#°rchr
(
s
, 
c
) \

1270 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1271 ? ((
c
) == '\0' \

1272 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1273 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1274 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1276 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1278 
__STRING_INLINE
 *

1279 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1281 
__d0
;

1282 *
__ªs
;

1283 
__asm__
 
__vﬁ©ûe__


1293 : "Ù" (
__ªs
), "=&a" (
__d0
)

1294 : "0" (
__s
), "1" (
__c
),

1295 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1297  
__ªs
;

1298 
	}
}

1300 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1302 
__STRING_INLINE
 *

1303 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1305 
__d0
;

1306 *
__ªs
;

1307 
__asm__
 
__vﬁ©ûe__


1318 : "Ù" (
__ªs
), "=&a" (
__d0
)

1319 : "0" (
__s
), "1" (
__c
),

1320 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1322  
__ªs
;

1323 
	}
}

1327 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1328 
	#__°rch∫ul
(
s
, 
c
) \

1329 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1330 ? ((
c
) == '\0' \

1331 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1332 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1333 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1335 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1337 
__STRING_INLINE
 *

1338 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1340 
__d0
;

1341 *
__ªs
;

1342 
__asm__
 
__vﬁ©ûe__


1352 : "Ù" (
__ªs
), "=&a" (
__d0
)

1353 : "0" (
__s
), "1" (
__c
),

1354 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1356  
__ªs
;

1357 
	}
}

1359 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1361 
__STRING_INLINE
 *

1362 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1364 
__d0
;

1365 *
__ªs
;

1366 
__asm__
 
__vﬁ©ûe__


1377 : "Ù" (
__ªs
), "=&a" (
__d0
)

1378 : "0" (
__s
), "1" (
__c
),

1379 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1381  
__ªs
;

1382 
	}
}

1383 #ifde‡
__USE_GNU


1384 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1390 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1391 
	#ödex
(
s
, 
c
) \

1392 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1393 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1394 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1399 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1400 
	#°ºchr
(
s
, 
c
) \

1401 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1402 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1403 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1405 #ifde‡
__i686__


1406 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1408 
__STRING_INLINE
 *

1409 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1411 
__d0
, 
__d1
;

1412 *
__ªs
;

1413 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1444 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1445 : "0" (1), "1" (
__s
), "2" (
__c
),

1446 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1448  
__ªs
 - 1;

1449 
	}
}

1451 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1453 
__STRING_INLINE
 *

1454 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1456 
__d0
, 
__d1
;

1457 *
__ªs
;

1458 
__asm__
 
__vﬁ©ûe__


1468 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1469 : "0" (0), "1" (
__s
), "2" (
__c
),

1470 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1472  
__ªs
;

1473 
	}
}

1475 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1477 
__STRING_INLINE
 *

1478 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1480 
__d0
, 
__d1
;

1481 *
__ªs
;

1482 
__asm__
 
__vﬁ©ûe__


1493 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1494 : "0" (0), "1" (
__s
), "2" (
__c
),

1495 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1497  
__ªs
;

1498 
	}
}

1502 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1504 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1505 
	#rödex
(
s
, 
c
) \

1506 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1507 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1508 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1514 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1515 
	#°rc•n
(
s
, 
ªje˘
) \

1516 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1517 ? ((
ªje˘
)[0] == '\0' \

1518 ? 
	`°æí
 (
s
) \

1519 : ((
ªje˘
)[1] == '\0' \

1520 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1521 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1522 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1524 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1526 #i‚de‡
_FORCE_INLINES


1527 
__STRING_INLINE
 
size_t


1528 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1530 
__d0
;

1531 *
__ªs
;

1532 
__asm__
 
__vﬁ©ûe__


1541 : "Ù" (
__ªs
), "=&a" (
__d0
)

1542 : "0" (
__s
), "1" (
__ªje˘
),

1543 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1545  (
__ªs
 - 1Ë- 
__s
;

1546 
	}
}

1549 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1550 
size_t
 
__ªje˘_Àn
);

1552 
__STRING_INLINE
 
size_t


1553 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1555 
__d0
, 
__d1
, 
__d2
;

1556 c⁄° *
__ªs
;

1557 
__asm__
 
__vﬁ©ûe__


1568 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1569 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1571  (
__ªs
 - 1Ë- 
__s
;

1572 
	}
}

1574 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1575 #ifde‡
__PIC__


1577 
__STRING_INLINE
 
size_t


1578 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1580 
__d0
, 
__d1
, 
__d2
;

1581 c⁄° *
__ªs
;

1582 
__asm__
 
__vﬁ©ûe__


1599 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1600 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1602  (
__ªs
 - 1Ë- 
__s
;

1603 
	}
}

1605 
__STRING_INLINE
 
size_t


1606 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1608 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1609 c⁄° *
__ªs
;

1610 
__asm__
 
__vﬁ©ûe__


1624 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1625 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1628  (
__ªs
 - 1Ë- 
__s
;

1629 
	}
}

1635 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1636 
	#°r•n
(
s
, 
ac˚±
) \

1637 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1638 ? ((
ac˚±
)[0] == '\0' \

1639 ? ((Ë(
s
), 0) \

1640 : ((
ac˚±
)[1] == '\0' \

1641 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1642 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1643 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1645 #i‚de‡
_FORCE_INLINES


1646 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1651 
__d0
;

1652 *
__ªs
;

1654 
__asm__
 
__vﬁ©ûe__


1660 : "Ù" (
__ªs
), "=&q" (
__d0
)

1661 : "0" (
__s
), "1" (
__ac˚±
),

1662 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1664  (
__ªs
 - 1Ë- 
__s
;

1665 
	}
}

1668 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1669 
size_t
 
__ac˚±_Àn
);

1671 
__STRING_INLINE
 
size_t


1672 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1674 
__d0
, 
__d1
, 
__d2
;

1675 c⁄° *
__ªs
;

1676 
__asm__
 
__vﬁ©ûe__


1687 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1688 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1691 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1692 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1694  (
__ªs
 - 1Ë- 
__s
;

1695 
	}
}

1697 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1698 #ifde‡
__PIC__


1700 
__STRING_INLINE
 
size_t


1701 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1703 
__d0
, 
__d1
, 
__d2
;

1704 c⁄° *
__ªs
;

1705 
__asm__
 
__vﬁ©ûe__


1721 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1722 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1724  (
__ªs
 - 1Ë- 
__s
;

1725 
	}
}

1727 
__STRING_INLINE
 
size_t


1728 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1730 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1731 c⁄° *
__ªs
;

1732 
__asm__
 
__vﬁ©ûe__


1746 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1747 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1749  (
__ªs
 - 1Ë- 
__s
;

1750 
	}
}

1755 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1756 
	#°Ωbrk
(
s
, 
ac˚±
) \

1757 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1758 ? ((
ac˚±
)[0] == '\0' \

1759 ? ((Ë(
s
), (*) 0) \

1760 : ((
ac˚±
)[1] == '\0' \

1761 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1762 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1763 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1765 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1766 
size_t
 
__ac˚±_Àn
);

1768 
__STRING_INLINE
 *

1769 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1771 
__d0
, 
__d1
, 
__d2
;

1772 *
__ªs
;

1773 
__asm__
 
__vﬁ©ûe__


1788 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1789 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1791  
__ªs
;

1792 
	}
}

1794 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1795 #ifde‡
__PIC__


1797 
__STRING_INLINE
 *

1798 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1800 
__d0
, 
__d1
, 
__d2
;

1801 *
__ªs
;

1802 
__asm__
 
__vﬁ©ûe__


1823 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1824 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1826  
__ªs
;

1827 
	}
}

1829 
__STRING_INLINE
 *

1830 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1832 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1833 *
__ªs
;

1834 
__asm__
 
__vﬁ©ûe__


1853 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1854 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1856  
__ªs
;

1857 
	}
}

1862 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1863 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1864 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1865 ? ((
√edÀ
)[0] == '\0' \

1866 ? (
hay°ack
) \

1867 : ((
√edÀ
)[1] == '\0' \

1868 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1869 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1870 
	`°æí
 (
√edÀ
)))) \

1871 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1875 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1876 c⁄° 
__√edÀ
[],

1877 
size_t
 
__√edÀ_Àn
);

1879 
__STRING_INLINE
 *

1880 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1881 
size_t
 
__√edÀ_Àn
)

1883 
__d0
, 
__d1
, 
__d2
;

1884 *
__ªs
;

1885 
__asm__
 
__vﬁ©ûe__


1898 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1899 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1901  
__ªs
;

1902 
	}
}

1904 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1905 c⁄° *
__√edÀ
);

1906 #ifde‡
__PIC__


1908 
__STRING_INLINE
 *

1909 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1911 
__d0
, 
__d1
, 
__d2
;

1912 *
__ªs
;

1913 
__asm__
 
__vﬁ©ûe__


1932 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1933 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1934 "d" (
__√edÀ
)

1936  
__ªs
;

1937 
	}
}

1939 
__STRING_INLINE
 *

1940 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1942 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1943 *
__ªs
;

1944 
__asm__
 
__vﬁ©ûe__


1961 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1962 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1963 "b" (
__√edÀ
)

1965  
__ªs
;

1966 
	}
}

1972 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1973 #ifde‡
__i686__


1974 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1975 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1976 ? 
	`__buûtö_ffs
 (
w‹d
) \

1977 : ({ 
__˙t
, 
__tmp
; \

1978 
__asm__
 
__vﬁ©ûe__
 \

1981 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1982 : "rm" (
w‹d
), "1" (-1)); \

1983 
__˙t
 + 1; }))

	)

1985 #i‚de‡
ff¶


1986 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1991 #i‚de‡
_FORCE_INLINES


1992 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_INLINE_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_INLINE_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_INLINE_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_INLINE_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_INLINE_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #ifde‡
__USE_POSIX


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_MISC


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_XOPEN2K8


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_MISC


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/locale.h

19 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


23 #i‚de‡
_BITS_LOCALE_H


24 
	#_BITS_LOCALE_H
 1

	)

26 
	#__LC_CTYPE
 0

	)

27 
	#__LC_NUMERIC
 1

	)

28 
	#__LC_TIME
 2

	)

29 
	#__LC_COLLATE
 3

	)

30 
	#__LC_MONETARY
 4

	)

31 
	#__LC_MESSAGES
 5

	)

32 
	#__LC_ALL
 6

	)

33 
	#__LC_PAPER
 7

	)

34 
	#__LC_NAME
 8

	)

35 
	#__LC_ADDRESS
 9

	)

36 
	#__LC_TELEPHONE
 10

	)

37 
	#__LC_MEASUREMENT
 11

	)

38 
	#__LC_IDENTIFICATION
 12

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 sig√d 
	m__rwñisi⁄
;

188 #ifde‡ 
__ILP32__


189 
	m__∑d1
[3];

190 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

192 
	m__∑d1
[7];

193 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

195 
	m__∑d2
;

198 
	m__Êags
;

199 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

200 } 
	m__d©a
;

204 
	m__lock
;

205 
	m__ƒ_ªadîs
;

206 
	m__ªadîs_wakeup
;

207 
	m__wrôî_wakeup
;

208 
	m__ƒ_ªadîs_queued
;

209 
	m__ƒ_wrôîs_queued
;

212 
	m__Êags
;

213 
	m__sh¨ed
;

214 sig√d 
	m__rwñisi⁄
;

215 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

216 
	m__∑d2
;

217 
	m__wrôî
;

218 } 
	m__d©a
;

220 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

221 
	m__Æign
;

222 } 
	t±hªad_rwlock_t
;

226 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

227 
	m__Æign
;

228 } 
	t±hªad_rwlock©å_t
;

232 #ifde‡
__USE_XOPEN2K


234 vﬁ©ûê
	t±hªad_•ölock_t
;

241 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

242 
	m__Æign
;

243 } 
	t±hªad_b¨rõr_t
;

247 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

248 
	m__Æign
;

249 } 
	t±hªad_b¨rõøâr_t
;

253 #i‚de‡
__x86_64__


255 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 #i‡(!
deföed
 
_N‹ëu∫
 \

393 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

394 && !
	$__GNUC_PREREQ
 (4,7))

395 #i‡
	`__GNUC_PREREQ
 (2,8)

396 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

398 
	#_N‹ëu∫


	)

402 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

403 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

404 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

405 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

406 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

407 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

410 
	~<bôs/w‹dsize.h
>

412 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


413 
	#__LDBL_COMPAT
 1

	)

414 #ifde‡
__REDIRECT


415 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

416 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

417 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

418 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

419 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

420 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

421 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

422 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

423 
	#__LDBL_REDIR_DECL
(
«me
) \

424 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

425 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

426 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

427 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

428 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

431 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


432 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

433 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

434 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

435 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

436 
	#__LDBL_REDIR_DECL
(
«me
)

	)

437 #ifde‡
__REDIRECT


438 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

439 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

440 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_quîy_moduÀ


	)

14 
	#__°ub___com∑t_u£lib


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gëmsg


	)

20 
	#__°ub_gây


	)

21 
	#__°ub_lchmod


	)

22 
	#__°ub_nfs£rv˘l


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

17 
	#ENOSYS
 38

	)

19 
	#ENOTEMPTY
 39

	)

20 
	#ELOOP
 40

	)

21 
	#EWOULDBLOCK
 
EAGAIN


	)

22 
	#ENOMSG
 42

	)

23 
	#EIDRM
 43

	)

24 
	#ECHRNG
 44

	)

25 
	#EL2NSYNC
 45

	)

26 
	#EL3HLT
 46

	)

27 
	#EL3RST
 47

	)

28 
	#ELNRNG
 48

	)

29 
	#EUNATCH
 49

	)

30 
	#ENOCSI
 50

	)

31 
	#EL2HLT
 51

	)

32 
	#EBADE
 52

	)

33 
	#EBADR
 53

	)

34 
	#EXFULL
 54

	)

35 
	#ENOANO
 55

	)

36 
	#EBADRQC
 56

	)

37 
	#EBADSLT
 57

	)

39 
	#EDEADLOCK
 
EDEADLK


	)

41 
	#EBFONT
 59

	)

42 
	#ENOSTR
 60

	)

43 
	#ENODATA
 61

	)

44 
	#ETIME
 62

	)

45 
	#ENOSR
 63

	)

46 
	#ENONET
 64

	)

47 
	#ENOPKG
 65

	)

48 
	#EREMOTE
 66

	)

49 
	#ENOLINK
 67

	)

50 
	#EADV
 68

	)

51 
	#ESRMNT
 69

	)

52 
	#ECOMM
 70

	)

53 
	#EPROTO
 71

	)

54 
	#EMULTIHOP
 72

	)

55 
	#EDOTDOT
 73

	)

56 
	#EBADMSG
 74

	)

57 
	#EOVERFLOW
 75

	)

58 
	#ENOTUNIQ
 76

	)

59 
	#EBADFD
 77

	)

60 
	#EREMCHG
 78

	)

61 
	#ELIBACC
 79

	)

62 
	#ELIBBAD
 80

	)

63 
	#ELIBSCN
 81

	)

64 
	#ELIBMAX
 82

	)

65 
	#ELIBEXEC
 83

	)

66 
	#EILSEQ
 84

	)

67 
	#ERESTART
 85

	)

68 
	#ESTRPIPE
 86

	)

69 
	#EUSERS
 87

	)

70 
	#ENOTSOCK
 88

	)

71 
	#EDESTADDRREQ
 89

	)

72 
	#EMSGSIZE
 90

	)

73 
	#EPROTOTYPE
 91

	)

74 
	#ENOPROTOOPT
 92

	)

75 
	#EPROTONOSUPPORT
 93

	)

76 
	#ESOCKTNOSUPPORT
 94

	)

77 
	#EOPNOTSUPP
 95

	)

78 
	#EPFNOSUPPORT
 96

	)

79 
	#EAFNOSUPPORT
 97

	)

80 
	#EADDRINUSE
 98

	)

81 
	#EADDRNOTAVAIL
 99

	)

82 
	#ENETDOWN
 100

	)

83 
	#ENETUNREACH
 101

	)

84 
	#ENETRESET
 102

	)

85 
	#ECONNABORTED
 103

	)

86 
	#ECONNRESET
 104

	)

87 
	#ENOBUFS
 105

	)

88 
	#EISCONN
 106

	)

89 
	#ENOTCONN
 107

	)

90 
	#ESHUTDOWN
 108

	)

91 
	#ETOOMANYREFS
 109

	)

92 
	#ETIMEDOUT
 110

	)

93 
	#ECONNREFUSED
 111

	)

94 
	#EHOSTDOWN
 112

	)

95 
	#EHOSTUNREACH
 113

	)

96 
	#EALREADY
 114

	)

97 
	#EINPROGRESS
 115

	)

98 
	#ESTALE
 116

	)

99 
	#EUCLEAN
 117

	)

100 
	#ENOTNAM
 118

	)

101 
	#ENAVAIL
 119

	)

102 
	#EISNAM
 120

	)

103 
	#EREMOTEIO
 121

	)

104 
	#EDQUOT
 122

	)

106 
	#ENOMEDIUM
 123

	)

107 
	#EMEDIUMTYPE
 124

	)

108 
	#ECANCELED
 125

	)

109 
	#ENOKEY
 126

	)

110 
	#EKEYEXPIRED
 127

	)

111 
	#EKEYREVOKED
 128

	)

112 
	#EKEYREJECTED
 129

	)

115 
	#EOWNERDEAD
 130

	)

116 
	#ENOTRECOVERABLE
 131

	)

118 
	#ERFKILL
 132

	)

120 
	#EHWPOISON
 133

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_SETOFFSET
 0x0100

	)

64 
	#ADJ_MICRO
 0x1000

	)

65 
	#ADJ_NANO
 0x2000

	)

66 
	#ADJ_TICK
 0x4000

	)

67 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

68 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

71 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

72 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

73 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

74 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

75 
	#MOD_STATUS
 
ADJ_STATUS


	)

76 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

77 
	#MOD_CLKB
 
ADJ_TICK


	)

78 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

79 
	#MOD_TAI
 
ADJ_TAI


	)

80 
	#MOD_MICRO
 
ADJ_MICRO


	)

81 
	#MOD_NANO
 
ADJ_NANO


	)

85 
	#STA_PLL
 0x0001

	)

86 
	#STA_PPSFREQ
 0x0002

	)

87 
	#STA_PPSTIME
 0x0004

	)

88 
	#STA_FLL
 0x0008

	)

90 
	#STA_INS
 0x0010

	)

91 
	#STA_DEL
 0x0020

	)

92 
	#STA_UNSYNC
 0x0040

	)

93 
	#STA_FREQHOLD
 0x0080

	)

95 
	#STA_PPSSIGNAL
 0x0100

	)

96 
	#STA_PPSJITTER
 0x0200

	)

97 
	#STA_PPSWANDER
 0x0400

	)

98 
	#STA_PPSERROR
 0x0800

	)

100 
	#STA_CLOCKERR
 0x1000

	)

101 
	#STA_NANO
 0x2000

	)

102 
	#STA_MODE
 0x4000

	)

103 
	#STA_CLK
 0x8000

	)

106 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

107 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
127
2407
absyn.c
absyn.h
assem.c
assem.h
canon.c
canon.h
codegen.c
codegen.h
color.c
color.h
env.c
env.h
errormsg.c
errormsg.h
escape.c
escape.h
flowgraph.c
flowgraph.h
frame.h
graph.c
graph.h
helper.h
lex.yy.c
liveness.c
liveness.h
main.c
parse.c
parse.h
prabsyn.c
prabsyn.h
printtree.c
printtree.h
regalloc.c
regalloc.h
runtime.c
semant.c
semant.h
symbol.c
symbol.h
table.c
table.h
temp.c
temp.h
tiger.y
translate.c
translate.h
tree.c
tree.h
types.c
types.h
util.c
util.h
x86frame.c
y.tab.c
y.tab.h
/usr/include/alloca.h
/usr/include/assert.h
/usr/include/errno.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/malloc.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/locale.h
/usr/include/stdint.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/locale.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/asm/errno.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/timex.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
